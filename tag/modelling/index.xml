<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Modelling | anders e</title>
    <link>/tag/modelling/</link>
      <atom:link href="/tag/modelling/index.xml" rel="self" type="application/rss+xml" />
    <description>Modelling</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2023 Anders E. Nielsen</copyright><lastBuildDate>Sun, 12 Mar 2023 00:00:00 +0000</lastBuildDate>
    <image>
      <url>/media/icon_hu0b500a15011e1e483635372eebf6e1df_24681_512x512_fill_lanczos_center_3.png</url>
      <title>Modelling</title>
      <link>/tag/modelling/</link>
    </image>
    
    <item>
      <title>Bayesian Optimisation from Scratch in R</title>
      <link>/post/bayesian-opt-r/</link>
      <pubDate>Sun, 12 Mar 2023 00:00:00 +0000</pubDate>
      <guid>/post/bayesian-opt-r/</guid>
      <description>
&lt;!DOCTYPE html&gt;
&lt;html xmlns=&#34;http://www.w3.org/1999/xhtml&#34; lang=&#34;&#34; xml:lang=&#34;&#34;&gt;&lt;head&gt;
  &lt;meta charset=&#34;utf-8&#34;&gt;
  &lt;meta name=&#34;generator&#34; content=&#34;quarto-0.2.243&#34;&gt;
  &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0, user-scalable=yes&#34;&gt;
  &lt;title&gt;Bayesian Optimisation from Scratch in R&lt;/title&gt;
  &lt;style&gt;
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    pre &gt; code.sourceCode { white-space: pre; position: relative; }
    pre &gt; code.sourceCode &gt; span { display: inline-block; line-height: 1.25; }
    pre &gt; code.sourceCode &gt; span:empty { height: 1.2em; }
    .sourceCode { overflow: visible; }
    code.sourceCode &gt; span { color: inherit; text-decoration: inherit; }
    div.sourceCode { margin: 1em 0; }
    pre.sourceCode { margin: 0; }
    @media screen {
    div.sourceCode { overflow: auto; }
    }
    @media print {
    pre &gt; code.sourceCode { white-space: pre-wrap; }
    pre &gt; code.sourceCode &gt; span { text-indent: -5em; padding-left: 5em; }
    }
    pre.numberSource code
      { counter-reset: source-line 0; }
    pre.numberSource code &gt; span
      { position: relative; left: -4em; counter-increment: source-line; }
    pre.numberSource code &gt; span &gt; a:first-child::before
      { content: counter(source-line);
        position: relative; left: -1em; text-align: right; vertical-align: baseline;
        border: none; display: inline-block;
        -webkit-touch-callout: none; -webkit-user-select: none;
        -khtml-user-select: none; -moz-user-select: none;
        -ms-user-select: none; user-select: none;
        padding: 0 4px; width: 4em;
        color: #aaaaaa;
      }
    pre.numberSource { margin-left: 3em; border-left: 1px solid #aaaaaa;  padding-left: 4px; }
    div.sourceCode
      {   }
    @media screen {
    pre &gt; code.sourceCode &gt; span &gt; a:first-child::before { text-decoration: underline; }
    }
    code span.al { color: #ff0000; font-weight: bold; } /* Alert */
    code span.an { color: #60a0b0; font-weight: bold; font-style: italic; } /* Annotation */
    code span.at { color: #7d9029; } /* Attribute */
    code span.bn { color: #40a070; } /* BaseN */
    code span.bu { } /* BuiltIn */
    code span.cf { color: #007020; font-weight: bold; } /* ControlFlow */
    code span.ch { color: #4070a0; } /* Char */
    code span.cn { color: #880000; } /* Constant */
    code span.co { color: #60a0b0; font-style: italic; } /* Comment */
    code span.cv { color: #60a0b0; font-weight: bold; font-style: italic; } /* CommentVar */
    code span.do { color: #ba2121; font-style: italic; } /* Documentation */
    code span.dt { color: #902000; } /* DataType */
    code span.dv { color: #40a070; } /* DecVal */
    code span.er { color: #ff0000; font-weight: bold; } /* Error */
    code span.ex { } /* Extension */
    code span.fl { color: #40a070; } /* Float */
    code span.fu { color: #06287e; } /* Function */
    code span.im { } /* Import */
    code span.in { color: #60a0b0; font-weight: bold; font-style: italic; } /* Information */
    code span.kw { color: #007020; font-weight: bold; } /* Keyword */
    code span.op { color: #666666; } /* Operator */
    code span.ot { color: #007020; } /* Other */
    code span.pp { color: #bc7a00; } /* Preprocessor */
    code span.sc { color: #4070a0; } /* SpecialChar */
    code span.ss { color: #bb6688; } /* SpecialString */
    code span.st { color: #4070a0; } /* String */
    code span.va { color: #19177c; } /* Variable */
    code span.vs { color: #4070a0; } /* VerbatimString */
    code span.wa { color: #60a0b0; font-weight: bold; font-style: italic; } /* Warning */
  &lt;/style&gt;

  &lt;script src=&#34;https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml-full.js&#34; type=&#34;text/javascript&#34;&gt;&lt;/script&gt;
  &lt;!--[if lt IE 9]&gt;
    &lt;script src=&#34;//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js&#34;&gt;&lt;/script&gt;
  &lt;![endif]--&gt;
  &lt;script src=&#34;bayes-opt_files/libs/clipboard/clipboard.min.js&#34;&gt;&lt;/script&gt;
  &lt;script src=&#34;bayes-opt_files/libs/quarto-html/quarto.js&#34;&gt;&lt;/script&gt;
  &lt;script src=&#34;bayes-opt_files/libs/quarto-html/popper.min.js&#34;&gt;&lt;/script&gt;
  &lt;script src=&#34;bayes-opt_files/libs/quarto-html/tippy.umd.min.js&#34;&gt;&lt;/script&gt;
  &lt;script src=&#34;bayes-opt_files/libs/quarto-html/anchor.min.js&#34;&gt;&lt;/script&gt;
  &lt;link href=&#34;bayes-opt_files/libs/quarto-html/tippy.css&#34; rel=&#34;stylesheet&#34;&gt;
  &lt;link href=&#34;bayes-opt_files/libs/quarto-html/quarto-syntax-highlighting.css&#34; rel=&#34;stylesheet&#34;&gt;
  &lt;script src=&#34;bayes-opt_files/libs/bootstrap/bootstrap.min.js&#34;&gt;&lt;/script&gt;
  &lt;link href=&#34;bayes-opt_files/libs/bootstrap/bootstrap-icons.css&#34; rel=&#34;stylesheet&#34;&gt;
  &lt;link href=&#34;bayes-opt_files/libs/bootstrap/bootstrap.min.css&#34; rel=&#34;stylesheet&#34;&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div id=&#34;quarto-content&#34; class=&#34;container-fluid page-layout-article&#34;&gt;
&lt;div class=&#34;page-columns&#34;&gt;
&lt;main class=&#34;content&#34;&gt;
&lt;header id=&#34;title-block-header&#34;&gt;
&lt;/header&gt;
&lt;p&gt;Bayesian optimisation is a powerful technique for optimising expensive functions or processes. In many applications, such as drug discovery, manufacturing, machine learning, or scientific experimentation, the function or process to be optimised may be time consuming or costly to evaluate. Bayesian optimisation provides a framework for sequential experimentation and for finding optima with as few evaluations as possible.&lt;/p&gt;
&lt;p&gt;This post seeks to introduce the core ideas and components of Bayesian optimisation. Along with the introduction are implementations of all the core components of Bayesian optimisation in R. The implementations only use base R and Tidyverse - they are designed to be simple and not necessarily efficient.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb1&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb1-1&#34;&gt;&lt;a href=&#34;#cb1-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;library&lt;/span&gt;(ggplot2)&lt;/span&gt;
&lt;span id=&#34;cb1-2&#34;&gt;&lt;a href=&#34;#cb1-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;library&lt;/span&gt;(magrittr)&lt;/span&gt;
&lt;span id=&#34;cb1-3&#34;&gt;&lt;a href=&#34;#cb1-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;set.seed&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;4444&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb1-4&#34;&gt;&lt;a href=&#34;#cb1-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-5&#34;&gt;&lt;a href=&#34;#cb1-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;set_dim &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;dim&amp;lt;-&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;`&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-6&#34;&gt;&lt;a href=&#34;#cb1-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;colour &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;list&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb1-7&#34;&gt;&lt;a href=&#34;#cb1-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;at&#34;&gt;orange_dark =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;#fb8500&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb1-8&#34;&gt;&lt;a href=&#34;#cb1-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;at&#34;&gt;orange_light =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;#ffb703&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb1-9&#34;&gt;&lt;a href=&#34;#cb1-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;at&#34;&gt;blue_dark =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;#023047&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb1-10&#34;&gt;&lt;a href=&#34;#cb1-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;at&#34;&gt;azure =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;#219ebc&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb1-11&#34;&gt;&lt;a href=&#34;#cb1-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;at&#34;&gt;blue_light =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;#8ecae6&#34;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb1-12&#34;&gt;&lt;a href=&#34;#cb1-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The core idea behind Bayesian optimisation is to use a surrogate model to approximate a true function, and then use this approximation to determine the next point to evaluate. Typically, Gaussian processes or other similar probabilistic models are used as surrogate models.&lt;/p&gt;
&lt;p&gt;The surrogate model is initialised with a few points and an acquisition function is then used to determine the next point to evaluate. The acquisition function balances exploration, ie. searching the regions of covariate space where the uncertainty is high, and exploitation ie. searching the regions where the surrogate model predicts a high value.&lt;/p&gt;
&lt;p&gt;After the next point is evaluated, it is added to the existing data and the surrogate model is updated. The process of selecting the next point to evaluate and updating the surrogate model is repeated until a stopping criterion is met. This could be when subsequent experiments stop yielding significantly different or better results. In real-world applications, a budget might only allow for so many experiments.&lt;/p&gt;
&lt;p&gt;Bayesian optimisation has several advantages over other optimisation methods, including its ability to handle expensive functions and processes with a small number of evaluations. It also performs well in cases with noisy or uncertain data. However, while it can be considered a machine learning model, the surrogate model obtained through Bayesian optimisation is not a universally good approximation of the objective function and is not necessarily suitable for cases where extensive inference or interpretation is needed.&lt;/p&gt;
&lt;section id=&#34;core-components-of-bayesian-optimisation&#34; class=&#34;level2&#34;&gt;
&lt;h2 class=&#34;anchored&#34; data-anchor-id=&#34;core-components-of-bayesian-optimisation&#34;&gt;Core Components of Bayesian Optimisation&lt;/h2&gt;
&lt;p&gt;There are five main components to Bayesian optimisation&lt;/p&gt;
&lt;section id=&#34;objective-function&#34; class=&#34;level5&#34;&gt;
&lt;h5 class=&#34;anchored&#34; data-anchor-id=&#34;objective-function&#34;&gt;Objective Function&lt;/h5&gt;
&lt;p&gt;The objective function is the function or process that needs to be optimised, but which is expensive or time consuming to evaluate. The objective function is typically a black box, meaning that its mathematical form is unknown, and only its inputs and outputs can be observed.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&#34;surrogate-model&#34; class=&#34;level5&#34;&gt;
&lt;h5 class=&#34;anchored&#34; data-anchor-id=&#34;surrogate-model&#34;&gt;Surrogate Model&lt;/h5&gt;
&lt;p&gt;The surrogate is a regression model that is used to approximate the objective function. The most commonly used surrogate model in Bayesian optimization is a Gaussian process, which is a flexible, non-parametric model that can capture complex, non-linear relationships between the inputs and outputs of the objective function.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&#34;acquisition-function&#34; class=&#34;level5&#34;&gt;
&lt;h5 class=&#34;anchored&#34; data-anchor-id=&#34;acquisition-function&#34;&gt;Acquisition Function&lt;/h5&gt;
&lt;p&gt;The acquisition function is a function that is used to determine the next point to evaluate in the search space. The acquisition function balances exploration and exploitation.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&#34;initial-training-data&#34; class=&#34;level5&#34;&gt;
&lt;h5 class=&#34;anchored&#34; data-anchor-id=&#34;initial-training-data&#34;&gt;Initial Training Data&lt;/h5&gt;
&lt;p&gt;Bayesian optimisation requires some initial data to construct the surrogate model. This data can be obtained by evaluating the objective function at a few points in the search space. Given that the total experiment budget is often limited, much consideration often goes into deciding these initial training points.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&#34;stopping-criterion&#34; class=&#34;level5&#34;&gt;
&lt;h5 class=&#34;anchored&#34; data-anchor-id=&#34;stopping-criterion&#34;&gt;Stopping Criterion&lt;/h5&gt;
&lt;p&gt;Bayesian optimisation might require a stopping criterion to determine when to stop the search. This could be some measure of convergence, but often the number of experiments or deadlines set the constraints.&lt;/p&gt;
&lt;p&gt;In the following sections, each of these components are discussed in greater detail and are implemented in R.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id=&#34;objective-function-1&#34; class=&#34;level2&#34;&gt;
&lt;h2 class=&#34;anchored&#34; data-anchor-id=&#34;objective-function-1&#34;&gt;Objective Function&lt;/h2&gt;
&lt;p&gt;Bayesian optimization can be applied to optimise any function or process that can be thought of as a black box function, &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt;, that takes as input a set of covariates, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{x}\)&lt;/span&gt;, and returns a scalar, &lt;span class=&#34;math inline&#34;&gt;\(y\)&lt;/span&gt;. Sometimes the actual readings from such function are noisy, i.e.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[y = f(\mathbf{x}) + \epsilon\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\(\epsilon\)&lt;/span&gt; is the noise, often assumed to be Gaussian &lt;span class=&#34;math inline&#34;&gt;\(\epsilon \sim \mathcal{N}(0, \sigma_{\epsilon}^2)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Some common examples of real world objective functions include&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ML Hyperparameters&lt;/strong&gt;. Machine learning model hyperparameters such as learning rate or regularisation strength are expensive to optimise, since they require retraining the model for each iteration. Here the model hyperparameters would be the input and the model output would be the scalar objective for Bayesian optimisation.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Design of experiments&lt;/strong&gt;. Optimising the parameters of chemical or biological experiments can save both time and money, or even accelerate the discovery of new drugs or products.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Manufacturing&lt;/strong&gt;. A manufacturing process can often be thought of as have a set of defined inputs (material, flow, settings, etc.) and measurable outputs that should be maximised (eg. product output or yield) or minimised (eg. waste).&lt;/p&gt;
&lt;section id=&#34;benchmarking-functions&#34; class=&#34;level3&#34;&gt;
&lt;h3 class=&#34;anchored&#34; data-anchor-id=&#34;benchmarking-functions&#34;&gt;Benchmarking Functions&lt;/h3&gt;
&lt;p&gt;Since we are just exploring Bayesian optimisation at a high level, we will not have an actual black box process to optimise. Instead, we will use a benchmark function to test our implementation of Bayesian optimisation.&lt;/p&gt;
&lt;p&gt;There are many good benchmark functions. One such is the Ackley function. It is defined as:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[f(\mathbf{x}) = -a\exp\left(-b\sqrt{\frac{1}{d}\sum_{i=1}^dx_i^2}\right) - \exp\left(\frac{1}{d}\sum_{i=1}^d \cos(c x_i)\right) + a + \exp(1)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\(d\)&lt;/span&gt; is the number of dimensions and &lt;span class=&#34;math inline&#34;&gt;\(a\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(b\)&lt;/span&gt;, and &lt;span class=&#34;math inline&#34;&gt;\(c\)&lt;/span&gt; are constants. The global minimum of the Ackley function is &lt;span class=&#34;math inline&#34;&gt;\(f(\mathbf{x})=0\)&lt;/span&gt; at &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{x}=(0,0,...,0)\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For this implementation the constants are set at &lt;span class=&#34;math inline&#34;&gt;\(a = 20\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(b = 0.2\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(c = 2\pi\)&lt;/span&gt;, and the function can be applied to a matrix of observations, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{X}\)&lt;/span&gt;, rather than just a single vector of covariates.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb2&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb2-1&#34;&gt;&lt;a href=&#34;#cb2-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;ackley &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(X) {&lt;/span&gt;
&lt;span id=&#34;cb2-2&#34;&gt;&lt;a href=&#34;#cb2-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;is.null&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X))) &lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X) &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt;(X))&lt;/span&gt;
&lt;span id=&#34;cb2-3&#34;&gt;&lt;a href=&#34;#cb2-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  d &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ncol&lt;/span&gt;(X)&lt;/span&gt;
&lt;span id=&#34;cb2-4&#34;&gt;&lt;a href=&#34;#cb2-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  part1 &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;exp&lt;/span&gt;(&lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;0.2&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;sqrt&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;/&lt;/span&gt;d&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;rowSums&lt;/span&gt;(X&lt;span class=&#34;sc&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)))&lt;/span&gt;
&lt;span id=&#34;cb2-5&#34;&gt;&lt;a href=&#34;#cb2-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  part2 &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;exp&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;/&lt;/span&gt;d&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;rowSums&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;cos&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;pi&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;X)))&lt;/span&gt;
&lt;span id=&#34;cb2-6&#34;&gt;&lt;a href=&#34;#cb2-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  part1 &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; part2 &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;exp&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb2-7&#34;&gt;&lt;a href=&#34;#cb2-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;section id=&#34;todo-plot-ackley&#34; class=&#34;level5&#34;&gt;
&lt;h5 class=&#34;anchored&#34; data-anchor-id=&#34;todo-plot-ackley&#34;&gt;TODO: plot ackley&lt;/h5&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id=&#34;surrogate-model-gaussian-process-regression&#34; class=&#34;level2&#34;&gt;
&lt;h2 class=&#34;anchored&#34; data-anchor-id=&#34;surrogate-model-gaussian-process-regression&#34;&gt;Surrogate Model: Gaussian Process Regression&lt;/h2&gt;
&lt;p&gt;This section explores the virtues Gaussian processes and how they can be applied as surrogate models for Bayesian optimisation. This is the largest and most complex part of Bayesian optimisation, and the discussions and implementations will only take a brief glance at some of the considerations.&lt;/p&gt;
&lt;p&gt;A Gaussian process (GP) is a probabilistic model that defines a distribution over functions. A GP model assumes that a function can be represented as a collection of random variables with a multivariate Gaussian distribution. Intuitively, the GP assumes that data points with high correlation among the covariates have similar values of the output variable(s).&lt;/p&gt;
&lt;p&gt;Formally, a GP is defined by a mean function and a covariance function, also called a kernel function.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[p(f | \mathbf{X}) = \mathcal{N}(f | \mathbf{\mu}, \mathbf{\Sigma})\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt; is the objective function and &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{X}\)&lt;/span&gt; is a set of observations for the covariates of &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt;. The mean function, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\mu}\)&lt;/span&gt;, specifies the expected value of the function at each point in the covariate space, while the covariance matrix, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\Sigma}\)&lt;/span&gt;, specifies how the function values at any two points in the covariate space are correlated. The covariance matrix is calculated using a kernel function and, in practice, the choice of kernel function is important for obtaining good and interpretable results with Bayesian optimisation, whereas the mean function is of much lesser consequence and is often set to &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\mu} = \mathbf{0}\)&lt;/span&gt;.&lt;/p&gt;
&lt;section id=&#34;kernels&#34; class=&#34;level3&#34;&gt;
&lt;h3 class=&#34;anchored&#34; data-anchor-id=&#34;kernels&#34;&gt;Kernels&lt;/h3&gt;
&lt;p&gt;The choice of kernel function reflects prior beliefs about smoothness, periodicity, and other properties of the objective function. Intuitively, the kernel is a function that specifies the similarity between pairs of vectors of covariates. In other words, the kernel should quantify how similar two data points are, given just the input.&lt;/p&gt;
&lt;p&gt;Formally, a kernel function &lt;span class=&#34;math inline&#34;&gt;\(k(\mathbf{x}, \mathbf{x&#39;})\)&lt;/span&gt; takes two input vectors &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{x}\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{x&#39;}\)&lt;/span&gt; and produces a scalar value that quantifies the similarity or covariance between the two vectors.&lt;/p&gt;
&lt;p&gt;The kernel function can be applied to the covariates, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{X}\)&lt;/span&gt;, of a set of observed data points to create a covariance matrix, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\Sigma}\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\Sigma_{ij} = k(\mathbf{x}_i, \mathbf{x}_j)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;for all combinations of observations &lt;span class=&#34;math inline&#34;&gt;\(i\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Kernels themselves are an entire subject. For now, know that some examples of kernel functions used in GP include the radial basis function (RBF) kernel, the MatÃ©rn kernel, and the linear kernel.&lt;/p&gt;
&lt;section id=&#34;implementing-the-rbf-kernel&#34; class=&#34;level4&#34;&gt;
&lt;h4 class=&#34;anchored&#34; data-anchor-id=&#34;implementing-the-rbf-kernel&#34;&gt;Implementing the RBF kernel&lt;/h4&gt;
&lt;p&gt;The RBF kernel is defined as&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[k(\mathbf{x}_i, \mathbf{x}_j) = \sigma_f^2 \exp\left(-\frac{1}{2}\frac{\lVert \mathbf{x}_i - \mathbf{x}_j\rVert^2}{l^2}\right)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\(\sigma_f\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; are parameters and &lt;span class=&#34;math inline&#34;&gt;\(\lVert \rVert\)&lt;/span&gt; is the euclidean distance of the two vectors.&lt;/p&gt;
&lt;p&gt;This implementation can take two vectors or two matrices. For a vector input, it returns the kernel function value. For a matrix inputs, the covariance matrix, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\Sigma}\)&lt;/span&gt;, is returned.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb3&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb3-1&#34;&gt;&lt;a href=&#34;#cb3-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; RBF Kernel&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-2&#34;&gt;&lt;a href=&#34;#cb3-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-3&#34;&gt;&lt;a href=&#34;#cb3-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param X1 matrix of dimensions (n, d). Vectors are coerced to (1, d).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-4&#34;&gt;&lt;a href=&#34;#cb3-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param X2 matrix of dimensions (m, d). Vectors are coerced to (1, d).&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-5&#34;&gt;&lt;a href=&#34;#cb3-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param l length scale&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-6&#34;&gt;&lt;a href=&#34;#cb3-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param sigma_f scale parameter &lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-7&#34;&gt;&lt;a href=&#34;#cb3-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-8&#34;&gt;&lt;a href=&#34;#cb3-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @return matrix of dimensions (n, m)&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-9&#34;&gt;&lt;a href=&#34;#cb3-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;rbf_kernel &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(X1, X2, &lt;span class=&#34;at&#34;&gt;l =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;sigma_f =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;1.0&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb3-10&#34;&gt;&lt;a href=&#34;#cb3-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;is.null&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X1))) &lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X1) &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt;(X1))&lt;/span&gt;
&lt;span id=&#34;cb3-11&#34;&gt;&lt;a href=&#34;#cb3-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;is.null&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X2))) &lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X2) &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt;(X2))&lt;/span&gt;
&lt;span id=&#34;cb3-12&#34;&gt;&lt;a href=&#34;#cb3-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  sqdist &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; (&lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;(X1 &lt;span class=&#34;sc&#34;&gt;%*%&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;(X2))) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-13&#34;&gt;&lt;a href=&#34;#cb3-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;add&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;rowSums&lt;/span&gt;(X1&lt;span class=&#34;sc&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;dims =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb3-14&#34;&gt;&lt;a href=&#34;#cb3-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;sweep&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;fu&#34;&gt;rowSums&lt;/span&gt;(X2&lt;span class=&#34;sc&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;dims =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), &lt;span class=&#34;st&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;`&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb3-15&#34;&gt;&lt;a href=&#34;#cb3-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  sigma_f&lt;span class=&#34;sc&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;exp&lt;/span&gt;(&lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;/&lt;/span&gt; l&lt;span class=&#34;sc&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; sqdist)&lt;/span&gt;
&lt;span id=&#34;cb3-16&#34;&gt;&lt;a href=&#34;#cb3-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\sigma_f^2\)&lt;/span&gt; is a variance parameter that simply scales the functions to the magnitude of &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt;. More interestingly, the length scale parameter, &lt;span class=&#34;math inline&#34;&gt;\(l\)&lt;/span&gt; of the RBF kernel affects the smoothness and flexibility of the functions modelled with a GP that uses this kernel. For a small value of the length scale, the kernel results in very flexible functions, whereas a larger length scale yields very smooth functions.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb4&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb4-1&#34;&gt;&lt;a href=&#34;#cb4-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;tibble&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;l =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;fl&#34;&gt;0.25&lt;/span&gt;, &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-2&#34;&gt;&lt;a href=&#34;#cb4-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  tidyr&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;expand_grid&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x1 =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;seq&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;length.out =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-3&#34;&gt;&lt;a href=&#34;#cb4-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  dplyr&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;mutate&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;k =&lt;/span&gt; purrr&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;map2_dbl&lt;/span&gt;(x1, l, &lt;span class=&#34;sc&#34;&gt;~&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rbf_kernel&lt;/span&gt;(.x, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, .y))) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-4&#34;&gt;&lt;a href=&#34;#cb4-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;ggplot&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; x1, &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; k, &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;factor&lt;/span&gt;(l))) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-5&#34;&gt;&lt;a href=&#34;#cb4-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;geom_line&lt;/span&gt;() &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-6&#34;&gt;&lt;a href=&#34;#cb4-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-7&#34;&gt;&lt;a href=&#34;#cb4-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;labs&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb4-8&#34;&gt;&lt;a href=&#34;#cb4-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;Euclidian distance of points&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb4-9&#34;&gt;&lt;a href=&#34;#cb4-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;Covariance&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb4-10&#34;&gt;&lt;a href=&#34;#cb4-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;Length scale&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb4-11&#34;&gt;&lt;a href=&#34;#cb4-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;title =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;RBF kernel&#34;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb4-12&#34;&gt;&lt;a href=&#34;#cb4-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  )&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;cell-output-display&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/unnamed-chunk-3-1.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The intuition here is that for small length scales two points have to be very close to have any correlation. This results in very flexible functions that do not expect much correlation between data points. For a large length scale, however, points that are far apart are still expected to behave in a similar way. This results in very smooth functions that expect similar output values across the entire covariate space.&lt;/p&gt;
&lt;p&gt;The RBF kernel is a popular choice for Gaussian processes in part because of this interpretability. There are other advantages to the RBF kernel, but it is not necessarily a good default choice for &lt;em&gt;every&lt;/em&gt; problem.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id=&#34;gaussian-processes-as-a-distribution-over-functions&#34; class=&#34;level3&#34;&gt;
&lt;h3 class=&#34;anchored&#34; data-anchor-id=&#34;gaussian-processes-as-a-distribution-over-functions&#34;&gt;Gaussian processes as a distribution over functions&lt;/h3&gt;
&lt;p&gt;If the Gaussian process is a distribution over functions, it should be possible to sample random functions from it. And indeed it is! The only thing needed in order to sample from a Gaussian is a function for pulling random numbers from, well, a Gaussian.&lt;/p&gt;
&lt;p&gt;In practice, this amounts to plugging the mean and the covariance (kernel) into a multivariate Gaussian and sampling from it. Of course, a set of points, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{x}\)&lt;/span&gt;, is required to compute &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\Sigma}\)&lt;/span&gt;. Note, however, that no outputs, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{y}\)&lt;/span&gt; are needed yet, so a grid for &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{x}\)&lt;/span&gt; will suffice.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb5&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb5-1&#34;&gt;&lt;a href=&#34;#cb5-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; Random Samples from a Multivariate Gaussian&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-2&#34;&gt;&lt;a href=&#34;#cb5-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; &lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-3&#34;&gt;&lt;a href=&#34;#cb5-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; Implementation inspired by https://juanitorduz.github.io/multivariate_normal/&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-4&#34;&gt;&lt;a href=&#34;#cb5-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-5&#34;&gt;&lt;a href=&#34;#cb5-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param n number of samples to sample&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-6&#34;&gt;&lt;a href=&#34;#cb5-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param mu the mean of each input dimension&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-7&#34;&gt;&lt;a href=&#34;#cb5-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param sigma the covariance matrix&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-8&#34;&gt;&lt;a href=&#34;#cb5-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param epsilon numerical tolerance added to the diagonal of the covariance&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-9&#34;&gt;&lt;a href=&#34;#cb5-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39;  matrix. This is necessary for the Cholesky decomposition, in some cases.&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-10&#34;&gt;&lt;a href=&#34;#cb5-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-11&#34;&gt;&lt;a href=&#34;#cb5-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @return numerical vector of n samples&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb5-12&#34;&gt;&lt;a href=&#34;#cb5-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;rmvnorm &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;n =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, mu, sigma, &lt;span class=&#34;at&#34;&gt;epsilon =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;1e-6&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb5-13&#34;&gt;&lt;a href=&#34;#cb5-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    p &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt;(mu)&lt;/span&gt;
&lt;span id=&#34;cb5-14&#34;&gt;&lt;a href=&#34;#cb5-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;sc&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;all&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(sigma) &lt;span class=&#34;sc&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(p,p))) &lt;span class=&#34;fu&#34;&gt;stop&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;incompatible arguments&#34;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-15&#34;&gt;&lt;a href=&#34;#cb5-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    ev &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;eigen&lt;/span&gt;(sigma, &lt;span class=&#34;at&#34;&gt;symmetric =&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;TRUE&lt;/span&gt;)&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;values&lt;/span&gt;
&lt;span id=&#34;cb5-16&#34;&gt;&lt;a href=&#34;#cb5-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;sc&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;all&lt;/span&gt;(ev &lt;span class=&#34;sc&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;epsilon&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;abs&lt;/span&gt;(ev[1L]))) {&lt;/span&gt;
&lt;span id=&#34;cb5-17&#34;&gt;&lt;a href=&#34;#cb5-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;fu&#34;&gt;stop&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;The covariance matrix (sigma) is not positive definite&#34;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-18&#34;&gt;&lt;a href=&#34;#cb5-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    }&lt;/span&gt;
&lt;span id=&#34;cb5-19&#34;&gt;&lt;a href=&#34;#cb5-19&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    cholesky &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;chol&lt;/span&gt;(sigma &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;diag&lt;/span&gt;(p)&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;epsilon)&lt;/span&gt;
&lt;span id=&#34;cb5-20&#34;&gt;&lt;a href=&#34;#cb5-20&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    sample &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rnorm&lt;/span&gt;(p&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;n, &lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-21&#34;&gt;&lt;a href=&#34;#cb5-21&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(sample) &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(n, p)&lt;/span&gt;
&lt;span id=&#34;cb5-22&#34;&gt;&lt;a href=&#34;#cb5-22&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;sweep&lt;/span&gt;(sample &lt;span class=&#34;sc&#34;&gt;%*%&lt;/span&gt; cholesky, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;, mu, &lt;span class=&#34;at&#34;&gt;FUN =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;`&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb5-23&#34;&gt;&lt;a href=&#34;#cb5-23&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;To assist the visualisation, here is a plot for the mean, uncertainty, and some samples of a Gaussian process for the case where there is only one covariate, i.e.&amp;nbsp;&lt;span class=&#34;math inline&#34;&gt;\(\mathbf{X}\)&lt;/span&gt; is of shape &lt;span class=&#34;math inline&#34;&gt;\((n,1)\)&lt;/span&gt; where &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; is the number of observations.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb6&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb6-1&#34;&gt;&lt;a href=&#34;#cb6-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;gpr_plot &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(samples,&lt;/span&gt;
&lt;span id=&#34;cb6-2&#34;&gt;&lt;a href=&#34;#cb6-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;                     mu,&lt;/span&gt;
&lt;span id=&#34;cb6-3&#34;&gt;&lt;a href=&#34;#cb6-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;                     sigma,&lt;/span&gt;
&lt;span id=&#34;cb6-4&#34;&gt;&lt;a href=&#34;#cb6-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;                     X_pred,&lt;/span&gt;
&lt;span id=&#34;cb6-5&#34;&gt;&lt;a href=&#34;#cb6-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;                     &lt;span class=&#34;at&#34;&gt;X_train =&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;NULL&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb6-6&#34;&gt;&lt;a href=&#34;#cb6-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;                     &lt;span class=&#34;at&#34;&gt;y_train =&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;NULL&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb6-7&#34;&gt;&lt;a href=&#34;#cb6-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;                     &lt;span class=&#34;at&#34;&gt;true_function =&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;NULL&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb6-8&#34;&gt;&lt;a href=&#34;#cb6-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  n_samples &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(samples)[[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]]&lt;/span&gt;
&lt;span id=&#34;cb6-9&#34;&gt;&lt;a href=&#34;#cb6-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  p &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;as_tibble&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb6-10&#34;&gt;&lt;a href=&#34;#cb6-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;(samples),&lt;/span&gt;
&lt;span id=&#34;cb6-11&#34;&gt;&lt;a href=&#34;#cb6-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;.name_repair =&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;~&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;paste&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;sample&#34;&lt;/span&gt;, &lt;span class=&#34;fu&#34;&gt;seq&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n_samples))&lt;/span&gt;
&lt;span id=&#34;cb6-12&#34;&gt;&lt;a href=&#34;#cb6-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  ) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-13&#34;&gt;&lt;a href=&#34;#cb6-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    dplyr&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;mutate&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb6-14&#34;&gt;&lt;a href=&#34;#cb6-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; X_pred,&lt;/span&gt;
&lt;span id=&#34;cb6-15&#34;&gt;&lt;a href=&#34;#cb6-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;uncertainty =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;1.6&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;sqrt&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;diag&lt;/span&gt;(sigma)),&lt;/span&gt;
&lt;span id=&#34;cb6-16&#34;&gt;&lt;a href=&#34;#cb6-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;mu =&lt;/span&gt; mu,&lt;/span&gt;
&lt;span id=&#34;cb6-17&#34;&gt;&lt;a href=&#34;#cb6-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;lower =&lt;/span&gt; mu &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt; uncertainty,&lt;/span&gt;
&lt;span id=&#34;cb6-18&#34;&gt;&lt;a href=&#34;#cb6-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;upper =&lt;/span&gt; mu &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; uncertainty,&lt;/span&gt;
&lt;span id=&#34;cb6-19&#34;&gt;&lt;a href=&#34;#cb6-19&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;f =&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;sc&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;is.null&lt;/span&gt;(true_function)) &lt;span class=&#34;fu&#34;&gt;true_function&lt;/span&gt;(X_pred)&lt;/span&gt;
&lt;span id=&#34;cb6-20&#34;&gt;&lt;a href=&#34;#cb6-20&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  ) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-21&#34;&gt;&lt;a href=&#34;#cb6-21&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;ggplot&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; x)) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-22&#34;&gt;&lt;a href=&#34;#cb6-22&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;geom_ribbon&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb6-23&#34;&gt;&lt;a href=&#34;#cb6-23&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;ymin =&lt;/span&gt; lower, &lt;span class=&#34;at&#34;&gt;ymax =&lt;/span&gt; upper, &lt;span class=&#34;at&#34;&gt;fill =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;89% interval&#34;&lt;/span&gt;),&lt;/span&gt;
&lt;span id=&#34;cb6-24&#34;&gt;&lt;a href=&#34;#cb6-24&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;alpha =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;0.2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-25&#34;&gt;&lt;a href=&#34;#cb6-25&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    ) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-26&#34;&gt;&lt;a href=&#34;#cb6-26&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;geom_line&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; mu, &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;Mean&#34;&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-27&#34;&gt;&lt;a href=&#34;#cb6-27&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-28&#34;&gt;&lt;a href=&#34;#cb6-28&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;labs&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb6-29&#34;&gt;&lt;a href=&#34;#cb6-29&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;y&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb6-30&#34;&gt;&lt;a href=&#34;#cb6-30&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;x&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb6-31&#34;&gt;&lt;a href=&#34;#cb6-31&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb6-32&#34;&gt;&lt;a href=&#34;#cb6-32&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;fill =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-33&#34;&gt;&lt;a href=&#34;#cb6-33&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    ) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-34&#34;&gt;&lt;a href=&#34;#cb6-34&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;theme&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;panel.grid =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;element_blank&lt;/span&gt;())&lt;/span&gt;
&lt;span id=&#34;cb6-35&#34;&gt;&lt;a href=&#34;#cb6-35&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  p &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;Reduce&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb6-36&#34;&gt;&lt;a href=&#34;#cb6-36&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;st&#34;&gt;`&lt;/span&gt;&lt;span class=&#34;at&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;st&#34;&gt;`&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb6-37&#34;&gt;&lt;a href=&#34;#cb6-37&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;init =&lt;/span&gt; p,&lt;/span&gt;
&lt;span id=&#34;cb6-38&#34;&gt;&lt;a href=&#34;#cb6-38&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;lapply&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;paste&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;sample&#34;&lt;/span&gt;, &lt;span class=&#34;fu&#34;&gt;seq&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, n_samples)), &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(s) {&lt;/span&gt;
&lt;span id=&#34;cb6-39&#34;&gt;&lt;a href=&#34;#cb6-39&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;fu&#34;&gt;geom_line&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; .data[[s]], &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; s), &lt;span class=&#34;at&#34;&gt;linetype =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-40&#34;&gt;&lt;a href=&#34;#cb6-40&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    })&lt;/span&gt;
&lt;span id=&#34;cb6-41&#34;&gt;&lt;a href=&#34;#cb6-41&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  ) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-42&#34;&gt;&lt;a href=&#34;#cb6-42&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;scale_colour_brewer&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;palette =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;YlGnBu&#34;&lt;/span&gt;) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-43&#34;&gt;&lt;a href=&#34;#cb6-43&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;scale_fill_manual&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;values =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;89% interval&#34;&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; colour&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;azure))&lt;/span&gt;
&lt;span id=&#34;cb6-44&#34;&gt;&lt;a href=&#34;#cb6-44&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;sc&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;is.null&lt;/span&gt;(X_train) &lt;span class=&#34;sc&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;is.null&lt;/span&gt;(y_train)) {&lt;/span&gt;
&lt;span id=&#34;cb6-45&#34;&gt;&lt;a href=&#34;#cb6-45&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    p &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; p &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; &lt;/span&gt;
&lt;span id=&#34;cb6-46&#34;&gt;&lt;a href=&#34;#cb6-46&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;fu&#34;&gt;geom_point&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb6-47&#34;&gt;&lt;a href=&#34;#cb6-47&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;at&#34;&gt;data =&lt;/span&gt; tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;tibble&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; X_train, &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; y_train),&lt;/span&gt;
&lt;span id=&#34;cb6-48&#34;&gt;&lt;a href=&#34;#cb6-48&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; x, &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; y, &lt;span class=&#34;at&#34;&gt;shape =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;Training point&#34;&lt;/span&gt;),&lt;/span&gt;
&lt;span id=&#34;cb6-49&#34;&gt;&lt;a href=&#34;#cb6-49&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; colour&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;orange_dark,&lt;/span&gt;
&lt;span id=&#34;cb6-50&#34;&gt;&lt;a href=&#34;#cb6-50&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;        &lt;span class=&#34;at&#34;&gt;size =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-51&#34;&gt;&lt;a href=&#34;#cb6-51&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      ) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-52&#34;&gt;&lt;a href=&#34;#cb6-52&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;fu&#34;&gt;scale_shape_manual&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;values =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;Training point&#34;&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;+&#34;&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb6-53&#34;&gt;&lt;a href=&#34;#cb6-53&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;fu&#34;&gt;labs&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;shape =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb6-54&#34;&gt;&lt;a href=&#34;#cb6-54&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb6-55&#34;&gt;&lt;a href=&#34;#cb6-55&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;sc&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;is.null&lt;/span&gt;(true_function)) {&lt;/span&gt;
&lt;span id=&#34;cb6-56&#34;&gt;&lt;a href=&#34;#cb6-56&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    p &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; p &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; &lt;/span&gt;
&lt;span id=&#34;cb6-57&#34;&gt;&lt;a href=&#34;#cb6-57&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;fu&#34;&gt;geom_line&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;mapping =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; f, &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;True function&#34;&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb6-58&#34;&gt;&lt;a href=&#34;#cb6-58&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb6-59&#34;&gt;&lt;a href=&#34;#cb6-59&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;return&lt;/span&gt;(p)&lt;/span&gt;
&lt;span id=&#34;cb6-60&#34;&gt;&lt;a href=&#34;#cb6-60&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This bit is at the core of Gaussian processes. Given a set of points, the corresponding &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\mu}\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\Sigma}\)&lt;/span&gt; are calculated. Then those are plugged into a multivariate Gaussian to obtain predicted function values. In this case, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\mu}\)&lt;/span&gt; has just been set to &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{0}\)&lt;/span&gt;.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb7&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb7-1&#34;&gt;&lt;a href=&#34;#cb7-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;n_samples &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb7-2&#34;&gt;&lt;a href=&#34;#cb7-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;X_predict &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;seq&lt;/span&gt;(&lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;length.out =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-3&#34;&gt;&lt;a href=&#34;#cb7-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;mu &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rep&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;times =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt;(X_predict))&lt;/span&gt;
&lt;span id=&#34;cb7-4&#34;&gt;&lt;a href=&#34;#cb7-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;sigma &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rbf_kernel&lt;/span&gt;(X_predict, X_predict, &lt;span class=&#34;at&#34;&gt;l =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;sigma_f =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb7-5&#34;&gt;&lt;a href=&#34;#cb7-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;samples &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rmvnorm&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;n =&lt;/span&gt; n_samples, mu, sigma)&lt;/span&gt;
&lt;span id=&#34;cb7-6&#34;&gt;&lt;a href=&#34;#cb7-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;gpr_plot&lt;/span&gt;(samples, mu, sigma, X_predict)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;cell-output-display&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/unnamed-chunk-6-1.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id=&#34;conditioning-the-gaussian-process&#34; class=&#34;level3&#34;&gt;
&lt;h3 class=&#34;anchored&#34; data-anchor-id=&#34;conditioning-the-gaussian-process&#34;&gt;Conditioning the Gaussian process&lt;/h3&gt;
&lt;p&gt;Until now, the GP has just represented a prior belief for the surrogate functions that might model the objective function. It is not a surrogate function yet.&lt;/p&gt;
&lt;p&gt;In order for the GP to be a useful surrogate model, it should provide posterior predictions for proposed points, given the available training data, i.e.&amp;nbsp;a pair of &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{X}\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{y}\)&lt;/span&gt;. For a GP, the joint distribution of training points and new proposed points is itself a GP. Consequently, it is possible to compute the joint distribution of training data and posterior prediction points directly.&lt;/p&gt;
&lt;p&gt;The mean and covariance of this joint distribution have well defined expressions. Given a set of training data, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{X}_t, \mathbf{y}_t\)&lt;/span&gt;, and set of points on which to make predictions, &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{X}_p\)&lt;/span&gt;, the mean of the posterior predictive distribution is&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\mathbf{\mu}_{p|t} = \mathbf{\mu}_p + \mathbf{\Sigma}_{tp}^T \mathbf{\Sigma}_{tt}^{-1} (\mathbf{y}_t - \mathbf{\mu}_t)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Where &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\Sigma}_{tp}\)&lt;/span&gt; is the covariance matrix between training and prediction points and &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\Sigma}_{tt}\)&lt;/span&gt; is the covariance matrix between training points.&lt;/p&gt;
&lt;p&gt;Recall though that often &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\mu} = \mathbf{0}\)&lt;/span&gt;, so the equation will often show up as&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\mathbf{\mu}_{p|t} = \mathbf{\Sigma}_{tp} \mathbf{\Sigma}_{tt}^{-1} \mathbf{y}_t\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This is also what is implemented below.&lt;/p&gt;
&lt;p&gt;The covariance matrix of the posterior predictive distribution is&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\mathbf{\Sigma}_{p|t} = \mathbf{\Sigma}_{pp} - \mathbf{\Sigma}_{tp}^T \mathbf{\Sigma}_{tt}^{-1} \mathbf{\Sigma}_{tp}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Where &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\Sigma}_{pp}\)&lt;/span&gt; is the covariance matrix between prediction points.&lt;/p&gt;
&lt;p&gt;These formulas are straightforward linear algebra and could be implemented directly as such. However, they are somewhat numerically unstable. For greater stability, the implementation below calculates the posterior using the algorithm described in GPfML Ch 2&lt;/p&gt;
&lt;section id=&#34;todo-source-here&#34; class=&#34;level5&#34;&gt;
&lt;h5 class=&#34;anchored&#34; data-anchor-id=&#34;todo-source-here&#34;&gt;TODO: source here&lt;/h5&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb8&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb8-1&#34;&gt;&lt;a href=&#34;#cb8-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; Get Parameters of the Posterior Gaussian Process&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-2&#34;&gt;&lt;a href=&#34;#cb8-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-3&#34;&gt;&lt;a href=&#34;#cb8-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param kernel kernel function used for the Gaussian process&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-4&#34;&gt;&lt;a href=&#34;#cb8-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param X_pred matrix (m, d) of prediction points&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-5&#34;&gt;&lt;a href=&#34;#cb8-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param X_train matrix (n, d) of training points&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-6&#34;&gt;&lt;a href=&#34;#cb8-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param y_train column vector (n, d) of training observations&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-7&#34;&gt;&lt;a href=&#34;#cb8-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param noise scalar of observation noise&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-8&#34;&gt;&lt;a href=&#34;#cb8-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @param ... named parameters for the kernel function&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-9&#34;&gt;&lt;a href=&#34;#cb8-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39;&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-10&#34;&gt;&lt;a href=&#34;#cb8-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;co&#34;&gt;#&#39; @return list of mean (mu) and covariance (sigma) for the Gaussian&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb8-11&#34;&gt;&lt;a href=&#34;#cb8-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;posterior &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(kernel, X_pred, X_train, y_train, &lt;span class=&#34;at&#34;&gt;noise =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;1e-8&lt;/span&gt;, ...) {&lt;/span&gt;
&lt;span id=&#34;cb8-12&#34;&gt;&lt;a href=&#34;#cb8-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;is.null&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X_pred))) &lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X_pred) &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt;(X_pred), &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-13&#34;&gt;&lt;a href=&#34;#cb8-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;is.null&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X_train))) &lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X_train) &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt;(X_train), &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-14&#34;&gt;&lt;a href=&#34;#cb8-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;is.null&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(y_train))) &lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(y_train) &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt;(y_train), &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb8-15&#34;&gt;&lt;a href=&#34;#cb8-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  K &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;kernel&lt;/span&gt;(X_train, X_train, ...) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; noise&lt;span class=&#34;sc&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;diag&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X_train)[[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]])&lt;/span&gt;
&lt;span id=&#34;cb8-16&#34;&gt;&lt;a href=&#34;#cb8-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  K_s &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;kernel&lt;/span&gt;(X_train, X_pred, ...)&lt;/span&gt;
&lt;span id=&#34;cb8-17&#34;&gt;&lt;a href=&#34;#cb8-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  K_ss &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;kernel&lt;/span&gt;(X_pred, X_pred, ...) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;1e-8&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;diag&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X_pred)[[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]])&lt;/span&gt;
&lt;span id=&#34;cb8-18&#34;&gt;&lt;a href=&#34;#cb8-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  K_inv &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;solve&lt;/span&gt;(K)&lt;/span&gt;
&lt;span id=&#34;cb8-19&#34;&gt;&lt;a href=&#34;#cb8-19&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  mu &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;(K_s) &lt;span class=&#34;sc&#34;&gt;%*%&lt;/span&gt; K_inv) &lt;span class=&#34;sc&#34;&gt;%*%&lt;/span&gt; y_train&lt;/span&gt;
&lt;span id=&#34;cb8-20&#34;&gt;&lt;a href=&#34;#cb8-20&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  sigma &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; K_ss &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt; (&lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;(K_s) &lt;span class=&#34;sc&#34;&gt;%*%&lt;/span&gt; K_inv) &lt;span class=&#34;sc&#34;&gt;%*%&lt;/span&gt; K_s&lt;/span&gt;
&lt;span id=&#34;cb8-21&#34;&gt;&lt;a href=&#34;#cb8-21&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;list&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;mu =&lt;/span&gt; mu, &lt;span class=&#34;at&#34;&gt;sigma =&lt;/span&gt; sigma)&lt;/span&gt;
&lt;span id=&#34;cb8-22&#34;&gt;&lt;a href=&#34;#cb8-22&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;With a way to calculate the posterior, it is possible to condition a Gaussian process on some training data.&lt;/p&gt;
&lt;p&gt;Here is a bit of of training data for a one dimensional example&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb9&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb9-1&#34;&gt;&lt;a href=&#34;#cb9-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;X_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;4.33&lt;/span&gt;, &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;2.1&lt;/span&gt;, &lt;span class=&#34;fl&#34;&gt;2.1&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb9-2&#34;&gt;&lt;a href=&#34;#cb9-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;y_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ackley&lt;/span&gt;(X_train)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The Gaussian process is then conditioned on training data and applied to new proposed points in a single step&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb10&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb10-1&#34;&gt;&lt;a href=&#34;#cb10-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;X_predict &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;seq&lt;/span&gt;(&lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;length.out =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb10-2&#34;&gt;&lt;a href=&#34;#cb10-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;post &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;posterior&lt;/span&gt;(rbf_kernel, X_predict, X_train, y_train)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Just like the prior distribution, it is possible to sample random functions from the posterior distribution&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb11&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb11-1&#34;&gt;&lt;a href=&#34;#cb11-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;mu &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;mu)&lt;/span&gt;
&lt;span id=&#34;cb11-2&#34;&gt;&lt;a href=&#34;#cb11-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;sigma &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;sigma&lt;/span&gt;
&lt;span id=&#34;cb11-3&#34;&gt;&lt;a href=&#34;#cb11-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;n_samples &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb11-4&#34;&gt;&lt;a href=&#34;#cb11-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;samples &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rmvnorm&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;n =&lt;/span&gt; n_samples, mu, sigma)&lt;/span&gt;
&lt;span id=&#34;cb11-5&#34;&gt;&lt;a href=&#34;#cb11-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;gpr_plot&lt;/span&gt;(samples, mu, sigma, X_predict, X_train, y_train, &lt;span class=&#34;at&#34;&gt;true_function =&lt;/span&gt; ackley)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;cell-output-display&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/unnamed-chunk-9-1.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;At this point, the fit is not too great and the sampled functions look nothing like the true function. However, this is only based on three data points and an arbitrary choice of kernel parameters.&lt;/p&gt;
&lt;p&gt;Both things will be handled in due time, but it gets worse before it gets better&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&#34;a-quick-note-on-noise&#34; class=&#34;level4&#34;&gt;
&lt;h4 class=&#34;anchored&#34; data-anchor-id=&#34;a-quick-note-on-noise&#34;&gt;A Quick Note on Noise&lt;/h4&gt;
&lt;p&gt;Recall that training data might be noisy, i.e.&amp;nbsp;&lt;span class=&#34;math inline&#34;&gt;\(y = f(\mathbf{x}) + \epsilon\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Noise, too, is a subject all on its own. The key thing to remember is that noise can be accounted for by adding it to the diagonal of &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\Sigma}_{tt}\)&lt;/span&gt;. This is already implemented in the function for the posterior above.&lt;/p&gt;
&lt;p&gt;The effect of noisy training data on the posterior is, unsurprisingly, more uncertainty.&lt;/p&gt;
&lt;p&gt;Here a bit of known noise is added to the observations&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb12&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb12-1&#34;&gt;&lt;a href=&#34;#cb12-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;noise &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb12-2&#34;&gt;&lt;a href=&#34;#cb12-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;y_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ackley&lt;/span&gt;(X_train) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; noise &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rnorm&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt;(X_train))&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;When recreating the plot from above, now using the noisy observations, the most noticeable difference is that the distribution mean no longer passes though each observation.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb13&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb13-1&#34;&gt;&lt;a href=&#34;#cb13-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;post &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;posterior&lt;/span&gt;(rbf_kernel, X_predict, X_train, y_train, &lt;span class=&#34;at&#34;&gt;noise =&lt;/span&gt; noise)&lt;/span&gt;
&lt;span id=&#34;cb13-2&#34;&gt;&lt;a href=&#34;#cb13-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;mu &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;mu&lt;/span&gt;
&lt;span id=&#34;cb13-3&#34;&gt;&lt;a href=&#34;#cb13-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;sigma &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;sigma&lt;/span&gt;
&lt;span id=&#34;cb13-4&#34;&gt;&lt;a href=&#34;#cb13-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;n_samples &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb13-5&#34;&gt;&lt;a href=&#34;#cb13-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;samples &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rmvnorm&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;n =&lt;/span&gt; n_samples, mu, sigma)&lt;/span&gt;
&lt;span id=&#34;cb13-6&#34;&gt;&lt;a href=&#34;#cb13-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;gpr_plot&lt;/span&gt;(samples, mu, sigma, X_predict, X_train, y_train, &lt;span class=&#34;at&#34;&gt;true_function =&lt;/span&gt; ackley)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;cell-output-display&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/unnamed-chunk-11-1.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id=&#34;gaussian-process-regression&#34; class=&#34;level3&#34;&gt;
&lt;h3 class=&#34;anchored&#34; data-anchor-id=&#34;gaussian-process-regression&#34;&gt;Gaussian Process Regression&lt;/h3&gt;
&lt;p&gt;Until now, the kernel parameters have been set at fixed, arbitrary values. This is a waste of good parameters, and it is possible to do something better. The core idea of Gaussian process regression (GPR) is that the kernel parameters can be adapted to fit the training data.&lt;/p&gt;
&lt;p&gt;A common approach to estimating the parameters of a kernel function in GPR is Maximum likelihood estimation (MLE).&lt;/p&gt;
&lt;p&gt;The likelihood function for a Gaussian process is given by:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[p(\mathbf{y}_t \mid \mathbf{X}_t, \theta) = \mathcal{N}(\mathbf{y}_t \mid \mathbf{\mu}, \mathbf{\Sigma}_{tt} + \sigma_{\epsilon}^2 \mathbf{I})\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{\Sigma}_{tt}\)&lt;/span&gt; is the covariance matrix computed using some kernel with parameters &lt;span class=&#34;math inline&#34;&gt;\(\theta\)&lt;/span&gt;. In the case of the RBF kernel, the parameters to estimate are &lt;span class=&#34;math inline&#34;&gt;\(\theta = (\sigma_f, l)\)&lt;/span&gt;. Notice that the noise has been added to the diagonal of the covariance matrix to account noisy training data.&lt;/p&gt;
&lt;p&gt;The corresponding log likelihood function is:&lt;/p&gt;
&lt;section id=&#34;todo-check-formula&#34; class=&#34;level4&#34;&gt;
&lt;h4 class=&#34;anchored&#34; data-anchor-id=&#34;todo-check-formula&#34;&gt;TODO Check formula&lt;/h4&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\log p(\mathbf{y}_t \mid \mathbf{X}_t, \theta) = -\frac{1}{2} \left( \log \det (\mathbf{\Sigma}_{tt} + \sigma_{\epsilon}^2 \mathbf{I}) + \mathbf{y}_t^T (\mathbf{\Sigma}_{tt} + \sigma_{\epsilon}^2 \mathbf{I})^{-1} \mathbf{y}_t + n \log(2\pi) \right)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\(n\)&lt;/span&gt; is the number of data points.&lt;/p&gt;
&lt;p&gt;The optimal values of the kernel parameters are the values that maximise the log likelihood or, equivalently, minimise the negative log likelihood.&lt;/p&gt;
&lt;p&gt;To implement Gaussian process regression, two components are needed: the likelihood and an optimiser. Here is an implementation of a negative log likelihood function for any kernel&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb14&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb14-1&#34;&gt;&lt;a href=&#34;#cb14-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;nll &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(kernel, X_train, y_train, noise) {&lt;/span&gt;
&lt;span id=&#34;cb14-2&#34;&gt;&lt;a href=&#34;#cb14-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(params) {&lt;/span&gt;
&lt;span id=&#34;cb14-3&#34;&gt;&lt;a href=&#34;#cb14-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    n &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;dim&lt;/span&gt;(X_train)[[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]]&lt;/span&gt;
&lt;span id=&#34;cb14-4&#34;&gt;&lt;a href=&#34;#cb14-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    K &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; rlang&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;exec&lt;/span&gt;(kernel, &lt;span class=&#34;at&#34;&gt;X1 =&lt;/span&gt; X_train, &lt;span class=&#34;at&#34;&gt;X2 =&lt;/span&gt; X_train, &lt;span class=&#34;sc&#34;&gt;!!!&lt;/span&gt;params)&lt;/span&gt;
&lt;span id=&#34;cb14-5&#34;&gt;&lt;a href=&#34;#cb14-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    L &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;chol&lt;/span&gt;(K &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; noise&lt;span class=&#34;sc&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;diag&lt;/span&gt;(n))&lt;/span&gt;
&lt;span id=&#34;cb14-6&#34;&gt;&lt;a href=&#34;#cb14-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    a &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;backsolve&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;r =&lt;/span&gt; L, &lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;forwardsolve&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;l =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;(L), &lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; y_train))&lt;/span&gt;
&lt;span id=&#34;cb14-7&#34;&gt;&lt;a href=&#34;#cb14-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;(y_train)&lt;span class=&#34;sc&#34;&gt;%*%&lt;/span&gt;a &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;sum&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;diag&lt;/span&gt;(L))) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;0.5&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;n&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;log&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;pi)&lt;/span&gt;
&lt;span id=&#34;cb14-8&#34;&gt;&lt;a href=&#34;#cb14-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb14-9&#34;&gt;&lt;a href=&#34;#cb14-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;There are many ways to minimise the function. Since there are only two parameters for the RBF kernel, the built in optimiser will do just fine.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb15&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb15-1&#34;&gt;&lt;a href=&#34;#cb15-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;rbf_nll &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;nll&lt;/span&gt;(rbf_kernel, X_train, y_train, &lt;span class=&#34;fl&#34;&gt;1e-8&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb15-2&#34;&gt;&lt;a href=&#34;#cb15-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;opt &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;optim&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;par =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;), &lt;span class=&#34;at&#34;&gt;fn =&lt;/span&gt; rbf_nll)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The optimised kernel parameters should improve the GP.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb16&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb16-1&#34;&gt;&lt;a href=&#34;#cb16-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;post &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;posterior&lt;/span&gt;(rbf_kernel, X_predict, X_train, y_train, &lt;span class=&#34;at&#34;&gt;noise =&lt;/span&gt; noise, &lt;span class=&#34;at&#34;&gt;l =&lt;/span&gt; opt&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;par[[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]], &lt;span class=&#34;at&#34;&gt;sigma_f =&lt;/span&gt; opt&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;par[[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;]])&lt;/span&gt;
&lt;span id=&#34;cb16-2&#34;&gt;&lt;a href=&#34;#cb16-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;mu &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;mu&lt;/span&gt;
&lt;span id=&#34;cb16-3&#34;&gt;&lt;a href=&#34;#cb16-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;sigma &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;sigma&lt;/span&gt;
&lt;span id=&#34;cb16-4&#34;&gt;&lt;a href=&#34;#cb16-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;n_samples &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;3&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb16-5&#34;&gt;&lt;a href=&#34;#cb16-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;samples &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rmvnorm&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;n =&lt;/span&gt; n_samples, mu, sigma)&lt;/span&gt;
&lt;span id=&#34;cb16-6&#34;&gt;&lt;a href=&#34;#cb16-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;gpr_plot&lt;/span&gt;(samples, mu, sigma, X_predict, X_train, y_train, &lt;span class=&#34;at&#34;&gt;true_function =&lt;/span&gt; ackley)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;cell-output-display&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/unnamed-chunk-14-1.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;With that, all the components for creating a GP surrogate model are in place. For future use, they are collected in a single function that performs GPR.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb17&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb17-1&#34;&gt;&lt;a href=&#34;#cb17-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;gpr &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(kernel, X_train, y_train, &lt;span class=&#34;at&#34;&gt;noise =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;1e-8&lt;/span&gt;, ...) {&lt;/span&gt;
&lt;span id=&#34;cb17-2&#34;&gt;&lt;a href=&#34;#cb17-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  kernel_nll &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;nll&lt;/span&gt;(kernel, X_train, y_train, noise)&lt;/span&gt;
&lt;span id=&#34;cb17-3&#34;&gt;&lt;a href=&#34;#cb17-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  param &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;list&lt;/span&gt;(...)&lt;/span&gt;
&lt;span id=&#34;cb17-4&#34;&gt;&lt;a href=&#34;#cb17-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  opt &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;optim&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;par =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rep&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt;(param)), &lt;span class=&#34;at&#34;&gt;fn =&lt;/span&gt; kernel_nll)&lt;/span&gt;
&lt;span id=&#34;cb17-5&#34;&gt;&lt;a href=&#34;#cb17-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  opt_param &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; opt&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;par&lt;/span&gt;
&lt;span id=&#34;cb17-6&#34;&gt;&lt;a href=&#34;#cb17-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(X_pred) {&lt;/span&gt;
&lt;span id=&#34;cb17-7&#34;&gt;&lt;a href=&#34;#cb17-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    post &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; rlang&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;exec&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb17-8&#34;&gt;&lt;a href=&#34;#cb17-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      posterior,&lt;/span&gt;
&lt;span id=&#34;cb17-9&#34;&gt;&lt;a href=&#34;#cb17-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;kernel =&lt;/span&gt; kernel,&lt;/span&gt;
&lt;span id=&#34;cb17-10&#34;&gt;&lt;a href=&#34;#cb17-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;X_pred =&lt;/span&gt; X_pred,&lt;/span&gt;
&lt;span id=&#34;cb17-11&#34;&gt;&lt;a href=&#34;#cb17-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;X_train =&lt;/span&gt; X_train,&lt;/span&gt;
&lt;span id=&#34;cb17-12&#34;&gt;&lt;a href=&#34;#cb17-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;y_train =&lt;/span&gt; y_train,&lt;/span&gt;
&lt;span id=&#34;cb17-13&#34;&gt;&lt;a href=&#34;#cb17-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;noise =&lt;/span&gt; noise,&lt;/span&gt;
&lt;span id=&#34;cb17-14&#34;&gt;&lt;a href=&#34;#cb17-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;sc&#34;&gt;!!!&lt;/span&gt;opt_param&lt;/span&gt;
&lt;span id=&#34;cb17-15&#34;&gt;&lt;a href=&#34;#cb17-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    )&lt;/span&gt;
&lt;span id=&#34;cb17-16&#34;&gt;&lt;a href=&#34;#cb17-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;list&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb17-17&#34;&gt;&lt;a href=&#34;#cb17-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;mu =&lt;/span&gt; post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;mu,&lt;/span&gt;
&lt;span id=&#34;cb17-18&#34;&gt;&lt;a href=&#34;#cb17-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;sigma =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;diag&lt;/span&gt;(post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;sigma),&lt;/span&gt;
&lt;span id=&#34;cb17-19&#34;&gt;&lt;a href=&#34;#cb17-19&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;parameters =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;set_names&lt;/span&gt;(opt_param, &lt;span class=&#34;fu&#34;&gt;names&lt;/span&gt;(param))&lt;/span&gt;
&lt;span id=&#34;cb17-20&#34;&gt;&lt;a href=&#34;#cb17-20&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    )&lt;/span&gt;
&lt;span id=&#34;cb17-21&#34;&gt;&lt;a href=&#34;#cb17-21&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb17-22&#34;&gt;&lt;a href=&#34;#cb17-22&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id=&#34;an-example-in-2d&#34; class=&#34;level4&#34;&gt;
&lt;h4 class=&#34;anchored&#34; data-anchor-id=&#34;an-example-in-2d&#34;&gt;An Example in 2D&lt;/h4&gt;
&lt;p&gt;A GP surrogate model is great for problems with many dimensions and relatively few observations. Here is an example in 2D with just 5 training points.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb18&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb18-1&#34;&gt;&lt;a href=&#34;#cb18-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;noise_2d &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-2&#34;&gt;&lt;a href=&#34;#cb18-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;X_train_2d &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;runif&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;20&lt;/span&gt;, &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb18-3&#34;&gt;&lt;a href=&#34;#cb18-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;y_train_2d &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ackley&lt;/span&gt;(X_train_2d) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; noise_2d &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rnorm&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb18-4&#34;&gt;&lt;a href=&#34;#cb18-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;gpr_2d &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gpr&lt;/span&gt;(rbf_kernel, X_train_2d, y_train_2d, noise_2d, &lt;span class=&#34;at&#34;&gt;l =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;sigma_f =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb18-5&#34;&gt;&lt;a href=&#34;#cb18-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;X_predict_2d &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;as.matrix&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;expand.grid&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb18-6&#34;&gt;&lt;a href=&#34;#cb18-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;seq&lt;/span&gt;(&lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;length.out =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;50&lt;/span&gt;),&lt;/span&gt;
&lt;span id=&#34;cb18-7&#34;&gt;&lt;a href=&#34;#cb18-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;seq&lt;/span&gt;(&lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;,&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;length.out =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;50&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb18-8&#34;&gt;&lt;a href=&#34;#cb18-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;))&lt;/span&gt;
&lt;span id=&#34;cb18-9&#34;&gt;&lt;a href=&#34;#cb18-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;post &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gpr_2d&lt;/span&gt;(X_predict_2d)&lt;/span&gt;
&lt;span id=&#34;cb18-10&#34;&gt;&lt;a href=&#34;#cb18-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;as_tibble&lt;/span&gt;(X_predict_2d, &lt;span class=&#34;at&#34;&gt;.name_repair =&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;~&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;x1&#34;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&#34;x2&#34;&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-11&#34;&gt;&lt;a href=&#34;#cb18-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  dplyr&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;mutate&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;mu) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-12&#34;&gt;&lt;a href=&#34;#cb18-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;ggplot&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; x1, &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; x2)) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-13&#34;&gt;&lt;a href=&#34;#cb18-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;geom_contour_filled&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;z =&lt;/span&gt; y), &lt;span class=&#34;at&#34;&gt;bins =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt;) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-14&#34;&gt;&lt;a href=&#34;#cb18-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;geom_point&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;data =&lt;/span&gt; tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;as_tibble&lt;/span&gt;(X_train_2d, &lt;span class=&#34;at&#34;&gt;.name_repair =&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;~&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;x1&#34;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&#34;x2&#34;&lt;/span&gt;))) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-15&#34;&gt;&lt;a href=&#34;#cb18-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb18-16&#34;&gt;&lt;a href=&#34;#cb18-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;labs&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;fill =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;cell-output-display&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/unnamed-chunk-16-1.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Even with just a few training points, some general tendencies of the objective function have been captured and the surrogate model should be useful for Bayesian optimisation.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id=&#34;acquisition-function-1&#34; class=&#34;level2&#34;&gt;
&lt;h2 class=&#34;anchored&#34; data-anchor-id=&#34;acquisition-function-1&#34;&gt;Acquisition Function&lt;/h2&gt;
&lt;p&gt;An acquisition function is a function used to determine the next point at which to evaluate the objective function. The goal of the acquisition function is to balance exploration, i.e.&amp;nbsp;sampling points in unexplored regions, and exploitation, i.e.&amp;nbsp;sampling points that are likely to be optimal. The acquisition function takes into account the posterior distribution of the surrogate model and provides a quantitative measure of the value of evaluating the objective function at a given point. Some common acquisition functions used in Bayesian optimization include expected improvement, probability of improvement, and upper confidence bound.&lt;/p&gt;
&lt;section id=&#34;implementing-expected-improvement&#34; class=&#34;level3&#34;&gt;
&lt;h3 class=&#34;anchored&#34; data-anchor-id=&#34;implementing-expected-improvement&#34;&gt;Implementing Expected Improvement&lt;/h3&gt;
&lt;p&gt;The basic idea behind Expected Improvement (EI) is to search for the point in the search space that has the highest probability of improving the current best solution. The expected improvement is defined as the expected value of the improvement over the current best solution, where the improvement is defined as the difference between the function value at the candidate point and the current best value. In other words, EI measures how much better the objective function is expected to be at the candidate point compared to the current best value, weighted by the probability of achieving that improvement.&lt;/p&gt;
&lt;p&gt;Formally, the expected improvement acquisition function for a minimisation problem is defined as: &lt;span class=&#34;math display&#34;&gt;\[\mathrm{EI}(\mathbf{x}) = \mathbb{E}\left[\max(0, f_{\min} - f(\mathbf{x}))\right]\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;where &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{x}\)&lt;/span&gt; is the candidate point &lt;span class=&#34;math inline&#34;&gt;\(f_{\min}\)&lt;/span&gt; is the current best function value observed so far.&lt;/p&gt;
&lt;p&gt;When using a GP surrogate model in place of &lt;span class=&#34;math inline&#34;&gt;\(f\)&lt;/span&gt;, EI can be calculated using the formula&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[EI(\mathbf{x}) = (\mu(\mathbf{x}) - y_{best} - \xi) \Phi(Z) + \sigma(\mathbf{x}) \phi(Z)\]&lt;/span&gt; with&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[Z = \frac{\mu(\mathbf{x}) - y_{best} - \xi}{\sigma(\mathbf{x})}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mu(\mathbf{x})\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\sigma(\mathbf{x})\)&lt;/span&gt; are the mean and standard deviation of the Gaussian process at &lt;span class=&#34;math inline&#34;&gt;\(\mathbf{x}\)&lt;/span&gt;. &lt;span class=&#34;math inline&#34;&gt;\(\Phi\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(\phi\)&lt;/span&gt; are the standard normal cumulative distribution function and probability density function, respectively, and &lt;span class=&#34;math inline&#34;&gt;\(\xi\)&lt;/span&gt; is a trade-off parameter that balances exploration and exploitation. Higher values of &lt;span class=&#34;math inline&#34;&gt;\(\xi\)&lt;/span&gt; leads to more exploration and smaller values to exploitation. &lt;span class=&#34;math inline&#34;&gt;\(EI(\mathbf{x}) = 0\)&lt;/span&gt; when &lt;span class=&#34;math inline&#34;&gt;\(\sigma(\mathbf{x}) = 0\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The formulas can be implemented directly.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb19&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb19-1&#34;&gt;&lt;a href=&#34;#cb19-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;expected_improvement &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(gp, X, X_train, &lt;span class=&#34;at&#34;&gt;xi =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;0.01&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb19-2&#34;&gt;&lt;a href=&#34;#cb19-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  post_pred &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gp&lt;/span&gt;(X)&lt;/span&gt;
&lt;span id=&#34;cb19-3&#34;&gt;&lt;a href=&#34;#cb19-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  post_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gp&lt;/span&gt;(X_train)&lt;/span&gt;
&lt;span id=&#34;cb19-4&#34;&gt;&lt;a href=&#34;#cb19-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  min_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;min&lt;/span&gt;(post_train&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;mu)&lt;/span&gt;
&lt;span id=&#34;cb19-5&#34;&gt;&lt;a href=&#34;#cb19-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  sigma &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;set_dim&lt;/span&gt;(post_pred&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;sigma, &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;length&lt;/span&gt;(post_pred&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;sigma), &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb19-6&#34;&gt;&lt;a href=&#34;#cb19-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  imp &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; min_train &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt; post_pred&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;mu &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt; xi&lt;/span&gt;
&lt;span id=&#34;cb19-7&#34;&gt;&lt;a href=&#34;#cb19-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  Z &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; imp &lt;span class=&#34;sc&#34;&gt;/&lt;/span&gt; sigma&lt;/span&gt;
&lt;span id=&#34;cb19-8&#34;&gt;&lt;a href=&#34;#cb19-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  ei &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; imp &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;pnorm&lt;/span&gt;(Z) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; sigma &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;dnorm&lt;/span&gt;(Z)&lt;/span&gt;
&lt;span id=&#34;cb19-9&#34;&gt;&lt;a href=&#34;#cb19-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  ei[sigma &lt;span class=&#34;sc&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;0.0&lt;/span&gt;] &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;0.0&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb19-10&#34;&gt;&lt;a href=&#34;#cb19-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  ei&lt;/span&gt;
&lt;span id=&#34;cb19-11&#34;&gt;&lt;a href=&#34;#cb19-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;When there is only a single input dimension, EI can be plotted next to the GP&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb20&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb20-1&#34;&gt;&lt;a href=&#34;#cb20-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;ei_plot &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(mu, sigma, X_pred, X_train, y_train, ei, &lt;span class=&#34;at&#34;&gt;true_function =&lt;/span&gt; &lt;span class=&#34;cn&#34;&gt;NULL&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;title =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;) {&lt;/span&gt;
&lt;span id=&#34;cb20-2&#34;&gt;&lt;a href=&#34;#cb20-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  p1 &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;tibble&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb20-3&#34;&gt;&lt;a href=&#34;#cb20-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;mu =&lt;/span&gt; mu,&lt;/span&gt;
&lt;span id=&#34;cb20-4&#34;&gt;&lt;a href=&#34;#cb20-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;uncertainty =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;1.96&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;sqrt&lt;/span&gt;(sigma),&lt;/span&gt;
&lt;span id=&#34;cb20-5&#34;&gt;&lt;a href=&#34;#cb20-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;upper =&lt;/span&gt; mu &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; uncertainty,&lt;/span&gt;
&lt;span id=&#34;cb20-6&#34;&gt;&lt;a href=&#34;#cb20-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;lower =&lt;/span&gt; mu &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt; uncertainty,&lt;/span&gt;
&lt;span id=&#34;cb20-7&#34;&gt;&lt;a href=&#34;#cb20-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; X_pred,&lt;/span&gt;
&lt;span id=&#34;cb20-8&#34;&gt;&lt;a href=&#34;#cb20-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;f =&lt;/span&gt; &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;sc&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;is.null&lt;/span&gt;(true_function)) &lt;span class=&#34;fu&#34;&gt;true_function&lt;/span&gt;(X_pred)&lt;/span&gt;
&lt;span id=&#34;cb20-9&#34;&gt;&lt;a href=&#34;#cb20-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  ) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-10&#34;&gt;&lt;a href=&#34;#cb20-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;ggplot&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; x)) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-11&#34;&gt;&lt;a href=&#34;#cb20-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;geom_line&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; mu, &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;Mean&#34;&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-12&#34;&gt;&lt;a href=&#34;#cb20-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;geom_ribbon&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb20-13&#34;&gt;&lt;a href=&#34;#cb20-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;ymin =&lt;/span&gt; lower, &lt;span class=&#34;at&#34;&gt;ymax =&lt;/span&gt; upper),&lt;/span&gt;
&lt;span id=&#34;cb20-14&#34;&gt;&lt;a href=&#34;#cb20-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;fill =&lt;/span&gt; colour&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;azure, &lt;span class=&#34;co&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;al&#34;&gt;TODO&lt;/span&gt;&lt;span class=&#34;co&#34;&gt; colour scheme&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-15&#34;&gt;&lt;a href=&#34;#cb20-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;alpha =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;0.2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-16&#34;&gt;&lt;a href=&#34;#cb20-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    ) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-17&#34;&gt;&lt;a href=&#34;#cb20-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;geom_point&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb20-18&#34;&gt;&lt;a href=&#34;#cb20-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;data =&lt;/span&gt; tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;tibble&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; X_train, &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; y_train),&lt;/span&gt;
&lt;span id=&#34;cb20-19&#34;&gt;&lt;a href=&#34;#cb20-19&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; x, &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; y, &lt;span class=&#34;at&#34;&gt;shape =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;Training point&#34;&lt;/span&gt;),&lt;/span&gt;
&lt;span id=&#34;cb20-20&#34;&gt;&lt;a href=&#34;#cb20-20&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; colour&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;orange_dark, &lt;span class=&#34;co&#34;&gt;# &lt;/span&gt;&lt;span class=&#34;al&#34;&gt;TODO&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-21&#34;&gt;&lt;a href=&#34;#cb20-21&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;size =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-22&#34;&gt;&lt;a href=&#34;#cb20-22&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    ) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-23&#34;&gt;&lt;a href=&#34;#cb20-23&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;scale_shape_manual&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;values =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;Training point&#34;&lt;/span&gt; &lt;span class=&#34;ot&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;+&#34;&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-24&#34;&gt;&lt;a href=&#34;#cb20-24&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;labs&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;shape =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-25&#34;&gt;&lt;a href=&#34;#cb20-25&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-26&#34;&gt;&lt;a href=&#34;#cb20-26&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;labs&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb20-27&#34;&gt;&lt;a href=&#34;#cb20-27&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;y&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb20-28&#34;&gt;&lt;a href=&#34;#cb20-28&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb20-29&#34;&gt;&lt;a href=&#34;#cb20-29&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;,&lt;/span&gt;
&lt;span id=&#34;cb20-30&#34;&gt;&lt;a href=&#34;#cb20-30&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;at&#34;&gt;title =&lt;/span&gt; title&lt;/span&gt;
&lt;span id=&#34;cb20-31&#34;&gt;&lt;a href=&#34;#cb20-31&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    ) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-32&#34;&gt;&lt;a href=&#34;#cb20-32&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;theme&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;panel.grid =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;element_blank&lt;/span&gt;(), &lt;span class=&#34;at&#34;&gt;axis.text.x =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;element_blank&lt;/span&gt;())&lt;/span&gt;
&lt;span id=&#34;cb20-33&#34;&gt;&lt;a href=&#34;#cb20-33&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;cf&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;sc&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;is.null&lt;/span&gt;(true_function)) {&lt;/span&gt;
&lt;span id=&#34;cb20-34&#34;&gt;&lt;a href=&#34;#cb20-34&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    p1 &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; p1 &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; &lt;/span&gt;
&lt;span id=&#34;cb20-35&#34;&gt;&lt;a href=&#34;#cb20-35&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;      &lt;span class=&#34;fu&#34;&gt;geom_line&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;mapping =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; f, &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;True function&#34;&lt;/span&gt;))&lt;/span&gt;
&lt;span id=&#34;cb20-36&#34;&gt;&lt;a href=&#34;#cb20-36&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  }&lt;/span&gt;
&lt;span id=&#34;cb20-37&#34;&gt;&lt;a href=&#34;#cb20-37&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  p2 &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;tibble&lt;/span&gt;(&lt;/span&gt;
&lt;span id=&#34;cb20-38&#34;&gt;&lt;a href=&#34;#cb20-38&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; X_pred,&lt;/span&gt;
&lt;span id=&#34;cb20-39&#34;&gt;&lt;a href=&#34;#cb20-39&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;at&#34;&gt;ei =&lt;/span&gt; ei&lt;/span&gt;
&lt;span id=&#34;cb20-40&#34;&gt;&lt;a href=&#34;#cb20-40&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  ) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-41&#34;&gt;&lt;a href=&#34;#cb20-41&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;ggplot&lt;/span&gt;() &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-42&#34;&gt;&lt;a href=&#34;#cb20-42&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;geom_line&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; x, &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; ei, &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;EI&#34;&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-43&#34;&gt;&lt;a href=&#34;#cb20-43&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-44&#34;&gt;&lt;a href=&#34;#cb20-44&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;labs&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;Expected improvement&#34;&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb20-45&#34;&gt;&lt;a href=&#34;#cb20-45&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;theme&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;panel.grid =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;element_blank&lt;/span&gt;())&lt;/span&gt;
&lt;span id=&#34;cb20-46&#34;&gt;&lt;a href=&#34;#cb20-46&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  aligned_plots &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; cowplot&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;align_plots&lt;/span&gt;(p2, p1, &lt;span class=&#34;at&#34;&gt;align =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;v&#34;&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb20-47&#34;&gt;&lt;a href=&#34;#cb20-47&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  cowplot&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;plot_grid&lt;/span&gt;(aligned_plots[[&lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;]], aligned_plots[[&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;]], &lt;span class=&#34;at&#34;&gt;ncol =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb20-48&#34;&gt;&lt;a href=&#34;#cb20-48&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;}&lt;/span&gt;
&lt;span id=&#34;cb20-49&#34;&gt;&lt;a href=&#34;#cb20-49&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;mygpr &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gpr&lt;/span&gt;(rbf_kernel, X_train, y_train, noise, &lt;span class=&#34;at&#34;&gt;l =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;sigma_f =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb20-50&#34;&gt;&lt;a href=&#34;#cb20-50&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;ei &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;expected_improvement&lt;/span&gt;(mygpr, X_predict, X_train, &lt;span class=&#34;at&#34;&gt;xi =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;0.1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb20-51&#34;&gt;&lt;a href=&#34;#cb20-51&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;post &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;mygpr&lt;/span&gt;(X_predict)&lt;/span&gt;
&lt;span id=&#34;cb20-52&#34;&gt;&lt;a href=&#34;#cb20-52&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;ei_plot&lt;/span&gt;(post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;mu, post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;sigma, X_predict, X_train, y_train, ei, &lt;span class=&#34;at&#34;&gt;true_function =&lt;/span&gt; ackley)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;cell-output-display&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/unnamed-chunk-18-1.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In this example, there is some expected improvement near the middle of the input range, but the point expected to bring about the highest improvement is at the right edge of the range.&lt;/p&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;section id=&#34;initial-training-data-1&#34; class=&#34;level2&#34;&gt;
&lt;h2 class=&#34;anchored&#34; data-anchor-id=&#34;initial-training-data-1&#34;&gt;Initial Training Data&lt;/h2&gt;
&lt;p&gt;Before applying GPR and EI, a few initial training data are needed. Considering that it is expensive to evaluate the objective function, the number of initial training observations should be limited. However, considering that the GP is not great for extrapolation, the number of initial observation should not be too small either.&lt;/p&gt;
&lt;p&gt;In general, the initial training data should be chosen to provide a good representation of the objective function. This means that the data should be chosen to cover the range of each input dimension. The data should also include inputs that are expected to be both good and bad performers.&lt;/p&gt;
&lt;p&gt;There are a few ways to create a set of initial training inputs. One approach is to use a set of random inputs. This is easy to implement, but it risks testing redundant points and it neglects any prior information of the objective function. In place of a completely random design, Latin Hypercube Sampling (LHS) is often used.&lt;/p&gt;
&lt;p&gt;Another approach is to use domain knowledge to select an initial set of inputs. For example, if the function being optimised is a manufacturing process there might be a fixed range of feasible settings and skilled operators might have good ideas for which settings would perform well.&lt;/p&gt;
&lt;p&gt;For the demonstration of Bayesian optimisation with the Ackley function in just a few dimensions, a few random or linearly spaced points will do fine.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&#34;stopping-criterion-1&#34; class=&#34;level2&#34;&gt;
&lt;h2 class=&#34;anchored&#34; data-anchor-id=&#34;stopping-criterion-1&#34;&gt;Stopping Criterion&lt;/h2&gt;
&lt;p&gt;The final component of Bayesian optimisation is a stopping criterion. Depending on the application, a good stopping criterion might be more or less obvious. In settings where a real life process is optimised, time and money are common constraints. In ML or other theoretical applications, a mathematically defined criterion might be preferred.&lt;/p&gt;
&lt;p&gt;Examples of stopping criteria include - Maximum number of objective function evaluations. - When the improvement in objective function value falls below a threshold. - Project time limits or deadlines. - Accuracy of the surrogate model.&lt;/p&gt;
&lt;/section&gt;
&lt;section id=&#34;bayesian-optimisation-in-action&#34; class=&#34;level2&#34;&gt;
&lt;h2 class=&#34;anchored&#34; data-anchor-id=&#34;bayesian-optimisation-in-action&#34;&gt;Bayesian Optimisation in Action&lt;/h2&gt;
&lt;p&gt;With all the components of Bayesian optimisation in place, a demonstration is due.&lt;/p&gt;
&lt;section id=&#34;example-in-1d&#34; class=&#34;level3&#34;&gt;
&lt;h3 class=&#34;anchored&#34; data-anchor-id=&#34;example-in-1d&#34;&gt;Example in 1D&lt;/h3&gt;
&lt;p&gt;The initial training data is just two points.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb21&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb21-1&#34;&gt;&lt;a href=&#34;#cb21-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;n_initial &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-2&#34;&gt;&lt;a href=&#34;#cb21-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;X_initial &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;2.5&lt;/span&gt;, &lt;span class=&#34;fl&#34;&gt;2.1&lt;/span&gt;), n_initial, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb21-3&#34;&gt;&lt;a href=&#34;#cb21-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;noise &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb21-4&#34;&gt;&lt;a href=&#34;#cb21-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;y_initial &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ackley&lt;/span&gt;(X_initial) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; noise &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rnorm&lt;/span&gt;(n_initial)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A GP is conditioned on the initial training data and expected improvement is calculated along a grid&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb22&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb22-1&#34;&gt;&lt;a href=&#34;#cb22-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;gp &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gpr&lt;/span&gt;(rbf_kernel, X_initial, y_initial, noise, &lt;span class=&#34;at&#34;&gt;l =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;sigma_f =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb22-2&#34;&gt;&lt;a href=&#34;#cb22-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;X_predict &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;seq&lt;/span&gt;(&lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;length.out =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;), &lt;span class=&#34;dv&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb22-3&#34;&gt;&lt;a href=&#34;#cb22-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;ei &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;expected_improvement&lt;/span&gt;(gp, X_predict, X_initial, &lt;span class=&#34;at&#34;&gt;xi =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;0.01&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here is what it looks like so far&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb23&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb23-1&#34;&gt;&lt;a href=&#34;#cb23-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;post &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gp&lt;/span&gt;(X_predict)&lt;/span&gt;
&lt;span id=&#34;cb23-2&#34;&gt;&lt;a href=&#34;#cb23-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;&lt;span class=&#34;fu&#34;&gt;ei_plot&lt;/span&gt;(post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;mu, post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;sigma, X_predict, X_initial, y_initial, ei, ackley)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;cell-output-display&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/unnamed-chunk-21-1.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It looks like the point that will yield the most improvement is all the way at the right edge of input space.&lt;/p&gt;
&lt;p&gt;Now this point is added to the training data&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb24&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb24-1&#34;&gt;&lt;a href=&#34;#cb24-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;x &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; X_predict[[&lt;span class=&#34;fu&#34;&gt;which.max&lt;/span&gt;(ei)]]&lt;/span&gt;
&lt;span id=&#34;cb24-2&#34;&gt;&lt;a href=&#34;#cb24-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;y &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ackley&lt;/span&gt;(x) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; noise &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rnorm&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb24-3&#34;&gt;&lt;a href=&#34;#cb24-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;X_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rbind&lt;/span&gt;(X_initial, &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(x))&lt;/span&gt;
&lt;span id=&#34;cb24-4&#34;&gt;&lt;a href=&#34;#cb24-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;y_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(y_initial, &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(y))&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now it is time for the optimisation part. The stopping criterion will be five additional evaluations.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb25&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb25-1&#34;&gt;&lt;a href=&#34;#cb25-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;n_rounds &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In each round, the GP is conditioned on the training data, the point that maximises EI is found, and that point is evaluated in the objective function.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb26&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb26-1&#34;&gt;&lt;a href=&#34;#cb26-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;plots &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;lapply&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;seq_len&lt;/span&gt;(n_rounds), &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(i) {&lt;/span&gt;
&lt;span id=&#34;cb26-2&#34;&gt;&lt;a href=&#34;#cb26-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  gp &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gpr&lt;/span&gt;(rbf_kernel, X_train, y_train, noise, &lt;span class=&#34;at&#34;&gt;l =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;sigma_f =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb26-3&#34;&gt;&lt;a href=&#34;#cb26-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  ei &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;expected_improvement&lt;/span&gt;(gp, X_predict, X_train, &lt;span class=&#34;at&#34;&gt;xi =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;0.01&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb26-4&#34;&gt;&lt;a href=&#34;#cb26-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  post &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gp&lt;/span&gt;(X_predict)&lt;/span&gt;
&lt;span id=&#34;cb26-5&#34;&gt;&lt;a href=&#34;#cb26-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  p &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ei_plot&lt;/span&gt;(post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;mu, post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;sigma, X_predict, X_train, y_train, ei, ackley, &lt;span class=&#34;at&#34;&gt;title =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;paste&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;Round&#34;&lt;/span&gt;, i))&lt;/span&gt;
&lt;span id=&#34;cb26-6&#34;&gt;&lt;a href=&#34;#cb26-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  x &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; X_predict[[&lt;span class=&#34;fu&#34;&gt;which.max&lt;/span&gt;(ei)]]&lt;/span&gt;
&lt;span id=&#34;cb26-7&#34;&gt;&lt;a href=&#34;#cb26-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  y &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ackley&lt;/span&gt;(x) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; noise &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rnorm&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb26-8&#34;&gt;&lt;a href=&#34;#cb26-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  X_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rbind&lt;/span&gt;(X_train, &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(x))&lt;/span&gt;
&lt;span id=&#34;cb26-9&#34;&gt;&lt;a href=&#34;#cb26-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  y_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(y_train, &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(y))&lt;/span&gt;
&lt;span id=&#34;cb26-10&#34;&gt;&lt;a href=&#34;#cb26-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  p&lt;/span&gt;
&lt;span id=&#34;cb26-11&#34;&gt;&lt;a href=&#34;#cb26-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;})&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A closer look at each iteration reveals that the global optimum was found in the fourth evaluation of the objective function.&lt;/p&gt;
&lt;div class=&#34;cell quarto-layout-panel&#34;&gt;
&lt;div class=&#34;quarto-layout-row quarto-layout-valign-top&#34;&gt;
&lt;div class=&#34;cell-output-display quarto-layout-cell&#34; style=&#34;flex-basis: 50.0%;justify-content: center;&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/bo_plots-1.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;cell-output-display quarto-layout-cell&#34; style=&#34;flex-basis: 50.0%;justify-content: center;&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/bo_plots-2.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;quarto-layout-row quarto-layout-valign-top&#34;&gt;
&lt;div class=&#34;cell-output-display quarto-layout-cell&#34; style=&#34;flex-basis: 50.0%;justify-content: center;&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/bo_plots-3.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;cell-output-display quarto-layout-cell&#34; style=&#34;flex-basis: 50.0%;justify-content: center;&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/bo_plots-4.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;quarto-layout-row quarto-layout-valign-top&#34;&gt;
&lt;div class=&#34;cell-output-display quarto-layout-cell&#34; style=&#34;flex-basis: 100.0%;justify-content: center;&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/bo_plots-5.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;section id=&#34;example-in-2d&#34; class=&#34;level3&#34;&gt;
&lt;h3 class=&#34;anchored&#34; data-anchor-id=&#34;example-in-2d&#34;&gt;Example in 2D&lt;/h3&gt;
&lt;p&gt;With two input dimensions the optimisation is a bit harder.&lt;/p&gt;
&lt;p&gt;The initial training data will be four points.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb27&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb27-1&#34;&gt;&lt;a href=&#34;#cb27-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;n_initial &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;4&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-2&#34;&gt;&lt;a href=&#34;#cb27-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;X_initial &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;fl&#34;&gt;2.1&lt;/span&gt;, &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;2.1&lt;/span&gt;, &lt;span class=&#34;fl&#34;&gt;4.7&lt;/span&gt;, &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;4.7&lt;/span&gt;, &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;2.5&lt;/span&gt;, &lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;fl&#34;&gt;2.5&lt;/span&gt;) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-3&#34;&gt;&lt;a href=&#34;#cb27-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(n_initial, &lt;span class=&#34;dv&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb27-4&#34;&gt;&lt;a href=&#34;#cb27-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;noise &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb27-5&#34;&gt;&lt;a href=&#34;#cb27-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;y_initial &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ackley&lt;/span&gt;(X_initial) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; noise &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rnorm&lt;/span&gt;(n_initial)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A GP is conditioned on the initial training data and expected improvement is calculated along a grid&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb28&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb28-1&#34;&gt;&lt;a href=&#34;#cb28-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;gp &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gpr&lt;/span&gt;(rbf_kernel, X_initial, y_initial, noise, &lt;span class=&#34;at&#34;&gt;l =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;sigma_f =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb28-2&#34;&gt;&lt;a href=&#34;#cb28-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;X_predict &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;seq&lt;/span&gt;(&lt;span class=&#34;sc&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;dv&#34;&gt;5&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;length.out =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;50&lt;/span&gt;) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-3&#34;&gt;&lt;a href=&#34;#cb28-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;expand.grid&lt;/span&gt;(.,.) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb28-4&#34;&gt;&lt;a href=&#34;#cb28-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;as.matrix&lt;/span&gt;()&lt;/span&gt;
&lt;span id=&#34;cb28-5&#34;&gt;&lt;a href=&#34;#cb28-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;ei &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;expected_improvement&lt;/span&gt;(gp, X_predict, X_initial, &lt;span class=&#34;at&#34;&gt;xi =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;0.01&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Here is what it looks like so far&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb29&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb29-1&#34;&gt;&lt;a href=&#34;#cb29-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;post &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gp&lt;/span&gt;(X_predict)&lt;/span&gt;
&lt;span id=&#34;cb29-2&#34;&gt;&lt;a href=&#34;#cb29-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;as_tibble&lt;/span&gt;(X_predict, &lt;span class=&#34;at&#34;&gt;.name_repair =&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;~&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;x1&#34;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&#34;x2&#34;&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-3&#34;&gt;&lt;a href=&#34;#cb29-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  dplyr&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;mutate&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;mu) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-4&#34;&gt;&lt;a href=&#34;#cb29-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;ggplot&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; x1, &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; x2)) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-5&#34;&gt;&lt;a href=&#34;#cb29-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;geom_contour_filled&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;z =&lt;/span&gt; y), &lt;span class=&#34;at&#34;&gt;bins =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt;) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-6&#34;&gt;&lt;a href=&#34;#cb29-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;geom_point&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;data =&lt;/span&gt; tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;as_tibble&lt;/span&gt;(X_initial, &lt;span class=&#34;at&#34;&gt;.name_repair =&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;~&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;x1&#34;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&#34;x2&#34;&lt;/span&gt;))) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-7&#34;&gt;&lt;a href=&#34;#cb29-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;geom_point&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;data =&lt;/span&gt; tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;as_tibble&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;(X_predict[&lt;span class=&#34;fu&#34;&gt;which.max&lt;/span&gt;(ei), ]), &lt;span class=&#34;at&#34;&gt;.name_repair =&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;~&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;x1&#34;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&#34;x2&#34;&lt;/span&gt;)), &lt;span class=&#34;at&#34;&gt;mapping =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;max EI&#34;&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-8&#34;&gt;&lt;a href=&#34;#cb29-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb29-9&#34;&gt;&lt;a href=&#34;#cb29-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  &lt;span class=&#34;fu&#34;&gt;labs&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;fill =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;)&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&#34;cell-output-display&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/unnamed-chunk-27-1.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It looks like the point that will yield the most improvement is all the way at the corner of input space.&lt;/p&gt;
&lt;p&gt;Now this point is added to the training data&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb30&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb30-1&#34;&gt;&lt;a href=&#34;#cb30-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;x &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; X_predict[&lt;span class=&#34;fu&#34;&gt;which.max&lt;/span&gt;(ei), ]&lt;/span&gt;
&lt;span id=&#34;cb30-2&#34;&gt;&lt;a href=&#34;#cb30-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;y &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ackley&lt;/span&gt;(x) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; noise &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rnorm&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb30-3&#34;&gt;&lt;a href=&#34;#cb30-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;X_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rbind&lt;/span&gt;(X_initial, x)&lt;/span&gt;
&lt;span id=&#34;cb30-4&#34;&gt;&lt;a href=&#34;#cb30-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;y_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(y_initial, &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(y))&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Now it is time for the optimisation part. The stopping criterion will be eigth additional evaluations.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb31&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb31-1&#34;&gt;&lt;a href=&#34;#cb31-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;n_rounds &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;In each round, the GP is conditioned on the training data, the point that maximises EI is found, and that point is evaluated in the objective function.&lt;/p&gt;
&lt;div class=&#34;cell&#34;&gt;
&lt;div class=&#34;sourceCode&#34; id=&#34;cb32&#34;&gt;&lt;pre class=&#34;sourceCode r cell-code code-with-copy&#34;&gt;&lt;code class=&#34;sourceCode r&#34;&gt;&lt;span id=&#34;cb32-1&#34;&gt;&lt;a href=&#34;#cb32-1&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;plots &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;lapply&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;seq_len&lt;/span&gt;(n_rounds), &lt;span class=&#34;cf&#34;&gt;function&lt;/span&gt;(i) {&lt;/span&gt;
&lt;span id=&#34;cb32-2&#34;&gt;&lt;a href=&#34;#cb32-2&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  gp &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gpr&lt;/span&gt;(rbf_kernel, X_train, y_train, noise, &lt;span class=&#34;at&#34;&gt;l =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;sigma_f =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb32-3&#34;&gt;&lt;a href=&#34;#cb32-3&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  ei &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;expected_improvement&lt;/span&gt;(gp, X_predict, X_train, &lt;span class=&#34;at&#34;&gt;xi =&lt;/span&gt; &lt;span class=&#34;fl&#34;&gt;0.01&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb32-4&#34;&gt;&lt;a href=&#34;#cb32-4&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  post &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;gp&lt;/span&gt;(X_predict)&lt;/span&gt;
&lt;span id=&#34;cb32-5&#34;&gt;&lt;a href=&#34;#cb32-5&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  x &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; X_predict[&lt;span class=&#34;fu&#34;&gt;which.max&lt;/span&gt;(ei), ]&lt;/span&gt;
&lt;span id=&#34;cb32-6&#34;&gt;&lt;a href=&#34;#cb32-6&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  p &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;as_tibble&lt;/span&gt;(X_predict, &lt;span class=&#34;at&#34;&gt;.name_repair =&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;~&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;x1&#34;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&#34;x2&#34;&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-7&#34;&gt;&lt;a href=&#34;#cb32-7&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    dplyr&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;mutate&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; post&lt;span class=&#34;sc&#34;&gt;$&lt;/span&gt;mu) &lt;span class=&#34;sc&#34;&gt;%&amp;gt;%&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-8&#34;&gt;&lt;a href=&#34;#cb32-8&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;ggplot&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;x =&lt;/span&gt; x1, &lt;span class=&#34;at&#34;&gt;y =&lt;/span&gt; x2)) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-9&#34;&gt;&lt;a href=&#34;#cb32-9&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;geom_contour_filled&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;z =&lt;/span&gt; y), &lt;span class=&#34;at&#34;&gt;bins =&lt;/span&gt; &lt;span class=&#34;dv&#34;&gt;8&lt;/span&gt;) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-10&#34;&gt;&lt;a href=&#34;#cb32-10&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;geom_point&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;data =&lt;/span&gt; tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;as_tibble&lt;/span&gt;(X_train, &lt;span class=&#34;at&#34;&gt;.name_repair =&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;~&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;x1&#34;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&#34;x2&#34;&lt;/span&gt;))) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-11&#34;&gt;&lt;a href=&#34;#cb32-11&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;geom_point&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;data =&lt;/span&gt; tibble&lt;span class=&#34;sc&#34;&gt;::&lt;/span&gt;&lt;span class=&#34;fu&#34;&gt;as_tibble&lt;/span&gt;(&lt;span class=&#34;fu&#34;&gt;t&lt;/span&gt;(x), &lt;span class=&#34;at&#34;&gt;.name_repair =&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;~&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;x1&#34;&lt;/span&gt;, &lt;span class=&#34;st&#34;&gt;&#34;x2&#34;&lt;/span&gt;)), &lt;span class=&#34;at&#34;&gt;mapping =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;aes&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;max EI&#34;&lt;/span&gt;)) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-12&#34;&gt;&lt;a href=&#34;#cb32-12&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;theme_minimal&lt;/span&gt;() &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt;&lt;/span&gt;
&lt;span id=&#34;cb32-13&#34;&gt;&lt;a href=&#34;#cb32-13&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;    &lt;span class=&#34;fu&#34;&gt;labs&lt;/span&gt;(&lt;span class=&#34;at&#34;&gt;fill =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;colour =&lt;/span&gt; &lt;span class=&#34;st&#34;&gt;&#34;&#34;&lt;/span&gt;, &lt;span class=&#34;at&#34;&gt;title =&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;paste&lt;/span&gt;(&lt;span class=&#34;st&#34;&gt;&#34;Round&#34;&lt;/span&gt;, i))&lt;/span&gt;
&lt;span id=&#34;cb32-14&#34;&gt;&lt;a href=&#34;#cb32-14&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  y &lt;span class=&#34;ot&#34;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;ackley&lt;/span&gt;(x) &lt;span class=&#34;sc&#34;&gt;+&lt;/span&gt; noise &lt;span class=&#34;sc&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rnorm&lt;/span&gt;(&lt;span class=&#34;dv&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&#34;cb32-15&#34;&gt;&lt;a href=&#34;#cb32-15&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  X_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;rbind&lt;/span&gt;(X_train, x)&lt;/span&gt;
&lt;span id=&#34;cb32-16&#34;&gt;&lt;a href=&#34;#cb32-16&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  y_train &lt;span class=&#34;ot&#34;&gt;&amp;lt;&amp;lt;-&lt;/span&gt; &lt;span class=&#34;fu&#34;&gt;c&lt;/span&gt;(y_train, &lt;span class=&#34;fu&#34;&gt;matrix&lt;/span&gt;(y))&lt;/span&gt;
&lt;span id=&#34;cb32-17&#34;&gt;&lt;a href=&#34;#cb32-17&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;  p&lt;/span&gt;
&lt;span id=&#34;cb32-18&#34;&gt;&lt;a href=&#34;#cb32-18&#34; aria-hidden=&#34;true&#34; tabindex=&#34;-1&#34;&gt;&lt;/a&gt;})&lt;/span&gt;&lt;/code&gt;&lt;button title=&#34;Copy to Clipboard&#34; class=&#34;code-copy-button&#34;&gt;&lt;i class=&#34;bi&#34;&gt;&lt;/i&gt;&lt;/button&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Looking at the last four iterations reveals that, while close, the global optimum has not been found and that many iterations were spent exploring the edges of input space. A few more iterations might have revealed the global optimum. On the other hand, the small budget did reveal a relatively good set of input parameters.&lt;/p&gt;
&lt;div class=&#34;cell quarto-layout-panel&#34;&gt;
&lt;div class=&#34;quarto-layout-row quarto-layout-valign-top&#34;&gt;
&lt;div class=&#34;cell-output-display quarto-layout-cell&#34; style=&#34;flex-basis: 50.0%;justify-content: center;&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/bo_plots_2d-1.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;cell-output-display quarto-layout-cell&#34; style=&#34;flex-basis: 50.0%;justify-content: center;&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/bo_plots_2d-2.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;quarto-layout-row quarto-layout-valign-top&#34;&gt;
&lt;div class=&#34;cell-output-display quarto-layout-cell&#34; style=&#34;flex-basis: 50.0%;justify-content: center;&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/bo_plots_2d-3.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;cell-output-display quarto-layout-cell&#34; style=&#34;flex-basis: 50.0%;justify-content: center;&#34;&gt;
&lt;p&gt;&lt;img src=&#34;bayes-opt_files/figure-html/bo_plots_2d-4.png&#34; class=&#34;img-fluid&#34; width=&#34;672&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/section&gt;
&lt;/section&gt;
&lt;script type=&#34;application/javascript&#34;&gt;
window.document.addEventListener(&#34;DOMContentLoaded&#34;, function (event) {
  const icon = &#34;î§&#34;;
  const anchorJS = new window.AnchorJS();
  anchorJS.options = {
    placement: &#39;right&#39;,
    icon: icon
  };
  anchorJS.add(&#39;.anchored&#39;);
  const clipboard = new window.ClipboardJS(&#39;.code-copy-button&#39;, {
    target: function(trigger) {
      return trigger.previousElementSibling;
    }
  });
  clipboard.on(&#39;success&#39;, function(e) {
    // button target
    const button = e.trigger;
    // don&#39;t keep focus
    button.blur();
    // flash &#34;checked&#34;
    button.classList.add(&#39;code-copy-button-checked&#39;);
    setTimeout(function() {
      button.classList.remove(&#39;code-copy-button-checked&#39;);
    }, 1000);
    // clear code selection
    e.clearSelection();
  });
  function tippyHover(el, contentFn) {
    const config = {
      allowHTML: true,
      content: contentFn,
      maxWidth: 500,
      delay: 100,
      arrow: false,
      appendTo: function(el) {
          return el.parentElement;
      },
      interactive: true,
      interactiveBorder: 10,
      theme: &#39;quarto&#39;,
      placement: &#39;bottom-start&#39;
    };
    window.tippy(el, config); 
  }
  const noterefs = window.document.querySelectorAll(&#39;a[role=&#34;doc-noteref&#34;]&#39;);
  for (var i=0; i&lt;noterefs.length; i++) {
    const ref = noterefs[i];
    tippyHover(ref, function() {
      let href = ref.getAttribute(&#39;href&#39;);
      try { href = new URL(href).hash; } catch {}
      const id = href.replace(/^#\/?/, &#34;&#34;);
      const note = window.document.getElementById(id);
      return note.innerHTML;
    });
  }
  var bibliorefs = window.document.querySelectorAll(&#39;a[role=&#34;doc-biblioref&#34;]&#39;);
  for (var i=0; i&lt;bibliorefs.length; i++) {
    const ref = bibliorefs[i];
    const cites = ref.parentNode.getAttribute(&#39;data-cites&#39;).split(&#39; &#39;);
    tippyHover(ref, function() {
      var popup = window.document.createElement(&#39;div&#39;);
      cites.forEach(function(cite) {
        var citeDiv = window.document.createElement(&#39;div&#39;);
        citeDiv.classList.add(&#39;hanging-indent&#39;);
        citeDiv.classList.add(&#39;csl-entry&#39;);
        var biblioDiv = window.document.getElementById(&#39;ref-&#39; + cite);
        if (biblioDiv) {
          citeDiv.innerHTML = biblioDiv.innerHTML;
        }
        popup.appendChild(citeDiv);
      });
      return popup.innerHTML;
    });
  }
});
&lt;/script&gt;
&lt;/main&gt;
&lt;!-- /main column --&gt;
&lt;/div&gt; &lt;!-- /row --&gt;
&lt;/div&gt; &lt;!-- /container fluid --&gt;


&lt;/body&gt;&lt;/html&gt;</description>
    </item>
    
    <item>
      <title>Bespoke Bayesian Model for Biochemical Assays</title>
      <link>/post/bespoke-biochem-one/</link>
      <pubDate>Sat, 20 Nov 2021 00:00:00 +0000</pubDate>
      <guid>/post/bespoke-biochem-one/</guid>
      <description>
&lt;script src=&#34;../../post/bespoke-biochem-one/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I am on a quest to improve the model fitting I do on biochemical assays. For some time, I have had this feeling that I should be able to extract more information from the data gathered in biochemical assays, in particular assays with a high throughput. I have been using classical machine learning techniques and generic fitting and optimisation functions to interpret data from such assays. While this approach works, it also neglects much of the available domain expertise. Many of the underlying biochemical mechanisms are known and I would like my models to take that into account so I get results that are more directly interpretable in the context of the hypothesis that required the assay in the first place. In other words, I want a bespoke model.&lt;/p&gt;
&lt;p&gt;I will be developing the bespoke model one minimally viable step at a time. In this study, I am building a Bayesian model for biochemical assays where the underlying data generating process is the Hill equation for tissue responses &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#ref-Neubig597&#34; role=&#34;doc-biblioref&#34;&gt;1&lt;/a&gt;]&lt;/span&gt;. I will then test the model in two simulated example studies.&lt;/p&gt;
&lt;p&gt;I was inspired to write this study after reading the chapter âGeneralized Linear Madnessâ in the book Statistical Rethinking by R. McElreath &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#ref-McElreath:2016&#34; role=&#34;doc-biblioref&#34;&gt;2&lt;/a&gt;]&lt;/span&gt; and the writings of M. Betancourt &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#ref-Betancourt:2019&#34; role=&#34;doc-biblioref&#34;&gt;3&lt;/a&gt;]&lt;/span&gt;. For an introduction to bespoke Bayesian models, I highly recommend these resources.&lt;/p&gt;
&lt;p&gt;If you are following along, we will build the Bayesian models in Stan and make use of the Rstan interface to extract posterior samples. For data wrangling and visualisation, we will use the Tidyverse.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(magrittr)

options(mc.cores = parallel::detectCores())

colour &amp;lt;- list(
  orange_dark = &amp;quot;#fb8500&amp;quot;,
  orange_light = &amp;quot;#ffb703&amp;quot;,
  blue_dark = &amp;quot;#023047&amp;quot;,
  azure = &amp;quot;#219ebc&amp;quot;,
  blue_light = &amp;quot;#8ecae6&amp;quot;
)

set.seed(4444)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;contents&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Contents&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#contents&#34;&gt;Contents&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#domain-expertise&#34;&gt;Domain Expertise&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#hill-equation&#34;&gt;Hill Equation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#from-domain-expertise-to-probabilistic-model&#34;&gt;From Domain Expertise to Probabilistic Model&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#a-prior-for-the-hill-coefficient&#34;&gt;A prior for the Hill coefficient&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-prior-for-the-maximum-tissue-response&#34;&gt;A prior for the maximum tissue response&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-prior-for-the-minimum-tissue-response&#34;&gt;A prior for the minimum tissue response&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-prior-for-potency&#34;&gt;A prior for potency&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#a-prior-for-experiment-noise&#34;&gt;A prior for experiment noise&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example-studies&#34;&gt;Example Studies&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#example-study-1---exploring-kinetics&#34;&gt;Example Study 1 - Exploring Kinetics&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#a-model-for-study-1&#34;&gt;A model for study 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#prior-predictive-check-in-tidyverse&#34;&gt;Prior predictive check in Tidyverse&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#building-a-stan-model-for-study-1&#34;&gt;Building a Stan model for study 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fitting-study-1&#34;&gt;Fitting study 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#example-study-2---new-drug&#34;&gt;Example Study 2 - New Drug&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#a-model-for-study-2&#34;&gt;A model for study 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#prior-predictive-check-with-stan&#34;&gt;Prior predictive check with Stan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#building-a-stan-model-for-study-2&#34;&gt;Building a Stan model for study 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#fitting-study-2&#34;&gt;Fitting study 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#assessing-posterior-quality&#34;&gt;Assessing posterior quality&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#comparing-to-another-fitting-method&#34;&gt;Comparing to another fitting method&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#next-steps&#34;&gt;Next Steps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#license&#34;&gt;License&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;domain-expertise&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Domain Expertise&lt;/h1&gt;
&lt;p&gt;Before we start coding a model or even looking at any data, letâs formally discuss the biochemical domain experitise.&lt;/p&gt;
&lt;div id=&#34;hill-equation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hill Equation&lt;/h2&gt;
&lt;p&gt;When a ligand, e.g.Â a drug, is an antagonist to a receptor that causes some tissue response, the strength of that response, &lt;span class=&#34;math inline&#34;&gt;\(\mu_i\)&lt;/span&gt;, declines with increased concentration of that ligand, &lt;span class=&#34;math inline&#34;&gt;\([A_i]\)&lt;/span&gt;. The response is known to follow the Hill Equation &lt;span class=&#34;citation&#34;&gt;[&lt;a href=&#34;#ref-Neubig597&#34; role=&#34;doc-biblioref&#34;&gt;1&lt;/a&gt;]&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\mu_i = top - \frac{bottom - top}{1 + 10^{(\log_{10}(IC_{50}) - \log_{10}([A_i]))^{n_H}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;When tissue response is plotted against log ligand concentration, the Hill equation is a downwards sloping S-curve where &lt;span class=&#34;math inline&#34;&gt;\(top\)&lt;/span&gt; is the maximum response and &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt; is the minimum response. &lt;span class=&#34;math inline&#34;&gt;\(IC_{50}\)&lt;/span&gt; is the concentration at which the response is halfway between &lt;span class=&#34;math inline&#34;&gt;\(top\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt;. The final parameter, the Hill coefficient &lt;span class=&#34;math inline&#34;&gt;\(n_H\)&lt;/span&gt;, affects the steepness of the curve and is determined by the underlying kinetics. At &lt;span class=&#34;math inline&#34;&gt;\(n_H = 1\)&lt;/span&gt;, a ligand binding is independent of previously bound ligands. At &lt;span class=&#34;math inline&#34;&gt;\(n_H &amp;lt; 1\)&lt;/span&gt; binding has diminishing returns and at &lt;span class=&#34;math inline&#34;&gt;\(n_H &amp;gt; 1\)&lt;/span&gt; ligands cooperatively bind for increasing returns on tissue response.&lt;/p&gt;
&lt;p&gt;The Hill Equation appears in various forms in literature. Notably, when the ligand is an agonist, the curve has a positive slope and the halfway point is then often named &lt;span class=&#34;math inline&#34;&gt;\(EC_{50}\)&lt;/span&gt;. The logarithm base used could also be any other, but base 10 is a common choice, as 10 times dilutions or other whole-number dilutions are easier to make.&lt;/p&gt;
&lt;p&gt;Letâs plot an example curve&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hill_function &amp;lt;- function(log_conc, bottom, top, log_IC50, nH) {
  top + (bottom - top)/(1 + 10^((log_IC50 - log_conc)*nH))
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bottom &amp;lt;- 0
top &amp;lt;- 1
log_IC50 &amp;lt;- -3
nH &amp;lt;- 1
ggplot() +
  xlim(log_IC50 - 3, log_IC50 + 3) +
  geom_function(
    fun = hill_function,
    args = list(bottom = bottom, top = top, log_IC50 = log_IC50, nH = nH),
    aes(colour = &amp;quot;Tissue response&amp;quot;)
  ) +
  labs(
    x = &amp;quot;log ligand concentration&amp;quot;,
    y = &amp;quot;response&amp;quot;,
    title = &amp;quot;Hill Equation Example&amp;quot;
  ) +
  scale_colour_manual(values = c(&amp;quot;Tissue response&amp;quot; = colour$azure)) +
  theme_minimal() +
  theme(legend.title = element_blank())&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-one/index_files/figure-html/hill_equation-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In the real world, we cannot sample the true tissue response exactly. As a proxy for the tissue response, we employ assays that are performed &lt;em&gt;in vitro&lt;/em&gt;. Such assays are sensitive to environmental conditions and, even in the most strictly controlled settings, yield noisy responses. Baring any systematic bias, the assay response, &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt; should average to the true tissue response though.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;assay_response &amp;lt;- function(log_conc, bottom, top, log_IC50, nH, sigma) {
  noise &amp;lt;- rnorm(length(log_conc), 0, sigma)
  hill_function(log_conc, bottom, top, log_IC50, nH) + noise
}&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;tibble::tibble(
  log_conc = seq(log_IC50 -3, log_IC50 + 3, length.out = 5),
  y = assay_response(log_conc, bottom, top, log_IC50, nH, (top - bottom)/20)
) %&amp;gt;% 
  ggplot(aes(log_conc, y)) +
  geom_point(aes(colour = &amp;quot;Noisy assay response&amp;quot;)) +
  geom_function(
    fun = hill_function,
    args = list(bottom = bottom, top = top, log_IC50 = log_IC50, nH = nH),
    aes(colour = &amp;quot;Tissue response&amp;quot;)
  ) +
  scale_colour_manual(values = c(
    &amp;quot;Tissue response&amp;quot; = colour$azure,
    &amp;quot;Noisy assay response&amp;quot; = colour$orange_light
  )) +
  labs(
    x = &amp;quot;log ligand concentration&amp;quot;,
    y = &amp;quot;response&amp;quot;,
    colour = &amp;quot;&amp;quot;
  ) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-one/index_files/figure-html/noisy_assay_response-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;from-domain-expertise-to-probabilistic-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;From Domain Expertise to Probabilistic Model&lt;/h2&gt;
&lt;p&gt;With the basic domain knowledge in place, we are ready to start thinking about the assay in terms of probability distributions.&lt;/p&gt;
&lt;p&gt;The first expression relates our observed assay responses, &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt;, to the true underlying tissue response, &lt;span class=&#34;math inline&#34;&gt;\(\mu_i\)&lt;/span&gt;. Given repeat observations, the assay response should average to the tissue response and the variance should be small and finite, so it is not too far a stretch to think of the assay response as a sample from a normal distribution.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[y_i \sim {\sf Normal}(\mu_i, \sigma)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Where &lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt; is a parameter that is shared among all observations.&lt;/p&gt;
&lt;p&gt;We already know how the tissue response relates to the ligand concentration, &lt;span class=&#34;math inline&#34;&gt;\([A_i]\)&lt;/span&gt;, the variable of our assay; it is the Hill equation.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\mu_i = top - \frac{bottom - top}{1 + 10^{(\log_{10}(IC_{50}) - \log_{10}([A_i]))^{n_H}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;These two expressions define our observational model or likelihood function. Next, we need to specify our prior model, and this is where domain expertise comes in handy.&lt;/p&gt;
&lt;p&gt;The prior model needs to have prior assumptions and corresponding distributions for each parameter in the model. The parameters that need priors are &lt;span class=&#34;math inline&#34;&gt;\(IC_{50}\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(top\)&lt;/span&gt;, &lt;span class=&#34;math inline&#34;&gt;\(n_H\)&lt;/span&gt;, and &lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(\mu_i\)&lt;/span&gt; is an unobserved variable - it is a deterministic function of the model parameters and our variable, &lt;span class=&#34;math inline&#34;&gt;\([A_i]\)&lt;/span&gt;, so it does not need a prior.&lt;/p&gt;
&lt;p&gt;The priors will always have to be specific to the assay at hand. In this study, we are not considering a real assay, but will be simulating instead. Even so, we can still discuss general prior strategies for parameters of the model, in the light of our general knowledge about the biochemical processes. Later, when we start simulating, we can lock in specific priors.&lt;/p&gt;
&lt;p&gt;Letâs consider each parameter in turn, starting with &lt;span class=&#34;math inline&#34;&gt;\(n_H\)&lt;/span&gt;.&lt;/p&gt;
&lt;div id=&#34;a-prior-for-the-hill-coefficient&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A prior for the Hill coefficient&lt;/h3&gt;
&lt;p&gt;The Hill coefficient will in many cases be well known. For instance, if the receptor that causes the tissue response is known to have only one binding site for the ligand, it extremely unlikely that we will observe any cooperative or competitive kinetics.&lt;/p&gt;
&lt;p&gt;When each ligand binds an individual receptor, the binding should be independent, regardless of the nature of the ligand. Hence, in theory, &lt;span class=&#34;math inline&#34;&gt;\(n_H = 1\)&lt;/span&gt; and we can assign a narrow prior, say &lt;span class=&#34;math inline&#34;&gt;\(n_H \sim {\sf Normal}(1, 0.1)\)&lt;/span&gt;. This prior puts 95% of the probability between 0.8 and 1.2. If we were very sure, we could go for an even narrower prior.&lt;/p&gt;
&lt;p&gt;In case we encountered a response with cooperative binding, we would just move the prior distribution a bit above 1. For instance, if we were studying hemoglobin, we could put the prior at &lt;span class=&#34;math inline&#34;&gt;\({\sf Normal}(2.5, 0.5)\)&lt;/span&gt; or thereabouts.&lt;/p&gt;
&lt;p&gt;We know one more thing though. The Hill coefficient cannot be less than zero, as that would change the kinetics of the system. With the narrow prior around &lt;span class=&#34;math inline&#34;&gt;\(n_H = 1\)&lt;/span&gt; it is not really an issue, as there is virtually no probability mass below 0, but for kinetics with diminishing returns, an exponential prior or a half-normal distribution may be preferable.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-prior-for-the-maximum-tissue-response&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A prior for the maximum tissue response&lt;/h3&gt;
&lt;p&gt;When discussing the &lt;span class=&#34;math inline&#34;&gt;\(top\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt; parameters, it is worth discussing assay technique. Even though the assay is performed &lt;em&gt;in vitro&lt;/em&gt;, the subject, e.g.Â tissue, receptor, or enzyme, is often a biological construct and thus likely to exhibit batch variation. Furthermore, the raw assay reading carries no particular meaning. Instead, we employ controls to get a normalised response. For instance, we might use a bit of buffer as a negative control and assign the corresponding response to 1 and, at the other end, we might use a known strongly binding ligand as a positive control and assign the corresponding response to 0. The raw readings are then normalised between these two controls to yield the assay response, &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Back to the maximum response. In most contexts, the maximum response is not all that interesting compared to the other parameters. We expect the maximum response to be in the vicinity of the negative control, and if we were doing regular curve fitting, we might just fix the maximum response at 1.&lt;/p&gt;
&lt;p&gt;In terms of probabilities, it means that we have very strong prior knowledge about the maximum response. We could allow it to vary a bit, but I assert that is would not offer much utility.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-prior-for-the-minimum-tissue-response&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A prior for the minimum tissue response&lt;/h3&gt;
&lt;p&gt;The minimum response, &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt;, is much more interesting, as it represents the greatest effect a ligand can have on a tissue response. Analogous to the negative control, we set the response of a positive control to 0. However, we cannot necessarily fix the minimum response at this point.&lt;/p&gt;
&lt;p&gt;Imagine an assay where we are testing a chemical compound in the hopes of identifying a new antagonist for the tissue response of interest. If the compound is not a ligand for the receptor, there is no response and &lt;span class=&#34;math inline&#34;&gt;\(bottom = top\)&lt;/span&gt;. On the other hand, if we come across a ligand, then it might elicit a stronger or weaker response than the positive control.&lt;/p&gt;
&lt;p&gt;What does this mean in terms of a prior? It means that screening experiments require a relatively wide prior for the &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt; parameter; we only know that it should be less than &lt;span class=&#34;math inline&#34;&gt;\(top\)&lt;/span&gt; and that it is unlikely to be much smaller than 0. However, if we are studying the kinetics of the system and we have a known strong ligand as positive control, we can choose a much narrower prior around 0.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-prior-for-potency&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A prior for potency&lt;/h3&gt;
&lt;p&gt;Deciding on a prior for &lt;span class=&#34;math inline&#34;&gt;\(IC_{50}\)&lt;/span&gt; is difficult for two reasons. If we are screening new compounds, we might have no idea about the potency of the compound or whether it even has potency at all. Secondly, &lt;span class=&#34;math inline&#34;&gt;\(IC_{50}\)&lt;/span&gt; is a concentration and the tissue response depends on the ligand concentration relative to this concentration. In other words, it is the magnitude of the potency that matters.&lt;/p&gt;
&lt;p&gt;The way to handle this is by thinking of a prior for &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt; instead. Units matter, but if we use Molar concentration then &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50}) = -9\)&lt;/span&gt; would correspond to an extremely potent ligand and &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50}) = 0\)&lt;/span&gt; would correspond to extremely low potency.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;a-prior-for-experiment-noise&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A prior for experiment noise&lt;/h3&gt;
&lt;p&gt;Hopefully, the experiment noise is minimal. Consider &lt;span class=&#34;math inline&#34;&gt;\(\sigma = 0.1\)&lt;/span&gt;. Since we expect most readings to fall in the range &lt;span class=&#34;math inline&#34;&gt;\([0, 1]\)&lt;/span&gt;, this noise level translates to 95% of assay responses being within +-20% of the tissue response. This might be a lot or it might be what is expected from a biological assay, but the point is that, as long as we normalise the assay responses, this parameter should be easy to reason about. For instance, &lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt; can never be less than zero, and if it is higher than 0.5, then the assay is more noise than signal.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;example-studies&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Example Studies&lt;/h1&gt;
&lt;p&gt;Letâs move on to some simulated studies&lt;/p&gt;
&lt;div id=&#34;example-study-1---exploring-kinetics&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Example Study 1 - Exploring Kinetics&lt;/h2&gt;
&lt;p&gt;In this study we are imagining a situation where we are trying to learn more about the kinetics of a tissue response. We are investigating a receptor for which we have a known strongly binding antagonist. We suspect that the receptor has multiple binding sites and that ligand binding is not independent. We also do not know the potency, &lt;span class=&#34;math inline&#34;&gt;\(IC_{50}\)&lt;/span&gt;, of the antagonist, but we know that maximum tissue response is observed at &lt;span class=&#34;math inline&#34;&gt;\([A_i] &amp;gt; 10^{-3}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Letâs set some âsecretâ values for the system and simulate assay readings. Later, we will try to recover these values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;study_1_params &amp;lt;- list(
  bottom = 0,
  top = 1,
  log_IC50 = -5.6,
  nH = 1.4,
  sigma = 0.05
)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;a-model-for-study-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A model for study 1&lt;/h3&gt;
&lt;p&gt;Before performing the experiment, i.e.Â simulating observations, we should take some time to reflect on our domain expertise and translate it into a bespoke probabilistic model for this particular scenario.&lt;/p&gt;
&lt;p&gt;We know that we will measure an assay response, &lt;span class=&#34;math inline&#34;&gt;\(y_i\)&lt;/span&gt;, for a number of ligand concentrations &lt;span class=&#34;math inline&#34;&gt;\([A_i]\)&lt;/span&gt;. We also know that the assay response averages to the tissue response, &lt;span class=&#34;math inline&#34;&gt;\(\mu_i\)&lt;/span&gt;, but that observations are noisy:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[y_i \sim {\sf Normal}(\mu_i, \sigma)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The tissue response is a deterministic function of four kinetic parameters, as described by the Hill equation:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\mu_i = top - \frac{bottom - top}{1 + 10^{(\log_{10}(IC_{50}) - \log_{10}([A_i]))^{n_H}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The &lt;span class=&#34;math inline&#34;&gt;\(top\)&lt;/span&gt; parameter should, on average, be equal to our negative control, which we fix at 1. Our negative control is just water or buffer, and we have no reason to believe that the maximum tissue response when ligand concentration is infinitely small is any different from the buffer. Thus, our domain expertise tells us to put a very narrow prior on this parameter:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[top \sim {\sf Normal}(1, 0.01)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt; parameter should, on average, be equal to our positive control, which we fix at 0. Our positive control is an extreme concentration of the ligand to be sure that it elicits the minimum tissue response. We have no reason to believe that the minimum tissue response when ligand concentration is infinitely large is any different from the extreme concentration. Thus, our domain expertise tells us to put a very narrow prior on this parameter too:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[bottom \sim {\sf Normal}(0, 0.01)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We do not know much about the Hill coefficient, &lt;span class=&#34;math inline&#34;&gt;\(n_H\)&lt;/span&gt;, as we have limited experience with the underlying kinetics. We do, however, know that the Hill coefficient should not be less than 0. While &lt;span class=&#34;math inline&#34;&gt;\(n_H\)&lt;/span&gt; may be more or less than 1, we also know that it is very unlikely that it is orders of magnitude smaller or larger. We can place a wide log-normal prior on this parameter to keep it positive and we can choose distribution parameters such that there is equal probability above and below 1:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[n_H \sim {\sf LogNormal}(0, 1)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We also do not know much about &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt;, but we consider -9 and -3 fairly extreme values, so we can just use a wide normal prior that keeps the parameter mostly in that range:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\log_{10}(IC_{50}) \sim {\sf Normal}(-6, 1.5)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Finally, we should consider how noisy our observations might be. We have little experience with this assay, so we expect a lot of noise. Letâs say that we expect the assay response to be within 20% above or below the tissue response, in most cases. This roughly translates to an expectation of &lt;span class=&#34;math inline&#34;&gt;\(\sigma = 0.1\)&lt;/span&gt;. We also know that &lt;span class=&#34;math inline&#34;&gt;\(\sigma &amp;gt; 0\)&lt;/span&gt;, so we can use an exponential prior with an expectation of 0.1, i.e.Â a rate of 10:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\sigma \sim {\sf Exp}(10)\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prior-predictive-check-in-tidyverse&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Prior predictive check in Tidyverse&lt;/h3&gt;
&lt;p&gt;With the model specified, my hands are itching to start fitting. That would be a poor idea, though. Before fitting, we should verify that the model as a whole conforms to our domain knowledge. Even though we have chosen what we think are reasonable priors, it it difficult to get an intuition about how all those priors interact. However, since the model is probabilistic and generative, we can sample predictions from it without fitting anything first. If the distribution of those prior predictions agree with our expectations, then we are good to go.&lt;/p&gt;
&lt;p&gt;For a simple model like this, it is fairly easy to perform such a prior predictive check with Tidyverse and basic R functionality. First we sample parameters from the prior distributions, then we calculate the deterministic variables, and finally draw out the curves.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_samples &amp;lt;- 50
# A function to easily sample prior parameters
study_1_priors &amp;lt;- function(n) {
  tibble::tibble(
    top = rnorm(n, 1, 0.01),
    bottom = rnorm(n, 0, 0.01),
    nH = rlnorm(n, 0, 1),
    log_IC50 = rnorm(n, -6, 1.5),
    sigma = rexp(n, 10)
  )
}
# Draw each corresponding assay response
study_1_prior_pred_samples &amp;lt;- study_1_priors(n_samples) %&amp;gt;%
  dplyr::filter(top &amp;gt; bottom) %&amp;gt;% # This is very unlikely to happen though
  dplyr::mutate(
    tissue_response = purrr::pmap(
      list(top, bottom, nH, log_IC50, sigma),
      ~ geom_function(
        fun = assay_response,
        args = list(
          top = ..1,
          bottom = ..2,
          nH = ..3,
          log_IC50 = ..4,
          sigma = ..5
        ),
        colour = colour$blue_dark,
        alpha = 0.5
      )
    )
  )

p &amp;lt;- ggplot() +
  xlim(-9, -3) +
  theme_minimal() +
  labs(x = &amp;quot;Ligand concentration [M]&amp;quot; , y = &amp;quot;Prior assay response&amp;quot;)
Reduce(`+`, study_1_prior_pred_samples$tissue_response, init = p)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-one/index_files/figure-html/prior_pred_check_example_1-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This looks much like the curves we would expect from a real assay. Extreme concentrations have extreme responses and the s-shaped part of the curve is somewhere in between. In some cases, the noise is extreme but that is probably to be expected from an assay where we have little or no experience.&lt;/p&gt;
&lt;p&gt;I initially set the prior for &lt;span class=&#34;math inline&#34;&gt;\(n_H\)&lt;/span&gt; way too wide, resulting in many extreme responses. That does not comply with domain knowledge, so I shrunk the prior.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;building-a-stan-model-for-study-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Building a Stan model for study 1&lt;/h3&gt;
&lt;p&gt;Now we are almost ready to fit the model. To do so, I have implemented it in Stan. There are other excellent introductions to Stan, see the &lt;a href=&#34;https://mc-stan.org/docs/2_28/stan-users-guide/index.html&#34;&gt;Stan User Guide&lt;/a&gt; or some of the references below.&lt;/p&gt;
&lt;p&gt;Here is the Stan model that corresponds to the model described above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;writeLines(readLines(&amp;quot;hill_equation_study_1.stan&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;data {
  int&amp;lt;lower=0&amp;gt; N; // Number of observations
  vector[N] log_conc; // Tested concentration on log10 scale
  vector[N] y; // Normalised assay responses
}
parameters {
  real bottom;
  real&amp;lt;lower=bottom&amp;gt; top;
  real log_IC50;
  real&amp;lt;lower=0&amp;gt; nH;
  real&amp;lt;lower=0&amp;gt; sigma;
}
model {
  vector[N] mu;
  bottom ~ normal(0, 0.01);
  top ~ normal(1, 0.01);
  log_IC50 ~ normal(-6, 1.5);
  nH ~ lognormal(0, 1);
  sigma ~ exponential(10);
  for ( i in 1:N) {
    mu[i] = top + (bottom - top)/(1 + 10^((log_IC50 - log_conc[i])*nH));
  }
  y ~ normal(mu, sigma);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fitting-study-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Fitting study 1&lt;/h3&gt;
&lt;p&gt;Now we can simulate some observations and fit the model. To make the simulation realistic, we generate observations in a wide space of ligand concentration, from &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}([A_i]) = -9\)&lt;/span&gt; to &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}([A_i]) = -3\)&lt;/span&gt;. To make it a challenge, we will generate just 6 observations.&lt;/p&gt;
&lt;p&gt;Fitting our bespoke Bayesian model amounts to sampling from the posterior distribution. Here I am drawing 1000 samples per chain from the posterior. This is not a large model, so we could easily sample a lot more if we wanted.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_observations &amp;lt;- 6
n_posterior_samples &amp;lt;- 1e3

# Determine the log concentrations at which to simulate
study_1_concentrations &amp;lt;- seq(-9, -3, length.out = n_observations)

# Simulate observations using our &amp;#39;secret&amp;#39; parameters
study_1_observations &amp;lt;- rlang::exec(
  assay_response,
  study_1_concentrations,
  !!!study_1_params
)

# Everything the model needs to know
study_1_data_list &amp;lt;- list(
  N = n_observations,
  log_conc = study_1_concentrations,
  y = study_1_observations
)

# This compiles the model and samples from the posterior
study_1_post &amp;lt;- rstan::stan(
  &amp;quot;hill_equation_study_1.stan&amp;quot;,
  data = study_1_data_list,
  chains = 4,
  iter = n_posterior_samples * 2,
  warmup = n_posterior_samples,
  seed = 4444
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we have samples from the posterior distribution. Letâs put them to work!&lt;/p&gt;
&lt;p&gt;Recall that the underlying research question was the kinetics of the tissue response. So more than the actual tissue response, we are interested in the posterior marginal distributions for the Hill coefficient, &lt;span class=&#34;math inline&#34;&gt;\(n_H\)&lt;/span&gt;, and the potency, &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt;. We can extract samples for the marginal distribution of each of our model parameters.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# Extract samples from the posterior distribution
posterior_samples &amp;lt;- rstan::extract(study_1_post) %&amp;gt;% 
  tibble::as_tibble() %&amp;gt;%
  dplyr::select(bottom, top, log_IC50, nH, sigma)

# True parameters of the simulation.
parameter_tibble &amp;lt;- study_1_params %&amp;gt;%
  tibble::as_tibble() %&amp;gt;%
  tidyr::pivot_longer(
    dplyr::everything(),
    names_to = &amp;quot;parameter&amp;quot;,
    values_to = &amp;quot;truth&amp;quot;
  )

# Plot each of the marginal distributions, comparing prior, posterior, and true
#  simulation parameters
posterior_samples %&amp;gt;%
  tidyr::pivot_longer(
    dplyr::everything(),
    names_to = &amp;quot;parameter&amp;quot;,
    values_to = &amp;quot;sample&amp;quot;
  ) %&amp;gt;%
  dplyr::left_join(parameter_tibble, by = &amp;quot;parameter&amp;quot;) %&amp;gt;%
  ggplot() +
  geom_histogram(
    data = tidyr::pivot_longer(
      study_1_priors(nrow(posterior_samples)),
      dplyr::everything(),
      names_to = &amp;quot;parameter&amp;quot;,
      values_to = &amp;quot;sample&amp;quot;
    ),
    mapping = aes(x = sample, fill = &amp;quot;Prior&amp;quot;),
    bins = 50,
    alpha = 0.5
  ) +
  geom_histogram(aes(x = sample, fill = &amp;quot;Posterior&amp;quot;), bins = 50, alpha = 0.5) +
  geom_vline(aes(xintercept = truth, colour = &amp;quot;truth&amp;quot;), alpha = 0.5) +
  facet_wrap(~ parameter, scales = &amp;quot;free&amp;quot;) +
  theme_minimal() +
  scale_colour_manual(values = c(&amp;quot;truth&amp;quot; = colour$orange_light)) +
  scale_fill_manual(values = c(
    &amp;quot;Prior&amp;quot; = colour$azure,
    &amp;quot;Posterior&amp;quot; = colour$blue_dark
  )) +
  labs(
    y = &amp;quot;Posterior sample count&amp;quot;,
    x = &amp;quot;&amp;quot;,
    colour = &amp;quot;&amp;quot;,
    fill = &amp;quot;&amp;quot;,
    title = &amp;quot;Marginal Posterior and Prior Distributions&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-one/index_files/figure-html/posterior_marginals_example_1-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;There are so many exciting things to discuss here. I have opted to plot samples from both the posterior and prior distributions, so we can appreciate how the data worked to update our prior beliefs to posterior distributions.&lt;/p&gt;
&lt;p&gt;The first thing to notice is that the parameters for which we selected very narrow priors, i.e.Â &lt;span class=&#34;math inline&#34;&gt;\(top\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt;, nothing has changed. The data is not enough to overwhelm the strong priors and the posterior is mostly informed by the prior.&lt;/p&gt;
&lt;p&gt;On the other hand, the data has provided enough information to concentrate the probability density to a much narrower interval for the three remaining parameters. The posterior median for &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt; is very close to the truth. &lt;span class=&#34;math inline&#34;&gt;\(nH\)&lt;/span&gt; is a bit more uncertain, but most of the probability is concentrated well above one, which correctly suggests cooperatively binding ligands.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;post_summaries &amp;lt;- rstan::summary(
  study_1_post,
  pars = c(&amp;quot;bottom&amp;quot;, &amp;quot;top&amp;quot;, &amp;quot;log_IC50&amp;quot;, &amp;quot;nH&amp;quot;, &amp;quot;sigma&amp;quot;),
  probs = c(0.055, 0.5, 0.945)
)$summary

tibble::as_tibble(post_summaries) %&amp;gt;% 
  dplyr::select(c(&amp;quot;5.5%&amp;quot;, &amp;quot;50%&amp;quot;, &amp;quot;94.5%&amp;quot;)) %&amp;gt;%
  dplyr::mutate(parameter = rownames(post_summaries), .before = 1) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;parameter&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;5.5%&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;50%&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;94.5%&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.0170975&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.0010557&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0144481&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;top&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9861742&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0016366&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0170142&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-5.7516723&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-5.5360470&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-5.4050335&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;nH&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9012444&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.6121050&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4.1663929&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sigma&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0434627&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0712316&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1351734&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;At this point, we can draw a conclusion for our experiment: Given our model assumptions, data strongly suggests cooperatively binding kinetics with a 89% compatibility interval for &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt; at about &lt;span class=&#34;math inline&#34;&gt;\([-5.75, -5.41]\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;To improve the result, we could run another experiment using this much narrower range for &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt; as a prior and for determining ligand concentrations to test, as that interval is likely to contain the s-shaped part of the Hill curve.&lt;/p&gt;
&lt;p&gt;Speaking of the Hill curve, letâs see what our posterior predictions look like for the tissue response as a function of log ligand concentration.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;study_1_post_pred &amp;lt;- posterior_samples %&amp;gt;%
  tidyr::expand_grid(log_conc = seq(-3, -9, length.out = 50)) %&amp;gt;% 
  dplyr::mutate(tissue_response = purrr::pmap_dbl(
    list(log_conc, bottom, top, log_IC50, nH),
    hill_function
  )) %&amp;gt;%
  dplyr::group_by(log_conc) %&amp;gt;%
  dplyr::summarise(
    response_mean = mean(tissue_response),
    response_upper = quantile(tissue_response, probs = 0.945),
    response_lower = quantile(tissue_response, probs = 0.055)
  ) %&amp;gt;%
  ggplot() +
  geom_ribbon(
    aes(
      x = log_conc,
      ymin = response_lower,
      ymax = response_upper,
      fill = &amp;quot;89% interval&amp;quot;
    ),
    alpha = 0.5
  ) +
  geom_line(aes(x = log_conc, y = response_mean, colour = &amp;quot;Posterior mean&amp;quot;)) +
  geom_point(
    data = tibble::tibble(
      log_conc = study_1_concentrations,
      observations = study_1_observations
    ),
    aes(x = log_conc, y = observations, colour = &amp;quot;Observations&amp;quot;)
  ) +
  geom_function(
    fun = hill_function,
    args = study_1_params[-5],
    mapping = aes(colour = &amp;quot;True tissue response&amp;quot;)
  ) +
  labs(
    y = &amp;quot;Tissue response&amp;quot;,
    x = &amp;quot;Log ligand concentration [M]&amp;quot;,
    colour = &amp;quot;&amp;quot;,
    fill = &amp;quot;&amp;quot;
  ) +
  scale_fill_manual(values = c(&amp;quot;89% interval&amp;quot; = colour$azure)) +
  theme_minimal()
study_1_post_pred +
  scale_colour_manual(values = c(
    &amp;quot;Posterior mean&amp;quot; = colour$blue_dark,
    &amp;quot;Observations&amp;quot; = colour$orange_light,
    &amp;quot;True tissue response&amp;quot; = colour$orange_dark
  ))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-one/index_files/figure-html/posterior_predictive_example_1-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The true tissue response is all contained in the 89% interval for the posterior predicted response, despite noisy observations and despite the fact that 5 out of 6 observations lie outside the s-shaped part of the curve.&lt;/p&gt;
&lt;p&gt;However, it also seems that we got lucky and had an observation very close to the true &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt;. This point quite clearly provides an anchor for the entire model. We might not always be this lucky. In that case, however, the posterior marginal distributions for the kinetic parameters would just be much more informed by the priors, in turn telling us that we should perform more experiments.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;example-study-2---new-drug&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Example Study 2 - New Drug&lt;/h2&gt;
&lt;p&gt;In this study, we imagine that we are developing a new potential drug candidate. As a part of the development process, we have produced a modified version of an endogenous ligand and we are looking to assess its potency, &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt;, and efficacy, which is defined in terms of &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We are able to approximate the tissue response &lt;em&gt;in vitro&lt;/em&gt;, but it involves complex biochemistry, so noisy measurements are to be expected.&lt;/p&gt;
&lt;p&gt;The tissue response to the endogenous ligand is well characterised, so we know that the ligands bind independently, i.e.Â &lt;span class=&#34;math inline&#34;&gt;\(n_H = 1\)&lt;/span&gt;, and we know that for the endogenous ligand &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50}) = -7.2\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Letâs set some âsecretâ values for the system and simulate assay readings. Later, we will try to recover these values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;study_2_params &amp;lt;- list(
  bottom = 0.2,
  top = 1,
  log_IC50 = -7.6,
  nH = 1,
  sigma = 0.1
)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;a-model-for-study-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;A model for study 2&lt;/h3&gt;
&lt;p&gt;We are still assuming the same kinetics for the tissue response as in study 1.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[y_i \sim {\sf Normal}(\mu_i, \sigma)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\mu_i = top - \frac{bottom - top}{1 + 10^{(\log_{10}(IC_{50}) - \log_{10}([A_i]))^{n_H}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Our assumptions about the &lt;span class=&#34;math inline&#34;&gt;\(top\)&lt;/span&gt; parameter are the same as in study 1.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[top \sim {\sf Normal}(1, 0.01)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In this case, we have produced a variant of the endogenous ligand. The most likely scenario is that our modification causes the ligand to lose efficacy such that the minimum tissue response is somewhere between 0 and 1. However, there is a small chance that our superior design yields a ligand that is more efficacious than the endogenous ligand and thus has a minimum response below 0. Our prior for the &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt; parameter should thus be concentrated between 0 and 1 but with some probability below 0. I have opted for a normal prior.&lt;/p&gt;
&lt;p&gt;Note that this prior puts some probability in the scenario where the &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt; parameter is larger than the &lt;span class=&#34;math inline&#34;&gt;\(top\)&lt;/span&gt; parameter. This is not consistent with our domain knowledge and it is a challenge that we will handle in a moment.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[bottom \sim {\sf Normal}(0.25, 0.25)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Changing the ligand will not change the receptor, so it is extremely unlikely that the Hill coefficient changes.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[n_H \sim {\sf Normal}(1, 0.01)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The modified ligand is likely to lose potency, i.e.Â have a higher &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt;, compared to the endogenous ligand which has &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50}) = -7.2\)&lt;/span&gt;, but we might get lucky and see an increase. This is not much to go on, but it should still allow us to use a narrower prior than in study 1.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\log_{10}(IC_{50}) \sim {\sf Normal}(-6, 0.7)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Noise is expected to be quite severe.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\sigma \sim {\sf Exp}(10)\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;prior-predictive-check-with-stan&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Prior predictive check with Stan&lt;/h3&gt;
&lt;p&gt;As in the previous study, we should check that the prior predictive distribution conforms to expectations as given by our domain expertise.&lt;/p&gt;
&lt;p&gt;This time I have opted to utilise Stan to sample from the priors. It is a bit of extra work, but it scales well for larger and more complex models.&lt;/p&gt;
&lt;p&gt;One challenge we have, is the constraint that &lt;span class=&#34;math inline&#34;&gt;\(top \ge bottom\)&lt;/span&gt;. A way to handle this could be to discard any samples that violates the constraint and replace them with new samples until the desired number of samples are obtained. I would like something a bit more elegant.&lt;/p&gt;
&lt;p&gt;In Stan, constraints can be set on parameters and, during Monte Carlo sampling from the posterior, those constraints are enforced. However, when we want to use random number generators to sample from the prior distributions, we have to enforce it ourselves. I have implemented a small Stan program to sample from the priors in study 2:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;writeLines(readLines(&amp;quot;hill_equation_study_2_prior.stan&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;functions {
  // A lower-bounded normal distribution random number generator
  real normal_lower_rng(real mu, real sigma, real lower_bound) {
    // Locate the lower bound
    real p_lower_bound = normal_cdf(lower_bound, mu, sigma);
    // Uniformly sample probabilities in the bounded range
    real u = uniform_rng(p_lower_bound, 1);
    // Transform back to a normal distribution
    real y = mu + sigma * inv_Phi(u);
    return y;
  }
  // An upper-bounded normal distribution random number generator
  real normal_upper_rng(real mu, real sigma, real upper_bound) {
    // Locate the upper bound
    real p_upper_bound = normal_cdf(upper_bound, mu, sigma);
    // Uniformly sample probabilities in the bounded range
    real u = uniform_rng(0, p_upper_bound);
    // Transform back to a normal distribution
    real y = mu + sigma * inv_Phi(u);
    return y;
  }
}
data {
  int&amp;lt;lower=0&amp;gt; N; // Number of samples
  vector[N] log_conc; // Tested concentration on log10 scale
}
generated quantities{
  real&amp;lt;lower = 0&amp;gt; nH = normal_lower_rng(1, 0.01, 0);
  real top = normal_rng(1, 0.01);
  real bottom = normal_upper_rng(0.25, 0.25, top);
  real log_IC50 = normal_rng(-6, 0.7);
  real sigma = exponential_rng(10);
  vector[N] mu;
  vector[N] y;
  for ( i in 1:N) {
    mu[i] = top + (bottom - top)/(1 + 10^((log_IC50 - log_conc[i])*nH));
    y[i] = normal_rng(mu[i], sigma);
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that there is no &lt;code&gt;model&lt;/code&gt; block in the code. This program should not run a Monte Carlo simulation. Rather, it should just pull samples from the prior distributions. This can be accomplished with Stanâs Fixed Parameter mode.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_prior_samples &amp;lt;- 50
log_conc &amp;lt;- seq(-9, -3, length.out = n_prior_samples)

prior &amp;lt;- rstan::stan(
  &amp;quot;hill_equation_study_2_prior.stan&amp;quot;,
  data = list(N = n_prior_samples, log_conc = log_conc),
  algorithm = &amp;quot;Fixed_param&amp;quot;,
  chains = 1,
  iter = 100,
  warmup = 0,
  seed = 4444
)

samples &amp;lt;- rstan::extract(prior)

sample_readings &amp;lt;- lapply(1:100, function(i) {
  tibble::tibble(
  y = samples$y[i,],
  x = log_conc
) %&amp;gt;% 
  geom_line(mapping = aes(x, y), colour = colour$blue_dark, alpha = 0.5)
})
p &amp;lt;- ggplot() + 
  theme_minimal() +
  labs(x = &amp;quot;Ligand concentration [M]&amp;quot; , y = &amp;quot;Prior assay response&amp;quot;)
Reduce(`+`, sample_readings, init = p)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-one/index_files/figure-html/prior_2_stan-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;We expect most potential curves to reach 50% of their minimum response well above -7.2, corresponding to lost potency. There is, however, still a small chance of increased potency, i.e.Â a value smaller than -7.2. Likewise for the minimum response, we find it most likely that a modification will cause the minimum response to be somewhere between 0 and 1, yet there is a chance that the minimum response is less than zero.&lt;/p&gt;
&lt;p&gt;All in all, these seem like suitable priors, but we also note that the amount of noise could severely impact conclusions.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;building-a-stan-model-for-study-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Building a Stan model for study 2&lt;/h3&gt;
&lt;p&gt;Here is the Stan model that corresponds to the model described above. Note that we do not need to specify our own distribution functions to satisfy constraints. When running the simulation, Stan keeps track of constraints and makes sure that they are satisfied.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;writeLines(readLines(&amp;quot;hill_equation_study_2_post.stan&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;data {
  int&amp;lt;lower=0&amp;gt; N;
  vector[N] log_conc;
  vector[N] y;
}
parameters {
  real bottom;
  real&amp;lt;lower=bottom&amp;gt; top;
  real log_IC50;
  real&amp;lt;lower=0&amp;gt; nH;
  real&amp;lt;lower=0&amp;gt; sigma;
}
model {
  vector[N] mu;
  bottom ~ normal(0.25, 0.25);
  top ~ normal(1, 0.01);
  log_IC50 ~ normal(-6, 0.7);
  nH ~ normal(1, 0.01);
  sigma ~ exponential(10);
  for ( i in 1:N) {
    mu[i] = top + (bottom - top)/(1 + 10^((log_IC50 - log_conc[i])*nH));
  }
  y ~ normal(mu, sigma);
}&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fitting-study-2&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Fitting study 2&lt;/h3&gt;
&lt;p&gt;Now we can simulate some observations and fit the model. As we do not expect our modified ligand to stray too far from the curve of the endogenous ligand, we generate observations in a narrow space of ligand concentration, from &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}([A_i]) = -7.5\)&lt;/span&gt; to &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}([A_i]) = -4.5\)&lt;/span&gt;. To make it a challenge, we will generate just 6 observations.&lt;/p&gt;
&lt;p&gt;As for study 1, I am drawing 1000 samples per chain from the posterior.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_observations &amp;lt;- 6
n_posterior_samples &amp;lt;- 1e3

# Determine the log concentrations at which to simulate
study_2_concentrations &amp;lt;- seq(-7.5, -4.5, length.out = n_observations)

# Simulate observations using our &amp;#39;secret&amp;#39; parameters
study_2_observations &amp;lt;- rlang::exec(
  assay_response,
  study_2_concentrations,
  !!!study_2_params
)

# Everything the model needs to know
data_list &amp;lt;- list(
  N = n_observations,
  log_conc = study_2_concentrations,
  y = study_2_observations
)

# This compiles the model and samples from the posterior
study_2_post &amp;lt;- rstan::stan(
  &amp;quot;hill_equation_study_2_post.stan&amp;quot;,
  data = data_list,
  chains = 4,
  iter = n_posterior_samples * 2,
  warmup = n_posterior_samples,
  seed = 4444
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The underlying research question for this study was primarily concerned with the &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt; parameters. So more than the actual tissue response, we are interested in the marginal posterior distributions for these two parameters. Letâs start by summarising the marginal posterior distributions.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;study_2_priors &amp;lt;- function(n) {
  tibble::tibble(
    top = rnorm(n, 1, 0.01),
    bottom = rnorm(n, 0.25, 0.25),
    nH = rnorm(n, 1, 0.01),
    log_IC50 = rnorm(n, -6, 0.7),
    sigma = rexp(n, 10)
  )
}

# Extract samples from the posterior distribution
posterior_samples &amp;lt;- rstan::extract(study_2_post) %&amp;gt;% 
  tibble::as_tibble() %&amp;gt;%
  dplyr::select(bottom, top, log_IC50, nH, sigma)

# True parameters of the simulation.
parameter_tibble &amp;lt;- study_2_params %&amp;gt;%
  tibble::as_tibble() %&amp;gt;%
  tidyr::pivot_longer(
    dplyr::everything(),
    names_to = &amp;quot;parameter&amp;quot;,
    values_to = &amp;quot;truth&amp;quot;
  )

# Plot each of the marginal distributions, comparing prior, posterior, and true
#  simulation parameters
posterior_samples %&amp;gt;%
  tidyr::pivot_longer(
    dplyr::everything(),
    names_to = &amp;quot;parameter&amp;quot;,
    values_to = &amp;quot;sample&amp;quot;
  ) %&amp;gt;%
  dplyr::left_join(parameter_tibble, by = &amp;quot;parameter&amp;quot;) %&amp;gt;%
  ggplot() +
  geom_histogram(
    data = tidyr::pivot_longer(
      study_2_priors(nrow(posterior_samples)),
      dplyr::everything(),
      names_to = &amp;quot;parameter&amp;quot;,
      values_to = &amp;quot;sample&amp;quot;
    ),
    mapping = aes(x = sample, fill = &amp;quot;Prior&amp;quot;),
    bins = 50,
    alpha = 0.5
  ) +
  geom_histogram(aes(x = sample, fill = &amp;quot;Posterior&amp;quot;), bins = 50, alpha = 0.5) +
  geom_vline(aes(xintercept = truth, colour = &amp;quot;truth&amp;quot;), alpha = 0.5) +
  facet_wrap(~ parameter, scales = &amp;quot;free&amp;quot;) +
  theme_minimal() +
  scale_colour_manual(values = c(&amp;quot;truth&amp;quot; = colour$orange_light)) +
  scale_fill_manual(
    values = c(&amp;quot;Prior&amp;quot; = colour$azure, &amp;quot;Posterior&amp;quot; = colour$blue_dark)
  ) +
  labs(
    y = &amp;quot;Posterior sample count&amp;quot;,
    x = &amp;quot;&amp;quot;,
    colour = &amp;quot;&amp;quot;,
    fill = &amp;quot;&amp;quot;,
    title = &amp;quot;Marginal Posterior and Prior Distributions&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-one/index_files/figure-html/posterior_marginals_study_2-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The first thing to notice here is that the posterior probability mass is more concentrated than the prior. However, the marginal posterior distributions for &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt; are still relatively wide. Recall that a difference of one in &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt; is an order of magnitude in terms of concentration. Small changes in potency matter a lot if we have to manufacture the compound at one point. So our data did not tell us much about the precise potency and efficacy of this modified ligand.&lt;/p&gt;
&lt;p&gt;On the other hand, the posterior probability mass is mostly at &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50}) &amp;lt; -7.2\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(bottom &amp;gt; 0\)&lt;/span&gt;, i.e.Â we are quite certain that our modified ligand has higher potency than the endogenous ligand but elicits a smaller response. With well defined priors and a small amount of data, we have a perfectly good screening experiment.&lt;/p&gt;
&lt;p&gt;If we were interested in gaining a better understanding of the modified ligand, we could perform more experiments and get those posterior probability masses even more concentrated. We also see that the true noise of the assay is quite high; reducing it might help to better learn the underlying tissue response.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;post_summaries &amp;lt;- rstan::summary(
  study_2_post,
  pars = c(&amp;quot;bottom&amp;quot;, &amp;quot;top&amp;quot;, &amp;quot;log_IC50&amp;quot;, &amp;quot;nH&amp;quot;, &amp;quot;sigma&amp;quot;),
  probs = c(0.055, 0.5, 0.945)
)$summary

tibble::as_tibble(post_summaries) %&amp;gt;% 
  dplyr::select(c(&amp;quot;5.5%&amp;quot;, &amp;quot;50%&amp;quot;, &amp;quot;94.5%&amp;quot;)) %&amp;gt;%
  dplyr::mutate(parameter = rownames(post_summaries), .before = 1) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;parameter&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;5.5%&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;50%&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;94.5%&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0848792&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1544085&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2183073&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;top&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9831631&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9995818&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0156166&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-7.7146376&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-7.4971292&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-7.2296555&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;nH&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9842731&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9999304&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0161020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sigma&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0405449&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0680069&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.1388871&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;At this point, we can draw a conclusion for our experiment: Given our model assumptions, data strongly suggests that the modified ligand has higher potency than the endogenous ligand with a 89% credibility interval for &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt; at about &lt;span class=&#34;math inline&#34;&gt;\([-8.08, -7.22]\)&lt;/span&gt;. We also conclude that the modified ligand has less efficacy than the endogenous ligand with a 89% credibility interval for &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt; at about &lt;span class=&#34;math inline&#34;&gt;\([0.12, 0.30]\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Before accepting the conclusion, it is a good idea to look at the posterior predictions and compare them to the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;posterior_samples %&amp;gt;%
  tidyr::expand_grid(log_conc = seq(-3, -9, length.out = 50)) %&amp;gt;% 
  dplyr::mutate(tissue_response = purrr::pmap_dbl(
    list(log_conc, bottom, top, log_IC50, nH),
    hill_function
  )) %&amp;gt;%
  dplyr::group_by(log_conc) %&amp;gt;%
  dplyr::summarise(
    response_mean = mean(tissue_response),
    response_upper = quantile(tissue_response, probs = 0.945),
    response_lower = quantile(tissue_response, probs = 0.055)
  ) %&amp;gt;%
  ggplot() +
  geom_ribbon(
    aes(
      x = log_conc,
      ymin = response_lower,
      ymax = response_upper,
      fill = &amp;quot;89% interval&amp;quot;
    ),
    alpha = 0.5
  ) +
  geom_line(aes(x = log_conc, y = response_mean, colour = &amp;quot;Posterior mean&amp;quot;)) +
  geom_point(
    data = tibble::tibble(
      log_conc = study_2_concentrations,
      observations = study_2_observations
    ),
    aes(x = log_conc, y = observations, colour = &amp;quot;Observations&amp;quot;)
  ) +
  geom_function(
    fun = hill_function,
    args = study_2_params[-5],
    mapping = aes(colour = &amp;quot;True tissue response&amp;quot;)
  ) +
  scale_colour_manual(values = c(
    &amp;quot;Posterior mean&amp;quot; = colour$blue_dark,
    &amp;quot;Observations&amp;quot; = colour$orange_light,
    &amp;quot;True tissue response&amp;quot; = colour$orange_dark
  )) +
  labs(
    y = &amp;quot;Tissue response&amp;quot;,
    x = &amp;quot;Log ligand concentration [M]&amp;quot;,
    colour = &amp;quot;&amp;quot;,
    fill = &amp;quot;&amp;quot;
  ) +
  scale_fill_manual(values = c(&amp;quot;89% interval&amp;quot; = colour$azure)) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-one/index_files/figure-html/posterior_predictive_study_2-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The true tissue response is all contained in the 89% interval for the posterior predicted response, despite noisy observations and despite the fact that 4 out of 6 observations lie outside the s-shaped part of the curve.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;assessing-posterior-quality&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Assessing posterior quality&lt;/h2&gt;
&lt;p&gt;During the two studies, I avoided a rather important subject, namely assessing the quality of our posterior estimate. The algorithm that explores and samples from the posterior, Hamiltonian Monte Carlo (HMC), is as much a part of the Bayesian model as priors and as such should enjoy the same deliberate consideration.&lt;/p&gt;
&lt;p&gt;We have observed that the posterior predictive distribution yields reasonable predictions, which gives us a lot of confidence in the model as a whole. In these studies, we could also compare the predictions to the true underlying parameters of the simulations, so we know that the model is at least somewhat right.&lt;/p&gt;
&lt;p&gt;All is not perfectly well, however. In study one, Stan complains that during the HMC run there were divergent transitions:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rstan::check_divergences(study_1_post)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;5 of 4000 iterations ended with a divergence (0.125%).
Try increasing &amp;#39;adapt_delta&amp;#39; to remove the divergences.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;a href=&#34;https://mc-stan.org/misc/warnings.html#runtime-warnings&#34;&gt;Stan is noisy&lt;/a&gt; and will complain when something seems wrong in the HMC sampler.&lt;/p&gt;
&lt;p&gt;In this case, it is divergent transitions which usually happens when an iteration ends up in a part of parameter space where the probabilities have large gradients.&lt;/p&gt;
&lt;p&gt;Increasing &lt;code&gt;adapt_delta&lt;/code&gt; as suggested by Stan will help avoid the divergent transitions, but why were they there in the first place? Letâs look at some diagnostic parameters for the posterior in the first study:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;post_summaries &amp;lt;- rstan::summary(
  study_1_post,
  pars = c(&amp;quot;bottom&amp;quot;, &amp;quot;top&amp;quot;, &amp;quot;log_IC50&amp;quot;, &amp;quot;nH&amp;quot;, &amp;quot;sigma&amp;quot;),
  probs = c(0.055, 0.5, 0.945)
)$summary

tibble::as_tibble(post_summaries) %&amp;gt;% 
  dplyr::select(c(&amp;quot;n_eff&amp;quot;, &amp;quot;Rhat&amp;quot;)) %&amp;gt;%
  dplyr::mutate(parameter = rownames(post_summaries), .before = 1) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;parameter&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_eff&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Rhat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1610.7382&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.002482&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;top&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3738.8936&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.000015&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1401.6208&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.002600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;nH&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;523.3805&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.012667&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sigma&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1414.4814&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.000310&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;code&gt;n_eff&lt;/code&gt; is an estimate of the number of independent samples from the posterior. &lt;code&gt;Rhat&lt;/code&gt; is a measure of convergence. Values &lt;span class=&#34;math inline&#34;&gt;\(\hat{R} &amp;gt; 1.01\)&lt;/span&gt; indicate that convergence has not entirely been reached.&lt;/p&gt;
&lt;p&gt;According to the diagnostics, the marginal posterior for &lt;span class=&#34;math inline&#34;&gt;\(n_H\)&lt;/span&gt; has been challenging to estimate. This is not altogether surprising, considering that we only have one good point on the s-shaped part of the curve. There are many combinations of &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(n_H\)&lt;/span&gt; that would pass though the point equally well and some of them have extreme probability gradients.&lt;/p&gt;
&lt;p&gt;So why does increasing &lt;code&gt;adapt_delta&lt;/code&gt; work? Intuitively, it causes Stan to pick a smaller step size for the HMC sampler. This reduces the chance that the sample ends up in a far off part of parameter space where gradients are extreme. The trade-off is that the posterior might be less efficiently sampled, so for larger models, one might have to do more samples to fully explore the posterior.&lt;/p&gt;
&lt;p&gt;Letâs try running study one with an increased &lt;code&gt;adapt_delta&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;study_1_post_improved &amp;lt;- rstan::stan(
  &amp;quot;hill_equation_study_1.stan&amp;quot;,
  data = study_1_data_list,
  chains = 4,
  iter = n_posterior_samples * 2,
  warmup = n_posterior_samples,
  seed = 4444,
  control = list(adapt_delta = 0.95)
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That should improve the situation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rstan::check_divergences(study_1_post_improved)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;0 of 4000 iterations ended with a divergence.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Indeed it did!. Letâs also have a look at the diagnostics.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;post_summaries &amp;lt;- rstan::summary(
  study_1_post_improved,
  pars = c(&amp;quot;bottom&amp;quot;, &amp;quot;top&amp;quot;, &amp;quot;log_IC50&amp;quot;, &amp;quot;nH&amp;quot;, &amp;quot;sigma&amp;quot;),
  probs = c(0.055, 0.5, 0.945)
)$summary

tibble::as_tibble(post_summaries) %&amp;gt;% 
  dplyr::select(c(&amp;quot;n_eff&amp;quot;, &amp;quot;Rhat&amp;quot;)) %&amp;gt;%
  dplyr::mutate(parameter = rownames(post_summaries), .before = 1) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;parameter&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_eff&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Rhat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2103.743&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9995628&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;top&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3942.552&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0001219&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1152.528&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0010730&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;nH&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1380.143&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0016422&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sigma&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1375.529&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0041702&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The numbers have improved and we have more faith in the posterior samples. Remember though that having good diagnostics alone does not imply a good model. The diagnostic check should be combined with prior and posterior predictive checks to ensure that the model is reasonable.&lt;/p&gt;
&lt;p&gt;There is so much more to discuss about diagnosing HMC - we have barely scratched the surface here. &lt;code&gt;?rstan::check_hmc_diagnostics&lt;/code&gt; is a great place to start, if you want to learn more.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;comparing-to-another-fitting-method&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Comparing to another fitting method&lt;/h2&gt;
&lt;p&gt;Before wrapping up, Iâd like to return to my initial goal, which was to squeeze more information out of the data I get from biochemical assays.&lt;/p&gt;
&lt;p&gt;At this point, all we have done is fit a model to two experiments of six data points each and, despite the assistance from Stan, it has taken more code and more computation than a âclassicâ fit would have. So was it worth it? Letâs compare.&lt;/p&gt;
&lt;p&gt;Here I am fitting the data from study one using non-linear least squares. To make it fair, I have put in as much information as the optimisation algorithm allows: the initial guess is at the median of the priors we set for study one and the parameters are roughly constrained to the 95% prior interval.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;mod &amp;lt;- nls(
  y ~ top + (bottom - top)/(1 + 10^((log_IC50 - log_conc)*nH)),
  data = study_1_data_list,
  algorithm = &amp;quot;port&amp;quot;,
  start = list(bottom = 0, top = 1, log_IC50 = -6, nH = 1),
  lower = list(bottom = -0.02, top = 0.98, log_IC50 = -9, nH = 0),
  upper = list(bottom = 0.02, top = 1.02, log_IC50 = -3, nH = 100)
)

study_1_post_pred +
  geom_function(
    fun = hill_function,
    args = mod$m$getPars(),
    mapping = aes(colour = &amp;quot;NLS fit&amp;quot;)
  ) +
  scale_colour_manual(values = c(
    &amp;quot;Posterior mean&amp;quot; = colour$blue_dark,
    &amp;quot;Observations&amp;quot; = colour$orange_light,
    &amp;quot;True tissue response&amp;quot; = colour$orange_dark,
    &amp;quot;NLS fit&amp;quot; = &amp;quot;black&amp;quot;
  ))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-one/index_files/figure-html/posterior_predictive_study_1_improved-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The NLS fit is obviously close to the true tissue response and it took much less code and time to fit. Compared to our Bayesian model, the NLS fit is not bad. In fact, it will be useful in many cases, but there are a few notable differences.&lt;/p&gt;
&lt;p&gt;With the Bayesian model, we get an estimate of the amount of noise in the experiment, in addition to the parameters of the Hill equation. Such an estimate can be very useful for understanding and continuous improvement of the biochemical assays.&lt;/p&gt;
&lt;p&gt;With the Bayesian model, we also get marginal posterior distributions. With a regular fit, we only get a point estimate for each parameter and any uncertainty is lost. We do not always need anything but a point estimate to answer our hypotheses, but the marginal posterior distributions can be useful in future experimental design and as priors for the next experiment.&lt;/p&gt;
&lt;p&gt;Finally there is an added robustness. Biological data has all sorts of weird behaviour. In a situation where the data points are all over the place, due to some unknown external factor, the resulting Bayesian model would show little or no change from the prior model, whereas the NLS model would fail altogether. So with a Bayesian model, we can rely on probabilities to tell us when an experiment is an outlier.&lt;/p&gt;
&lt;p&gt;At the end of the day, the chosen method depends on the downstream application of the parameters and the hypotheses that we are trying to answer with the data. For now, I am keeping both in my toolbox, but I am seeing increased usefulness for the Bayesian approach, especially in screening experiments.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;next-steps&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Next Steps&lt;/h1&gt;
&lt;p&gt;In the preceding two study examples, we spent a lot of time fuzzing over just a few data points. In real applications, however, data is often more abundant and more diverse. In particular, I am thinking of screening experiments. In screening experiments, one might test a large number of potential ligands at once, meaning that there is more data but also more behaviour to be captured.&lt;/p&gt;
&lt;p&gt;In my next study, I will be discussing development of a bespoke Bayesian model for high-throughput biochemical screening assays. Stay tuned!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level1 unnumbered&#34;&gt;
&lt;h1&gt;References&lt;/h1&gt;
&lt;div id=&#34;refs&#34; class=&#34;references csl-bib-body&#34;&gt;
&lt;div id=&#34;ref-Neubig597&#34; class=&#34;csl-entry&#34;&gt;
&lt;div class=&#34;csl-left-margin&#34;&gt;[1] &lt;/div&gt;&lt;div class=&#34;csl-right-inline&#34;&gt;&lt;span class=&#34;smallcaps&#34;&gt;Neubig&lt;/span&gt;, R. R., &lt;span class=&#34;smallcaps&#34;&gt;Spedding&lt;/span&gt;, M., &lt;span class=&#34;smallcaps&#34;&gt;Kenakin&lt;/span&gt;, T. and &lt;span class=&#34;smallcaps&#34;&gt;Christopoulos&lt;/span&gt;, A. (2003). International union of pharmacology committee on receptor nomenclature and drug classification. XXXVIII. Update on terms and symbols in quantitative pharmacology. &lt;em&gt;Pharmacological Reviews&lt;/em&gt; &lt;strong&gt;55&lt;/strong&gt; 597â606 Available at &lt;a href=&#34;https://pharmrev.aspetjournals.org/content/55/4/597&#34;&gt;https://pharmrev.aspetjournals.org/content/55/4/597&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-McElreath:2016&#34; class=&#34;csl-entry&#34;&gt;
&lt;div class=&#34;csl-left-margin&#34;&gt;[2] &lt;/div&gt;&lt;div class=&#34;csl-right-inline&#34;&gt;&lt;span class=&#34;smallcaps&#34;&gt;McElreath&lt;/span&gt;, R. (2020). &lt;em&gt;Statistical rethinking: A bayesian course with examples in r and stan&lt;/em&gt;. CRC Press.&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;ref-Betancourt:2019&#34; class=&#34;csl-entry&#34;&gt;
&lt;div class=&#34;csl-left-margin&#34;&gt;[3] &lt;/div&gt;&lt;div class=&#34;csl-right-inline&#34;&gt;&lt;span class=&#34;smallcaps&#34;&gt;Betancourt&lt;/span&gt;, M. (2019). Probabilistic modeling and statistical inference. Available at &lt;a href=&#34;https://github.com/betanalpha/knitr_case_studies/tree/master/modeling_and_inference&#34;&gt;https://github.com/betanalpha/knitr_case_studies/tree/master/modeling_and_inference&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;license&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;License&lt;/h1&gt;
&lt;p&gt;The content of this project itself is licensed under the &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;Creative Commons Attribution-ShareAlike 4.0 International license&lt;/a&gt;, and the underlying code is licensed under the &lt;a href=&#34;https://github.com/AnHosu/bespoke-bayesian-biochem/blob/main/LICENSE&#34;&gt;GNU General Public License v3.0 license&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Bespoke Bayesian Model for High Throughput Biochemical Assays</title>
      <link>/post/bespoke-biochem-two/</link>
      <pubDate>Fri, 23 Apr 2021 00:00:00 +0000</pubDate>
      <guid>/post/bespoke-biochem-two/</guid>
      <description>
&lt;script src=&#34;../../post/bespoke-biochem-two/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;I am on a quest to improve the model fitting I do on biochemical assays. For some time, I have had this feeling that I should be able to extract more information from the data gathered in biochemical assays, in particular assays with a high throughput.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&#34;../../project/bespoke-biochem-one&#34;&gt;two previous studies&lt;/a&gt; we built bespoke Bayesian models to fit observations from a biochemical assay with kinetics that could be represented by the Hill equation. In those studies, we fit a single curves one at a time. In this study, we extend the model to capture the additional information available when screening a large number of compounds in parallel.&lt;/p&gt;
&lt;p&gt;We start by setting a seed and some nice colours for plotting.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(ggplot2)
library(magrittr)

colour &amp;lt;- list(
  orange_dark = &amp;quot;#fb8500&amp;quot;,
  orange_light = &amp;quot;#ffb703&amp;quot;,
  blue_dark = &amp;quot;#023047&amp;quot;,
  azure = &amp;quot;#219ebc&amp;quot;,
  blue_light = &amp;quot;#8ecae6&amp;quot;
)

set.seed(4444)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;high-troughput-biochemical-experiments&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;High Troughput Biochemical Experiments&lt;/h1&gt;
&lt;p&gt;With Bayesian models, we can take advantage of our domain expertise to produce clear answers to our scientific hypotheses and to quantify uncertainty in data and hypotheses. It does, however, require that we are able to represent our expertise as probabilistic models. So before we dive into the Bayesian engine, letâs discuss our biochemistry knowledge and the data we might get from a high throughput experiment.&lt;/p&gt;
&lt;p&gt;We are considering compounds that are potential ligands to receptors and cause a tissue response according to the Hill equation&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\mu_{ij} = top - \frac{bottom_j - top}{1 + 10^{(\log_{10}(IC_{50,j}) - \log_{10}([A_i]))^{n_H}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Where &lt;span class=&#34;math inline&#34;&gt;\(\mu_{ij}\)&lt;/span&gt; is the tissue response of the &lt;span class=&#34;math inline&#34;&gt;\(j\)&lt;/span&gt;âth compound at concentration &lt;span class=&#34;math inline&#34;&gt;\([A_i]\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;The equation looks slightly different from the previous studies because we now have multiple compounds in a screening study. The equation also encodes a few assumptions about such an assay. First of all, we are assuming that the tissue response in the absence of ligand, &lt;span class=&#34;math inline&#34;&gt;\(top\)&lt;/span&gt;, is the same for all tested compounds. Similarly, we are assuming that the kinetics of the tissue response, as represented by the Hill number, &lt;span class=&#34;math inline&#34;&gt;\(n_H\)&lt;/span&gt;, stays the same for all compounds. For the maximum tissue response, &lt;span class=&#34;math inline&#34;&gt;\(bottom_j\)&lt;/span&gt;, and the concentration at half response, &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50,j})\)&lt;/span&gt;, however, we are assuming that each compound has its own parameter.&lt;/p&gt;
&lt;p&gt;These assumptions might not hold true for every experiment, but if we imagine that we are screening compounds for a good drug candidate and we are looking at the same tissue response for each of them, these assumptions should hold.&lt;/p&gt;
&lt;p&gt;As in previous studies, I opt for synthetic data. This has two advantages; we are forced to consider the underlying process that generates our experiment data and, after we have applied a model, we can compare the output to our known truth. We can code the first part of the generative process with a simple function&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;hill_function &amp;lt;- function(log_conc, bottom, top, log_IC50, nH) {
  top + (bottom - top)/(1 + 10^((log_IC50 - log_conc)*nH))
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, our observations are not perfect and will be subject to some noise. For this study, we are going to assume that all observations were made in the same batch, under the same conditions, and at the same time such that they have identically distributed noise. Specifically, we will give the observations some Gaussian noise.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;assay_response &amp;lt;- function(log_conc, bottom, top, log_IC50, nH, sigma) {
  noise &amp;lt;- rnorm(length(log_conc), 0, sigma)
  hill_function(log_conc, bottom, top, log_IC50, nH) + noise
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Next we should consider what type of screening we are doing. There are a couple of different options. We could screen a lot of random compounds for activity. While this is a common scenario, it is not too interesting to model, as we expect that the vast majority of tested compounds will have no activity. In this study, as in the previous, we instead imagine the case where we produce a large number of variations on an endogenous ligand, in the hopes that we stumble upon something with more desirable properties like higher potency.&lt;/p&gt;
&lt;p&gt;So we produce 100 modifications to an endogenous ligand which has known parameters &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50}) = -7.2\)&lt;/span&gt; and &lt;span class=&#34;math inline&#34;&gt;\(bottom = 0\)&lt;/span&gt;. We expect that the modifications might cause us to lose potency, i.e.Â increase &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt;, and efficacy, i.e.Â increase &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt;, most of the time. To add a little extra challenge, I am adding compounds that have extremely low &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt; corresponding to the case where our modification almost or completely removes potency.&lt;/p&gt;
&lt;p&gt;With this, we have the final part of the generative model:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;n_compounds &amp;lt;- 100

true_parameters &amp;lt;- tibble::tibble(
  compound = seq(1, n_compounds),
  bottom = 1 - rlnorm(n_compounds, -0.25, 0.125),
  log_IC50 = rnorm(n_compounds, -5, 1.5) + rexp(n_compounds, 3),
  top = 1.02,
  nH = 0.99,
  sigma = 0.15
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;With the generative model in place, we can draw a few of the true curves that we will sample from and estimate in our hypothetical screening experiment.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;true_curves &amp;lt;- purrr::pmap(
  true_parameters,
  ~ geom_function(
    fun = hill_function,
    args = list(
      top = ..4,
      bottom = ..2,
      nH = ..5,
      log_IC50 = ..3
    ),
    colour = colour$blue_dark,
    alpha = 0.5
  )
)

p &amp;lt;- ggplot() +
  xlim(-9, -1) +
  theme_minimal() +
  labs(
    x = &amp;quot;Ligand concentration [M]&amp;quot;,
    y = &amp;quot;True tissue response&amp;quot;,
    title = &amp;quot;Sample True Tissue Responses&amp;quot;
  )

Reduce(`+`, true_curves[1:10], init = p)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-two/index_files/figure-html/generative_model-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;bespoke-bayesian-model&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Bespoke Bayesian Model&lt;/h1&gt;
&lt;p&gt;Now that we understand the generative process and we have some data, we can start considering a Bayesian model. We need to specify two things; a set of relations that describe the generative process and priors for any parameters. If this seems similar to what we just did in the previous section, it is because it is. The Baysian model should reflect the process that generated the data. So letâs get started.&lt;/p&gt;
&lt;div id=&#34;likelihood-model&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Likelihood Model&lt;/h2&gt;
&lt;p&gt;In our screening assay, we will consider &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; compounds &lt;span class=&#34;math inline&#34;&gt;\(j = 1, ..., M\)&lt;/span&gt;. For each compound, we measure an assay response, &lt;span class=&#34;math inline&#34;&gt;\(y_{ij}\)&lt;/span&gt;, for a number, &lt;span class=&#34;math inline&#34;&gt;\(i = 1, ..., N\)&lt;/span&gt;, of ligand concentrations &lt;span class=&#34;math inline&#34;&gt;\([A_{ij}]\)&lt;/span&gt;. We also know that the assay response averages to the tissue response, &lt;span class=&#34;math inline&#34;&gt;\(\mu_{ij}\)&lt;/span&gt;, but that observations are noisy:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[y_{ij} \sim {\sf Normal}(\mu_{ij}, \sigma)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Note that the noise parameter, &lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt;, is the same for all &lt;span class=&#34;math inline&#34;&gt;\(M\)&lt;/span&gt; compounds.&lt;/p&gt;
&lt;p&gt;The tissue response is a deterministic function of four kinetic parameters, as described by the Hill equation:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\mu_{ij} = top - \frac{bottom_j - top}{1 + 10^{(\log_{10}(IC_{50,j}) - \log_{10}([A_{ij}]))^{n_H}}}\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;priors&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Priors&lt;/h2&gt;
&lt;p&gt;For the minimum response parameter, &lt;span class=&#34;math inline&#34;&gt;\(top\)&lt;/span&gt;, we will specify a narrow prior, as we have no indication that it should be anything other than 1.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[top \sim {\sf Normal}(1, 0.01)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In a real scenario the Hill number, &lt;span class=&#34;math inline&#34;&gt;\(n_H\)&lt;/span&gt;, will probably be well know before high throughput screening experiments are done. For the purpose of demonstration, however, we will give it a relatively wide prior and hope to learn the true number from our data, in this case.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[n_H \sim {\sf LogNormal}(0, 0.5)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;For sigma &lt;span class=&#34;math inline&#34;&gt;\(\sigma\)&lt;/span&gt;, we put a prior that corresponds to a mean standard deviation that is 10% of the assay window. We also want very high noise to be very unlikely.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\sigma \sim {\sf Exp}(10)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;We now have multiple &lt;span class=&#34;math inline&#34;&gt;\(bottom_i\)&lt;/span&gt; parameters to consider.&lt;/p&gt;
&lt;p&gt;We know that the most likely scenario is where our modification causes the ligand to lose efficacy yielding a minimum tissue response somewhere between 0 and 1. However, there is a small chance that our superior design yields a ligand that is more efficacious than the endogenous ligand and thus has a minimum response below 0. Our prior for the &lt;span class=&#34;math inline&#34;&gt;\(bottom\)&lt;/span&gt; parameter should thus be concentrated between 0 and 1 but with some probability below 0. Letâs try a normal prior.&lt;/p&gt;
&lt;p&gt;The question that remains is whether this argument is true for all &lt;span class=&#34;math inline&#34;&gt;\(bottom_i\)&lt;/span&gt;. We are going to assume that it is and use the same prior for all &lt;span class=&#34;math inline&#34;&gt;\(bottom_i\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[bottom_i \sim {\sf Normal}(0.25, 0.25)\]&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The modified ligand is likely to lose potency, i.e.Â have a higher &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50,i})\)&lt;/span&gt;, compared to the endogenous ligand which has &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50,i}) = -7.2\)&lt;/span&gt;, but we might get lucky and see an increase. This is not much to go on, but it should still allow us to use a somewhat narrow prior. Again, we will use the same prior for all &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50,i})\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;We added a bit of an extra challenge, allowing for some compounds to have very high &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50,i})\)&lt;/span&gt;. For now, we are going to pretend that we do not have that knowledge and see what this prior will do for us. In a real world scenario, we never know the true distributions. The best priors arise by applying our scientific experience and logic.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\log_{10}(IC_{50}) \sim {\sf Normal}(-6, 1.5)\]&lt;/span&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;prior-predictive-simulation&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Prior Predictive Simulation&lt;/h1&gt;
&lt;p&gt;With the model and priors in place, we should control the sensibility of them with a prior predictive check. So letâs imagine that we perform the screening experiment, sampling the underlying parameters from our prior distributions, and have a look at the hypothetical observations that would arise.&lt;/p&gt;
&lt;p&gt;Letâs go ahead and define a function for sampling our priors and simulating a screening experiment.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;prior_parameters &amp;lt;- function(n_compounds = NULL,
                             bottom_mean = NULL,
                             bottom_sd = NULL,
                             top_mean = NULL,
                             top_sd = NULL,
                             log_IC50_mean = NULL,
                             log_IC50_sd = NULL,
                             nH_meanlog = NULL,
                             nH_sdlog = NULL,
                             sigma_rate = NULL) {
  tibble::tibble(
      compound = seq(1, n_compounds),
      bottom = rnorm(n_compounds, bottom_mean, bottom_sd),
      log_IC50 = rnorm(n_compounds, log_IC50_mean, log_IC50_sd),
      top = rnorm(1, top_mean, top_sd),
      nH = rlnorm(1, nH_meanlog, nH_sdlog),
      sigma = rexp(1, sigma_rate)
    )
}

screening_experiment &amp;lt;- function(parameters, log_conc) {
  parameters %&amp;gt;% 
    tidyr::expand_grid(log_conc = log_conc) %&amp;gt;%
    dplyr::mutate(
      response = assay_response(log_conc, bottom, top, log_IC50, nH, sigma)
    )
}&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we can do our prior predictive check by performing a hypothetical experiment with our priors&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;priors &amp;lt;- list(
  bottom_mean &amp;lt;- 0.25,
  bottom_sd &amp;lt;- 0.25,
  top_mean &amp;lt;- 1,
  top_sd &amp;lt;- 0.01,
  log_IC50_mean &amp;lt;- -6,
  log_IC50_sd &amp;lt;- 1.5,
  nH_meanlog &amp;lt;- 0,
  nH_sdlog &amp;lt;- 0.5,
  sigma_rate &amp;lt;- 10
)

replicate(
  10,
  rlang::exec(
    prior_parameters,
    n_compounds = 5,
    !!!priors
  ),
  simplify = FALSE
) %&amp;gt;%
  dplyr::bind_rows(.id = &amp;quot;rep&amp;quot;) %&amp;gt;%
  dplyr::mutate(rep = paste0(rep, &amp;quot;-&amp;quot;, compound)) %&amp;gt;%
  screening_experiment(log_conc = seq(-10, -2, length.out = 100)) %&amp;gt;%
  ggplot(aes(x = log_conc, y = response, group = rep)) +
    geom_line(colour = colour$blue_dark, alpha = 0.5) +
    theme_minimal() +
    labs(
    x = &amp;quot;log ligand concentration&amp;quot;,
    y = &amp;quot;response&amp;quot;,
    title = &amp;quot;Prior Samples&amp;quot;
    )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-two/index_files/figure-html/prior_predictive_check-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Our prior understanding of the data generating process predicts a diverse set of curves. One of the things that often surprises me is the large number of seeming outliers, even with conservative estimates for noise. Given variance and enough samples, we are bound to see some weird behaviour.&lt;/p&gt;
&lt;p&gt;I think that these hypothetical samples seem like a fair representation of the samples I expect to get from the assay. If for some reason we thought that the hypothetical samples looked too extreme or did not represent the full range of possible observations, we would have to go back and adjust our priors.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;bayesian-model&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Bayesian Model&lt;/h1&gt;
&lt;p&gt;Now it is time for the fun part. First we implement the complete Bayesian model, consisting of our observational model and prior distributions, in Stan.&lt;/p&gt;
&lt;p&gt;The trick here is to define an index variable that keeps track of parameters for individual curves.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;writeLines(readLines(&amp;quot;hill_equation_screening.stan&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;data {
  int&amp;lt;lower=0&amp;gt; N;
  int&amp;lt;lower=0&amp;gt; M;
  int&amp;lt;lower=0&amp;gt; curve_ind[N];
  vector[N] log_conc;
  vector[N] y;
}

parameters {
  real top;
  vector&amp;lt;upper=top&amp;gt;[M] bottom;
  vector[M] log_IC50;
  real&amp;lt;lower=0&amp;gt; nH;
  real&amp;lt;lower=0&amp;gt; sigma;
  
}

model {
  vector[N] mu;
  bottom ~ normal(0.25, 0.25);
  top ~ normal(1, 0.01);
  log_IC50 ~ normal(-6, 1.5);
  nH ~ normal(1, 0.01);
  sigma ~ exponential(10);
  for ( i in 1:N ) {
    mu[i] = top + (bottom[curve_ind[i]] - top) 
                  / (1 + 10^((log_IC50[curve_ind[i]] - log_conc[i])*nH));
  }
  y ~ normal(mu, sigma);
}

generated quantities {
  vector[N] mu;
  vector[N] y_sampled;
  for ( i in 1:N ) {
    mu[i] = top + (bottom[curve_ind[i]] - top) 
                  / (1 + 10^((log_IC50[curve_ind[i]] - log_conc[i])*nH));
    y_sampled[i] = normal_rng(mu[i], sigma);
  }
}&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;conditioning&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Conditioning&lt;/h2&gt;
&lt;p&gt;Next we need some data to condition our model on. So we perform a simulated screening experiment using our true parameters. Recall that we have 100 compounds. In the screening experiment we will sample the tissue response for each compound at 6 different concentrations.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;assay_window &amp;lt;- seq(-8, -2, length.out = 6)

observations &amp;lt;- screening_experiment(
  parameters = true_parameters,
  log_conc = assay_window
)

data &amp;lt;- list(
  N = nrow(observations),
  M = max(observations$compound),
  curve_ind = observations$compound,
  log_conc = observations$log_conc,
  y = observations$response
)

post &amp;lt;- rstan::stan_model(&amp;quot;hill_equation_screening.stan&amp;quot;) %&amp;gt;%
  rstan::sampling(
    data = data,
    chains = 4,
    cores = 4,
    seed = 4444
  )

# Extract samples from the posterior distribution
posterior_samples &amp;lt;- rstan::extract(post) %&amp;gt;% tibble::as_tibble()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;examining-the-posterior&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Examining the Posterior&lt;/h1&gt;
&lt;p&gt;Before applying the model, we should do some quality assurance. Since we have simulated data, we can of course compare the posterior distributions to our known truth, and we will definitely do that, in a moment. In real problems, however, the truth is not known and we have to rely on other approaches.&lt;/p&gt;
&lt;p&gt;Here I have three approaches that rely only on the model and the data. None of the approaches will tell us whether the model is a good one, but they will often indicate any problems.&lt;/p&gt;
&lt;div id=&#34;quality-of-the-monte-carlo-simulation&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Quality of the Monte Carlo Simulation&lt;/h2&gt;
&lt;p&gt;The first thing we can do is do a quality check of the Monte Carlo sampling. Stan usually complains when something seems wrong, but we can also check some specific diagnostics.&lt;/p&gt;
&lt;p&gt;I often get divergent transitions when I build multilevel models and they are a signal that there are areas of the model space that are difficult to traverse. Often they can be fixed by increasing the &lt;code&gt;adapt_delta&lt;/code&gt; parameter like we did in a previous study. When that does not work, it is a sign that maybe the model needs to be re-parametrised. For our model in this study, we should not have that problem, though.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rstan::check_divergences(post)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;0 of 4000 iterations ended with a divergence.&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When Stan complains about maximum tree depth it is because the Monte Carlo sampler was unable to fully explore some parts of the model space. It is really only an efficiency metric, but a common piece of advise when experiencing tree depth warnings is to use narrower priors. I also often find that I see this warning when I have forgotten to put an explicit prior on a parameter. In this case, we have put a lot of thought into our priors and they should be good.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;rstan::check_treedepth(post)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;0 of 4000 iterations saturated the maximum tree depth of 10.&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;convergence&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Convergence&lt;/h2&gt;
&lt;p&gt;We should also check check whether each of our parameters have properly converged. Stan provides two metrics for us to review. &lt;span class=&#34;math inline&#34;&gt;\(\hat{R}\)&lt;/span&gt; is a measure of convergence and when &lt;span class=&#34;math inline&#34;&gt;\(\hat{R} &amp;gt; 1.01\)&lt;/span&gt; it is an indication that the posterior samples arenât quite representative of the true posterior distribution.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math inline&#34;&gt;\(n\_eff\)&lt;/span&gt; is an estimate of the number of true samples our chains represent. If the number of effective samples is low compared to the number of samples we chose to take after warm up, it indicates that it was difficult for the Monte Carlo sampler to figure out that parameter in the grand scheme of things. Sometimes it helps to increase &lt;code&gt;adapt_delta&lt;/code&gt; and do more warm-up samples, but I find that it is also often indicative of data that is very incompatible with the model and its priors. In this study, we ran four chains with 1000 samples after warm-up, so we would like to see at least several hundred effective samples.&lt;/p&gt;
&lt;p&gt;Letâs just have a look at the parameters that proved to be most difficult.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;post_summaries &amp;lt;- rstan::summary(
  post,
  pars = c(&amp;quot;bottom&amp;quot;, &amp;quot;log_IC50&amp;quot;),
  probs = NULL
)$summary

tibble::as_tibble(post_summaries) %&amp;gt;%
  dplyr::select(-c(mean, se_mean, sd)) %&amp;gt;%
  dplyr::mutate(parameter = rownames(post_summaries), .before = 1) %&amp;gt;%
  dplyr::mutate(dplyr::across(-parameter, round, digits = 3)) %&amp;gt;%
  dplyr::arrange(desc(Rhat)) %&amp;gt;%
  dplyr::slice_head(n = 10) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;parameter&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_eff&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Rhat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50[83]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1177.101&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.003&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom[2]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4258.387&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.002&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50[2]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4483.525&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.002&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50[37]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1349.972&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.002&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50[71]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2269.627&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.002&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom[26]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;3953.336&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom[32]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6086.841&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom[37]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1252.062&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom[44]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4487.325&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom[71]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4270.506&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.001&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;It looks like our parameters have converged nicely.&lt;/p&gt;
&lt;p&gt;Note that some parameters have &lt;span class=&#34;math inline&#34;&gt;\(n\_eff\)&lt;/span&gt; that are quite a bit below the 4000 samples after warm-up. This is not necessarily a cause for concern, but in case it is very low and we want to use the distribution for predictive purposes, it might be a good idea to increase the number of samples after warm-up a bit.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data-replication-check&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Data Replication Check&lt;/h2&gt;
&lt;p&gt;A great sanity check for a model is whether it is able to replicate the data. Our model is fully generative, meaning we can generate hypothetical samples. For a good model, when we generate a number of samples corresponding to the number of data points, the qualitative properties those samples should be similar to those of the original data. Parameters like mean and variance will be very similar, as those are basically the parameters we conditioned on the data, but more qualitative aspects like minimum data point, maximum, or general shape are not a given.&lt;/p&gt;
&lt;p&gt;In the Stan script, I included some generated quantities that are essentially sample observations, so we can compare. We will skip comparing maximum and minimum and just compare the overall shape.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot() +
  geom_histogram(
    data = observations,
    mapping = aes(x = response, y = ..density.., fill = &amp;quot;Observed responses&amp;quot;),
    bins = 30,
    alpha = 0.5
  ) +
  geom_histogram(
    data = tibble::tibble(y_sampled = as.vector(posterior_samples$y_sampled)),
    mapping = aes(x = y_sampled, y = ..density.., fill = &amp;quot;Posterior samples&amp;quot;),
    bins = 300,
    alpha = 0.5
  ) +
  theme_minimal() +
  scale_fill_manual(values = list(
    &amp;quot;Observed responses&amp;quot; = colour$azure,
    &amp;quot;Posterior samples&amp;quot; = colour$blue_dark
  )) +
  labs(
    fill = &amp;quot;&amp;quot;,
    y = &amp;quot;Density&amp;quot;,
    x = &amp;quot;Response&amp;quot;,
    title = &amp;quot;Shape Check&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-two/index_files/figure-html/shape_check-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;It really looks like out model replicates the data quite nicely. Usually the concerns are whether the tails match; if the data has minimum points that are outside what the model yields or if the samples span a much wider range than the data, it might be cause to rethink the model.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;results&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Results&lt;/h1&gt;
&lt;p&gt;Our model and the posterior samples seem to be of decent quality, so letâs put them to use.&lt;/p&gt;
&lt;div id=&#34;posterior-marginal-distributions&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Posterior Marginal Distributions&lt;/h2&gt;
&lt;p&gt;So our model has 203 parameters, 2 for each of the 100 compounds and 3 parameters that are shared between all of them. Letâs see what we have learned about the three shared parameters.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# True parameters of the simulation.
truth &amp;lt;- true_parameters %&amp;gt;%
  dplyr::slice_head(n = 1) %&amp;gt;%
  tidyr::pivot_longer(
    dplyr::everything(),
    names_to = &amp;quot;parameter&amp;quot;,
    values_to = &amp;quot;truth&amp;quot;
  )

# A number of draws from our priors to match the number of draws we have from
#  the posterior
prior_samples &amp;lt;- replicate(
  nrow(posterior_samples),
  rlang::exec(
    prior_parameters,
    n_compounds = 1,
    !!!priors
  ),
  simplify = FALSE
) %&amp;gt;% 
  dplyr::bind_rows() %&amp;gt;%
  dplyr::select(top, nH, sigma) %&amp;gt;% 
  tidyr::pivot_longer(
    dplyr::everything(),
    names_to = &amp;quot;parameter&amp;quot;,
    values_to = &amp;quot;sample&amp;quot;
  )

# Plot each of the marginal distributions, comparing prior, posterior, and true
#  simulation parameters
posterior_samples %&amp;gt;%
  dplyr::select(top, nH, sigma) %&amp;gt;%
  tidyr::pivot_longer(
    dplyr::everything(),
    names_to = &amp;quot;parameter&amp;quot;,
    values_to = &amp;quot;sample&amp;quot;
  ) %&amp;gt;%
  dplyr::left_join(truth, by = &amp;quot;parameter&amp;quot;) %&amp;gt;%
  ggplot() +
  geom_histogram(
    data = prior_samples,
    mapping = aes(x = sample, fill = &amp;quot;Prior&amp;quot;),
    bins = 50,
    alpha = 0.5
  ) +
  geom_histogram(aes(x = sample, fill = &amp;quot;Posterior&amp;quot;), bins = 50, alpha = 0.5) +
  geom_vline(aes(xintercept = truth, colour = &amp;quot;truth&amp;quot;), alpha = 0.5) +
  facet_wrap(~ parameter, scales = &amp;quot;free&amp;quot;) +
  theme_minimal() +
  scale_colour_manual(values = c(&amp;quot;truth&amp;quot; = colour$orange_light)) +
  scale_fill_manual(values = c(
    &amp;quot;Prior&amp;quot; = colour$azure,
    &amp;quot;Posterior&amp;quot; = colour$blue_dark
  )) +
  labs(
    y = &amp;quot;Posterior sample count&amp;quot;,
    x = &amp;quot;&amp;quot;,
    colour = &amp;quot;&amp;quot;,
    fill = &amp;quot;&amp;quot;,
    title = &amp;quot;Marginal Posterior and Prior Distributions&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-two/index_files/figure-html/posterior_marginals_shared-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And some summary statistics&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;post_summaries &amp;lt;- rstan::summary(
  post,
  pars = c(&amp;quot;top&amp;quot;, &amp;quot;nH&amp;quot;, &amp;quot;sigma&amp;quot;),
  probs = c(0.055, 0.5, 0.945)
)$summary

tibble::as_tibble(post_summaries) %&amp;gt;%
  dplyr::select(-c(mean, se_mean, sd)) %&amp;gt;%
  dplyr::mutate(parameter = rownames(post_summaries), .before = 1) %&amp;gt;%
  dplyr::mutate(dplyr::across(-parameter, round, digits = 2)) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;parameter&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;5.5%&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;50%&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;94.5%&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_eff&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Rhat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;top&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.02&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.03&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.04&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4667.23&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;nH&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.99&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.00&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.02&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;9232.87&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;sigma&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.15&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.16&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;2994.32&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;When we fitted the curve for each individual compound, we ended up with posteriors that were very similar to our priors, indicating that the data was insufficient to provide additional information. In this case, however, we share information about the curve shape, sample noise, and the minimum response among all compounds. The pooling of all that information causes us to get very exact estimates for the curve shape and the sample noise. The estimates are even essentially equal to the truth. For the minimum response, our prior is still very informative compared to the data, so the posterior distribution has barely changed.&lt;/p&gt;
&lt;p&gt;These results are quite profound. Even with a relatively wide prior on &lt;span class=&#34;math inline&#34;&gt;\(n_H\)&lt;/span&gt;, corresponding to little knowledge about the kinetics of the response, we were able to estimate those exact kinetics, despite the data being intended for a different purpose. In real problems, we would often be much more sure about that parameter. Similarly, we have a very exact estimate of the experiment noise. If we regularly run such screening experiments this would be a great metric to track over time.&lt;/p&gt;
&lt;p&gt;We cannot look at parameters and curves for each of the compounds, so lets just pick a couple, including one that is difficult to fit. As with the shared parameters, we compare the posterior samples to the prior distribution and our known truth.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;example_compounds &amp;lt;- c(1:5, 93)

# True parameters of the simulation.
truth &amp;lt;- true_parameters %&amp;gt;%
  dplyr::filter(compound %in% example_compounds) %&amp;gt;%
  tidyr::pivot_longer(
    -compound,
    names_to = &amp;quot;parameter&amp;quot;,
    values_to = &amp;quot;truth&amp;quot;
  )

# A number of draws from our priors to match the number of draws we have from
#  the posterior
prior_samples &amp;lt;- replicate(
  nrow(posterior_samples),
  rlang::exec(
    prior_parameters,
    n_compounds = 1,
    !!!priors
  ),
  simplify = FALSE
) %&amp;gt;% 
  dplyr::bind_rows() %&amp;gt;%
  dplyr::select(bottom, log_IC50) %&amp;gt;% 
  tidyr::pivot_longer(
    dplyr::everything(),
    names_to = &amp;quot;parameter&amp;quot;,
    values_to = &amp;quot;sample&amp;quot;
  ) %&amp;gt;%
  tidyr::expand_grid(compound = example_compounds)

# Plot each of the marginal distributions, comparing prior, posterior, and true
#  simulation parameters
lapply(example_compounds, function(i) {
  tibble::tibble(
    bottom = posterior_samples$bottom[,i],
    log_IC50 = posterior_samples$log_IC50[,i],
    compound = i
  )
}) %&amp;gt;% 
  dplyr::bind_rows() %&amp;gt;%
  tidyr::pivot_longer(
    -compound,
    names_to = &amp;quot;parameter&amp;quot;,
    values_to = &amp;quot;sample&amp;quot;
  ) %&amp;gt;%
  dplyr::left_join(truth, by = c(&amp;quot;parameter&amp;quot;, &amp;quot;compound&amp;quot;)) %&amp;gt;%
  ggplot() +
  geom_histogram(
    data = prior_samples,
    mapping = aes(x = sample, fill = &amp;quot;Prior&amp;quot;),
    bins = 50,
    alpha = 0.5
  ) +
  geom_histogram(aes(x = sample, fill = &amp;quot;Posterior&amp;quot;), bins = 50, alpha = 0.5) +
  geom_vline(aes(xintercept = truth, colour = &amp;quot;truth&amp;quot;), alpha = 0.5) +
  facet_grid(rows = vars(compound), cols = vars(parameter), scales = &amp;quot;free&amp;quot;) +
  theme_minimal() +
  theme(strip.text.y = element_text(angle = 0)) +
  scale_colour_manual(values = c(&amp;quot;truth&amp;quot; = colour$orange_light)) +
  scale_fill_manual(values = c(
    &amp;quot;Prior&amp;quot; = colour$azure,
    &amp;quot;Posterior&amp;quot; = colour$blue_dark
  )) +
  labs(
    y = &amp;quot;Posterior sample count&amp;quot;,
    x = &amp;quot;&amp;quot;,
    colour = &amp;quot;&amp;quot;,
    fill = &amp;quot;&amp;quot;,
    title = &amp;quot;Marginal Posterior and Prior Distributions&amp;quot;
  )&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-two/index_files/figure-html/posterior_marginals_compounds-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;And some summary statistics&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;post_summaries &amp;lt;- rstan::summary(
  post,
  pars = c(&amp;quot;bottom&amp;quot;, &amp;quot;log_IC50&amp;quot;),
  probs = c(0.055, 0.5, 0.945)
)$summary

tibble::as_tibble(post_summaries) %&amp;gt;%
  dplyr::select(-c(mean, se_mean, sd)) %&amp;gt;%
  dplyr::mutate(parameter = rownames(post_summaries), .before = 1) %&amp;gt;%
  dplyr::mutate(dplyr::across(-parameter, signif, digits = 4)) %&amp;gt;%
  dplyr::filter(stringr::str_detect(
    parameter,
    paste0(&amp;quot;(\\[&amp;quot;, example_compounds, &amp;quot;\\])&amp;quot;, collapse = &amp;quot;|&amp;quot;)
  )) %&amp;gt;%
  knitr::kable()&lt;/code&gt;&lt;/pre&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;parameter&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;5.5%&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;50%&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;94.5%&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;n_eff&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Rhat&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom[1]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.26640&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.02345&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2899&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6103.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom[2]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.05292&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.30550&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5976&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4258.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom[3]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.25210&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.42120&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.5831&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5681.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9995&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom[4]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.04298&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.18550&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.3221&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6510.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9996&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom[5]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.14800&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.07444&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.2785&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5360.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;bottom[93]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.01054&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.22520&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.4813&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1621.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9996&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50[1]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-3.38700&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.84400&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.3980&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4842.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50[2]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-3.26300&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-2.54000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-1.9200&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;4484.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0020&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50[3]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-5.83300&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-4.93800&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-4.1330&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;6467.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9993&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50[4]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-6.41500&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-5.83600&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-5.2860&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;7889.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9995&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50[5]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-4.60200&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-3.93300&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-3.3400&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;5696.0&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;log_IC50[93]&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-6.41600&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-4.05500&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-3.4590&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;801.6&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0010&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;At first glance, these results may seem unimpressive. Even though the posterior has concentrated compared to our prior, it is still fairly wide. Even the compounds with the narrowest estimate of potency has a 89% interval for &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt; spanning more than a unit, corresponding to more than an order of magnitude difference in concentration. That is quite a bit.&lt;/p&gt;
&lt;p&gt;Seen from another perspective though, we only had six data points to estimate each of those two parameters. If we were extremely confident in the resulting estimates that would be very suspicious. The means of the marginal posterior distributions are close to the truth, so we have good estimates for any downstream analysis, but the relatively wide distributions are there to remind us that our estimate is uncertain.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;posterior-predictive&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Posterior Predictive&lt;/h2&gt;
&lt;p&gt;One way to understand how much, or how little, our model has learned from the data is to visualise the posterior predictions along with the original data. Here is a curve where things went rather well&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;example_curves &amp;lt;- tibble::tibble(curve = c(3, 93))
example_curves$post_pred &amp;lt;- purrr::map(example_curves$curve, function(i) {
  posterior_samples %&amp;gt;%
  dplyr::mutate(
    log_IC50 = log_IC50[, i],
    bottom = bottom[, i]
  ) %&amp;gt;%
  tidyr::expand_grid(log_conc = seq(-2, -9, length.out = 50)) %&amp;gt;% 
  dplyr::mutate(tissue_response = purrr::pmap_dbl(
    list(log_conc, bottom, top, log_IC50, nH),
    hill_function
  )) %&amp;gt;%
  dplyr::group_by(log_conc) %&amp;gt;%
  dplyr::summarise(
    response_mean = mean(tissue_response),
    response_upper = quantile(tissue_response, probs = 0.945),
    response_lower = quantile(tissue_response, probs = 0.055)
  ) %&amp;gt;%
  ggplot() +
  geom_ribbon(
    aes(
      x = log_conc,
      ymin = response_lower,
      ymax = response_upper,
      fill = &amp;quot;89% interval&amp;quot;
    ),
    alpha = 0.5
  ) +
  geom_line(aes(x = log_conc, y = response_mean, colour = &amp;quot;Posterior mean&amp;quot;)) +
  geom_point(
    data = dplyr::filter(observations, compound == i),
    aes(x = log_conc, y = response, colour = &amp;quot;Observations&amp;quot;)
  ) +
  geom_function(
    fun = hill_function,
    args = true_parameters[i, -c(1,6)],
    mapping = aes(colour = &amp;quot;True tissue response&amp;quot;)
  ) +
  labs(
    y = &amp;quot;Tissue response&amp;quot;,
    x = &amp;quot;Log ligand concentration [M]&amp;quot;,
    colour = &amp;quot;&amp;quot;,
    fill = &amp;quot;&amp;quot;,
    title = paste(&amp;quot;Posterior Predictive for Compound&amp;quot;, i)
  ) +
  scale_fill_manual(values = c(&amp;quot;89% interval&amp;quot; = colour$azure)) +
  theme_minimal()
})
example_curves$post_pred_coloured &amp;lt;- purrr::map(
  example_curves$post_pred,
  function(p) {
    p + scale_colour_manual(values = c(
      &amp;quot;Posterior mean&amp;quot; = colour$blue_dark,
      &amp;quot;Observations&amp;quot; = colour$orange_light,
      &amp;quot;True tissue response&amp;quot; = colour$orange_dark
    ))
  }
)
example_curves$post_pred_coloured[[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-two/index_files/figure-html/posterior_predictive-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;Our model is very open about its uncertainty. While the posterior mean is a great compromise between the data points, the model also knows that the assay is noisy, and it has used the pooled estimate of that noise across all curves to give us this nice interval for any point prediction. Not also how the model has confidently ruled out one of the points as an outlier. I think this is a lot of information gained from just a few points of data.&lt;/p&gt;
&lt;p&gt;Now letâs have a look at a more difficult case&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;example_curves$post_pred_coloured[[2]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-two/index_files/figure-html/posterior_predictive_2-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;This one is difficult because we did not get any good points on the curved part of the tissue response. This makes the estimate for &lt;span class=&#34;math inline&#34;&gt;\(\log_{10}(IC_{50})\)&lt;/span&gt; very uncertain, resulting in the bulge in the middle. Despite all this, the 89% interval nicely contains the true tissue response.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;model-comparison&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Model Comparison&lt;/h2&gt;
&lt;p&gt;Before we wrap up, I want to highlight why I like this approach to modelling my screening assay data in this way by comparing it to a classic model fitting method.&lt;/p&gt;
&lt;p&gt;For the comparison, we will use non-linear least squares to directly fit the Hill equation to the data points for a compound. We cannot put flexible priors on the parameters, but we can set constraints that limit the parameters to a range comparable to that of the priors in our Bayesian model.&lt;/p&gt;
&lt;p&gt;Again letâs start by looking at the case where things go well.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;example_curves$model_comp &amp;lt;- purrr::map2(
  example_curves$curve,
  example_curves$post_pred,
  function(curve, p) {
    mod &amp;lt;- nls(
      response ~ top + (bottom - top)/(1 + 10^((log_IC50 - log_conc)*nH)),
      data = dplyr::filter(observations, compound == curve),
      algorithm = &amp;quot;port&amp;quot;,
      start = list(bottom = 0.25, top = 1, log_IC50 = -6, nH = 1),
      lower = list(bottom = -0.3, top = 0.98, log_IC50 = -9, nH = 0),
      upper = list(bottom = 1.0, top = 1.02, log_IC50 = -3, nH = 2)
    )
    
    p +
      geom_function(
        fun = hill_function,
        args = mod$m$getPars(),
        mapping = aes(colour = &amp;quot;NLS fit&amp;quot;)
      ) +
      scale_colour_manual(values = c(
        &amp;quot;Posterior mean&amp;quot; = colour$blue_dark,
        &amp;quot;Observations&amp;quot; = colour$orange_light,
        &amp;quot;True tissue response&amp;quot; = colour$orange_dark,
        &amp;quot;NLS fit&amp;quot; = &amp;quot;black&amp;quot;
      ))
  }
)

example_curves$model_comp[[1]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-two/index_files/figure-html/model_comp-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;The least squares model is almost identical to our posterior mean estimate and both are close to the truth. This is not altogether surprising, as we had great data points to fit the model curve on. However, only the Bayesian model comes with an estimate of the uncertainty. With the least squares model, we could easily grow overconfident in the fitted parameters.&lt;/p&gt;
&lt;p&gt;Letâs have a look at the more difficult case.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;example_curves$model_comp[[2]]&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;../../post/bespoke-biochem-two/index_files/figure-html/model_comp_2-1.png&#34; width=&#34;90%&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In this case, the least squares fit was not really able to find a good foothold in the data, yet it confidently reports the fitted parameters. Granted, our Bayesian model had its troubles too, but at least it reports the extreme uncertainty.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;conclusion&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;In this study, we built and explored a Bayesian model for understanding large compound screening assays. We showed that we can use our prior knowledge to build a bespoke model and that such a model provides us with more useful information than a conventional least squares model. We experienced that it takes a bit more work to ensure the quality of a Bayesian model, but we tried out a few ways to do so.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;next-steps&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Next Steps&lt;/h1&gt;
&lt;p&gt;In the preceding study, we assumed that the compounds were random perturbations on a known endogenous ligand. We also assumed that the observations arose under similar circumstances such that they shared a common noise parameter. These assumptions may hold in some cases, but often we know more about our data than that.&lt;/p&gt;
&lt;p&gt;Maybe the permutations could be described with categories or other labels.&lt;/p&gt;
&lt;p&gt;Maybe we performed our screening assay in batches across multiple days, resulting in a possible batch effect on observation data quality.&lt;/p&gt;
&lt;p&gt;Either of these cases add another layer of complexity, but batch effects and labels are both things we can handle with a bespoke Bayesian model. These are the subjects of a future study. Stay tuned!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;license&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;License&lt;/h1&gt;
&lt;p&gt;The content of this project itself is licensed under the &lt;a href=&#34;https://creativecommons.org/licenses/by-sa/4.0/&#34;&gt;Creative Commons Attribution-ShareAlike 4.0 International license&lt;/a&gt;, and the underlying code is licensed under the &lt;a href=&#34;https://github.com/AnHosu/bespoke-bayesian-biochem/blob/main/LICENSE&#34;&gt;GNU General Public License v3.0 license&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
